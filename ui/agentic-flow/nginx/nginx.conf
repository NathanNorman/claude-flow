user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ws_limit:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    
    # Upstream API servers
    upstream api_backend {
        least_conn;
        
        # Health check
        # health_check interval=5s fails=3 passes=2;
        
        server node1.internal:3001 max_fails=3 fail_timeout=30s;
        server node2.internal:3001 max_fails=3 fail_timeout=30s;
        server node3.internal:3001 max_fails=3 fail_timeout=30s;
        
        # Connection pooling
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Upstream WebSocket servers with sticky sessions
    upstream websocket_backend {
        ip_hash; # Sticky sessions based on client IP
        
        server node1.internal:3002 max_fails=3 fail_timeout=30s;
        server node2.internal:3002 max_fails=3 fail_timeout=30s;
        server node3.internal:3002 max_fails=3 fail_timeout=30s;
    }
    
    # Static file cache
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m 
                     max_size=1g inactive=60m use_temp_path=off;
    
    # API response cache
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m 
                     max_size=500m inactive=10m use_temp_path=off;
    
    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name agentic-flow.example.com;
        
        # Redirect to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name agentic-flow.example.com;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/agentic-flow.crt;
        ssl_certificate_key /etc/nginx/ssl/agentic-flow.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/ca-bundle.crt;
        
        # Root directory for static files
        root /var/www/agentic-flow/dist;
        index index.html;
        
        # Security
        limit_conn conn_limit 100;
        client_max_body_size 10M;
        
        # Static files with caching
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                proxy_cache static_cache;
                proxy_cache_valid 200 1y;
            }
        }
        
        # API proxy
        location /api/ {
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache GET requests
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_cache_control;
            
            # Health check endpoint
            location = /api/health {
                access_log off;
                proxy_pass http://api_backend;
                proxy_cache off;
            }
        }
        
        # WebSocket proxy
        location /socket.io/ {
            # Rate limiting for WebSocket connections
            limit_req zone=ws_limit burst=10 nodelay;
            
            # Proxy to WebSocket backend
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            
            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for long-lived connections
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }
        
        # Monitoring endpoints
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8; # Internal network only
            deny all;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}