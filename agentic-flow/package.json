{
  "name": "@agentic-flow/core",
  "version": "1.0.0",
  "description": "Autonomous agent framework with natural language goal processing and inter-agent communication",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "tsc",
    "dev": "tsc --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:integration": "node -r ts-node/register tests/integration/test-runner.ts",
    "test:integration:integration": "jest --testPathPattern=tests/integration --testNamePattern=\"Provider Integration|Agent Coordination|Workflow Execution|Cross-Component\" --verbose",
    "test:integration:e2e": "jest --testPathPattern=tests/integration/end-to-end-scenarios.test.ts --verbose",
    "test:integration:performance": "jest --testPathPattern=tests/integration/performance-load.test.ts --verbose --detectOpenHandles",
    "test:integration:security": "jest --testPathPattern=tests/integration/security-reliability.test.ts --verbose",
    "test:integration:all": "jest --testPathPattern=tests/integration --verbose --maxWorkers=4",
    "test:integration:parallel": "node -r ts-node/register tests/integration/test-runner.ts --parallel --categories integration e2e performance security",
    "lint": "eslint src/**/*.ts",
    "format": "prettier --write \"src/**/*.ts\"",
    "typecheck": "tsc --noEmit",
    "clean": "rm -rf dist",
    "prepare": "npm run build",
    "ci:setup": "node -r ts-node/register -e \"require('./tests/integration/ci-integration').setupCI(process.argv[1], process.argv[2])\"",
    "ci:test": "node -r ts-node/register -e \"require('./tests/integration/ci-integration').runCITests(process.argv[1])\"",
    "api:dev": "tsx watch src/api/server.ts",
    "api:start": "node dist/api/server.js",
    "sdk:generate": "openapi-generator-cli generate",
    "docs:generate": "npx @redocly/openapi-cli build-docs src/api/openapi.yaml",
    "docs:serve": "npx http-server ./docs -p 8080"
  },
  "keywords": [
    "autonomous-agents",
    "multi-agent-systems",
    "ai-coordination",
    "natural-language-processing",
    "goal-engine"
  ],
  "author": "Agentic Flow Team",
  "license": "MIT",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.56.0",
    "@google/generative-ai": "^0.24.1",
    "@tensorflow/tfjs-node": "^4.22.0",
    "axios": "^1.6.2",
    "chalk": "^5.4.1",
    "cohere-ai": "^7.17.1",
    "commander": "^14.0.0",
    "compromise": "^14.10.0",
    "eventemitter3": "^5.0.1",
    "inquirer": "^12.8.0",
    "lodash": "^4.17.21",
    "ml-matrix": "^6.12.1",
    "natural": "^6.10.0",
    "openai": "^5.10.1",
    "p-queue": "^7.4.1",
    "prom-client": "^15.1.3",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "xstate": "^5.20.1",
    "yaml": "^2.8.0",
    "zod": "^3.25.76",
    "express": "^4.18.2",
    "@apollo/server": "^4.10.0",
    "graphql": "^16.8.1",
    "jsonwebtoken": "^9.0.2",
    "express-rate-limit": "^7.1.5",
    "swagger-ui-express": "^5.0.0",
    "openapi-types": "^12.1.3",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "bcrypt": "^5.1.1",
    "redis": "^4.6.12",
    "ws": "^8.16.0",
    "ajv": "^8.12.0"
  },
  "devDependencies": {
    "@mastra/core": "^0.10.15",
    "@types/jest": "^29.5.11",
    "@types/lodash": "^4.14.202",
    "@types/natural": "^5.1.4",
    "@types/node": "^20.10.5",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "eslint": "^8.56.0",
    "eslint-plugin-jest": "^27.9.0",
    "jest": "^29.7.0",
    "jest-html-reporters": "^3.1.5",
    "jest-junit": "^16.0.0",
    "prettier": "^3.1.1",
    "sqlite3": "^5.1.7",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.3.3",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/bcrypt": "^5.0.2",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/ws": "^8.5.10",
    "supertest": "^6.3.3",
    "@types/supertest": "^6.0.2",
    "openapi-generator": "^7.3.0"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.ts$": [
        "ts-jest",
        {
          "tsconfig": {
            "module": "commonjs"
          }
        }
      ]
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/types/**/*.ts",
      "!src/**/*.test.ts",
      "!src/**/*.spec.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "cobertura"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "testTimeout": 30000,
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.ts"
    ],
    "reporters": [
      "default",
      [
        "jest-html-reporters",
        {
          "publicPath": "./test-reports",
          "filename": "report.html",
          "expand": true
        }
      ],
      [
        "jest-junit",
        {
          "outputDirectory": "./test-reports",
          "outputName": "junit.xml",
          "classNameTemplate": "{classname}",
          "titleTemplate": "{title}",
          "ancestorSeparator": " â€º ",
          "usePathForSuiteName": true
        }
      ]
    ]
  }
}
