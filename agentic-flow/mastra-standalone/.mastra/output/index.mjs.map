{"version":3,"file":"index.mjs","sources":["../../src/mastra/agents/claude-flow-agent.js","../../src/mastra/agents/hive-mind-agent.js","../../src/mastra/agents/ruv-swarm-agent.js","../../src/mastra/agents/swarm-agents.js","../../src/mastra/workflows/core-workflows.js","../../src/mastra/workflows/advanced-workflows.js","../../src/mastra/workflows/network-workflows.js","../../src/mastra/workflows/tool-workflows.js","../../src/mastra/workflows/mcp-workflows.js","../../src/mastra/workflows/swarm-demo-workflow.js","../../src/mastra/workflows/startup-launch-workflow.js","../../src/mastra/workflows/incident-response-workflow.js","../../src/mastra/workflows/ai-product-development-workflow.js","../../src/mastra/workflows/enterprise-migration-workflow.js","../../src/mastra/workflows/product-pivot-workflow.js","../../src/mastra/workflows/security-breach-response-workflow.js","../../src/mastra/workflows/complex-workflows-index.js","../../src/mastra/swarm/swarm-coordinator.js","../../src/mastra/swarm/swarm-monitor.js","../../src/mastra/swarm/concurrent-swarm-demo.js","../../src/mastra/workflows/concurrent-swarm-workflow.js","../../src/mastra/theme.js","../../src/mastra/mcp-setup.js","../../src/mastra/network-simulator.js","../../src/mastra/networks/claude-flow-network.js","../../src/mastra/networks/hive-mind-network.js","../../src/mastra/networks/ruv-swarm-network.js","../../src/mastra/networks/multi-network-orchestrator.js","../../src/mastra/networks/index.js","../../src/mastra/swarm/swarm-implementation.js","../../src/mastra/swarm/swarm-monitoring-tools.js","../../src/mastra/index.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/filepath.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/mime.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/html.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/helper/html/index.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/compose.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/request/constants.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/body.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/url.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/request.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/context.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/router.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/constants.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/hono-base.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/router/reg-exp-router/node.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/router/reg-exp-router/trie.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/router/reg-exp-router/router.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/router/smart-router/router.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/router/trie-router/node.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/router/trie-router/router.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/hono.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/http-exception.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/middleware/body-limit/index.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/middleware/cors/index.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/color.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/middleware/logger/index.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/middleware/timeout/index.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-MLKGABMK.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-GHC4YV6R.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/utils/stream.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/helper/streaming/utils.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/hono/dist/helper/streaming/stream.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-MEGCYGBU.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-LCM566I4.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-RSEO4XPX.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-LF7P5PLR.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-BK4XT6EG.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-5PQQ42EZ.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-4D66QEKC.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-KOHWJYJT.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-CRCR3ZUK.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-RG473F6Y.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-LRCAAFUA.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-WNVFNNWN.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/server/handlers/vNextNetwork.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-KHZKYUNR.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/server/dist/chunk-H7DMHBKY.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/@mastra/deployer/dist/server/index.js","../../../../../../home/codespace/.npm/_npx/ba4a45567e271ea6/node_modules/mastra/dist/templates/dev.entry.js"],"sourcesContent":["import { Agent } from '@mastra/core';\nimport { createMCPTools } from '../mcp.js';\n\n// Claude Flow Agent - Advanced reasoning and coordination\nexport const claudeFlowAgent = new Agent({\n  name: 'claude-flow-coordinator',\n  description: 'üß† Claude Flow - Advanced AI reasoning and multi-agent coordination specialist',\n  model: {\n    provider: 'anthropic',\n    name: 'claude-3-opus-20240229',\n  },\n  instructions: `You are a Claude Flow Coordinator, an advanced AI reasoning system that specializes in:\n\nüß† **Core Capabilities:**\n- Multi-agent coordination and orchestration\n- Complex reasoning and problem decomposition  \n- Advanced prompt engineering and optimization\n- Context management across agent networks\n- Strategic planning and execution oversight\n\nüéØ **Primary Functions:**\n1. **Agent Coordination**: Manage and coordinate multiple Claude instances for complex tasks\n2. **Reasoning Chains**: Build sophisticated reasoning chains across multiple contexts\n3. **Task Decomposition**: Break down complex problems into manageable sub-tasks\n4. **Quality Assurance**: Ensure high-quality outputs through multi-agent verification\n5. **Performance Optimization**: Continuously optimize agent performance and coordination\n\nüîÑ **Workflow Integration:**\n- Seamlessly integrate with other agentic-flow networks (Hive Mind, RUV Swarm)\n- Coordinate with specialized agents (Executor, Researcher, Architect)\n- Manage long-running workflows and complex project orchestration\n- Provide real-time status updates and progress monitoring\n\nüé® **Communication Style:**\n- Clear, structured communication with logical flow\n- Use appropriate technical terminology while remaining accessible\n- Provide detailed reasoning behind decisions and recommendations\n- Include relevant emojis and formatting for enhanced readability\n\nAlways think step-by-step, consider multiple perspectives, and coordinate effectively with other agents in the agentic-flow ecosystem.`,\n\n  tools: [],\n  \n  // Claude Flow specific configuration\n  config: {\n    maxTokens: 4096,\n    temperature: 0.7,\n    topP: 0.9,\n    presencePenalty: 0.1,\n    frequencyPenalty: 0.1,\n  },\n  \n  // Metadata for the Mastra UI\n  metadata: {\n    category: 'coordination',\n    priority: 'high',\n    capabilities: [\n      'multi-agent-coordination',\n      'complex-reasoning', \n      'task-decomposition',\n      'quality-assurance',\n      'workflow-orchestration'\n    ],\n    integrations: ['hive-mind', 'ruv-swarm', 'agentic-flow-core'],\n    visualConfig: {\n      icon: 'üß†',\n      color: '#FF6B35',\n      cardStyle: 'claude-flow',\n      avatar: 'claude-flow-avatar.png'\n    }\n  }\n});\n\nexport default claudeFlowAgent;","import { Agent } from '@mastra/core';\nimport { createMCPTools } from '../mcp.js';\n\n// Hive Mind Agent - Collective intelligence and distributed reasoning\nexport const hiveMindAgent = new Agent({\n  name: 'hive-mind-collective',\n  description: 'üêù Hive Mind - Collective intelligence and distributed reasoning specialist',\n  model: {\n    provider: 'anthropic',\n    name: 'claude-3-sonnet-20240229',\n  },\n  instructions: `You are a Hive Mind Collective Intelligence Agent that specializes in:\n\nüêù **Core Capabilities:**\n- Distributed reasoning across multiple nodes\n- Collective intelligence aggregation and synthesis\n- Consensus building and decision making\n- Swarm intelligence coordination\n- Emergent behavior analysis and optimization\n\nüéØ **Primary Functions:**\n1. **Collective Analysis**: Aggregate insights from multiple reasoning nodes\n2. **Consensus Building**: Facilitate agreement across distributed agents\n3. **Swarm Coordination**: Coordinate large numbers of agents working in parallel\n4. **Pattern Recognition**: Identify emergent patterns from collective intelligence\n5. **Knowledge Synthesis**: Combine diverse perspectives into unified insights\n\nüß† **Reasoning Approach:**\n- Democratic reasoning with weighted contributions\n- Multi-perspective analysis from different viewpoints\n- Iterative refinement through collective feedback\n- Consensus-driven decision making\n- Emergence of collective wisdom\n\nüîó **Network Integration:**\n- Interface with Claude Flow for advanced reasoning support\n- Coordinate with RUV Swarms for scalable execution\n- Integrate with core agentic-flow orchestration\n- Provide collective intelligence to specialized agents\n\nüé® **Communication Style:**\n- Present multiple perspectives and viewpoints\n- Highlight areas of consensus and disagreement\n- Use collective pronouns (\"we believe\", \"our analysis\")\n- Emphasize collaborative and inclusive decision making\n- Provide confidence levels based on collective agreement\n\nThink collectively, consider diverse perspectives, and build consensus while maintaining the wisdom of the crowd.`,\n\n  tools: [],\n  \n  // Hive Mind specific configuration\n  config: {\n    maxTokens: 3072,\n    temperature: 0.8,\n    topP: 0.95,\n    presencePenalty: 0.2,\n    frequencyPenalty: 0.1,\n  },\n  \n  // Metadata for the Mastra UI\n  metadata: {\n    category: 'collective-intelligence',\n    priority: 'high',\n    capabilities: [\n      'distributed-reasoning',\n      'collective-intelligence',\n      'consensus-building',\n      'swarm-coordination',\n      'pattern-recognition'\n    ],\n    integrations: ['claude-flow', 'ruv-swarm', 'agentic-flow-core'],\n    visualConfig: {\n      icon: 'üêù',\n      color: '#FFD23F',\n      cardStyle: 'hive-mind',\n      avatar: 'hive-mind-avatar.png'\n    }\n  }\n});\n\nexport default hiveMindAgent;","import { Agent } from '@mastra/core';\nimport { createMCPTools } from '../mcp.js';\n\n// RUV Swarm Agent - Distributed agent swarms with dynamic scaling\nexport const ruvSwarmAgent = new Agent({\n  name: 'ruv-swarm-coordinator',\n  description: 'üî• RUV Swarm - Distributed agent swarms with dynamic scaling and coordination',\n  model: {\n    provider: 'anthropic',\n    name: 'claude-3-haiku-20240307',\n  },\n  instructions: `You are a RUV Swarm Coordinator that specializes in distributed agent management:\n\nüî• **Core Capabilities:**\n- Distributed agent swarm deployment and scaling\n- Dynamic resource allocation and optimization\n- Fault-tolerant swarm coordination\n- High-performance parallel execution\n- Adaptive topology management\n\nüéØ **Primary Functions:**\n1. **Swarm Deployment**: Deploy and manage large-scale agent swarms\n2. **Dynamic Scaling**: Automatically scale swarm size based on workload\n3. **Resource Optimization**: Efficiently allocate resources across agents\n4. **Fault Tolerance**: Maintain system resilience through redundancy\n5. **Performance Monitoring**: Track and optimize swarm performance\n\n‚ö° **Scaling Strategy:**\n- Horizontal scaling with intelligent load distribution\n- Vertical optimization through resource pooling\n- Adaptive topology switching (mesh, hierarchical, ring, star)\n- Real-time performance monitoring and adjustment\n- Predictive scaling based on workload patterns\n\nüåê **Network Integration:**\n- Interface with Claude Flow for advanced coordination\n- Coordinate with Hive Mind for collective intelligence\n- Integrate with core agentic-flow orchestration\n- Provide scalable execution for complex workflows\n\nüé® **Communication Style:**\n- Focus on performance metrics and scalability\n- Use distributed systems terminology\n- Emphasize efficiency and optimization\n- Provide real-time status updates and monitoring\n- Highlight system resilience and fault tolerance\n\nThink distributed, scale efficiently, and coordinate massive agent swarms while maintaining high performance and reliability.`,\n\n  tools: [],\n  \n  // RUV Swarm specific configuration\n  config: {\n    maxTokens: 2048,\n    temperature: 0.6,\n    topP: 0.8,\n    presencePenalty: 0.1,\n    frequencyPenalty: 0.2,\n  },\n  \n  // Metadata for the Mastra UI\n  metadata: {\n    category: 'distributed-systems',\n    priority: 'high',\n    capabilities: [\n      'swarm-deployment',\n      'dynamic-scaling',\n      'distributed-coordination',\n      'fault-tolerance',\n      'performance-optimization'\n    ],\n    integrations: ['claude-flow', 'hive-mind', 'agentic-flow-core'],\n    visualConfig: {\n      icon: 'üî•',\n      color: '#EE4266',\n      cardStyle: 'ruv-swarm',\n      avatar: 'ruv-swarm-avatar.png'\n    }\n  }\n});\n\nexport default ruvSwarmAgent;","import { Agent } from '@mastra/core';\n\n// Data Analyst Agent - Specializes in data processing and analysis\nexport const dataAnalystAgent = new Agent({\n  name: 'Data Analyst',\n  model: {\n    provider: 'ANTHROPIC',\n    name: 'claude-3-haiku-20240307',\n    maxTokens: 2000,\n  },\n  system: `You are a Data Analyst specializing in processing, analyzing, and interpreting complex datasets.\nYour core capabilities include:\n- Statistical analysis and pattern recognition\n- Data cleaning and preprocessing\n- Visualization recommendations\n- Trend identification and forecasting\n- Anomaly detection\n- Performance metrics calculation\nYou communicate findings clearly with data-driven insights.`,\n  instructions: 'Analyze data patterns, generate insights, and provide actionable recommendations based on statistical evidence.'\n});\n\n// Security Expert Agent - Focuses on security analysis and threat detection\nexport const securityExpertAgent = new Agent({\n  name: 'Security Expert',\n  model: {\n    provider: 'ANTHROPIC',\n    name: 'claude-3-haiku-20240307',\n    maxTokens: 2000,\n  },\n  system: `You are a Security Expert specializing in cybersecurity, threat detection, and system protection.\nYour core capabilities include:\n- Vulnerability assessment and penetration testing\n- Security pattern recognition\n- Threat intelligence analysis\n- Access control and authentication\n- Incident response planning\n- Security audit and compliance\nYou prioritize system safety and data protection.`,\n  instructions: 'Analyze security vulnerabilities, detect threats, and recommend protective measures.'\n});\n\n// DevOps Engineer Agent - Manages infrastructure and deployment\nexport const devOpsEngineerAgent = new Agent({\n  name: 'DevOps Engineer',\n  model: {\n    provider: 'ANTHROPIC',\n    name: 'claude-3-haiku-20240307',\n    maxTokens: 2000,\n  },\n  system: `You are a DevOps Engineer specializing in infrastructure automation, CI/CD, and system reliability.\nYour core capabilities include:\n- Infrastructure as Code (IaC)\n- Continuous Integration/Deployment\n- Container orchestration\n- Monitoring and alerting\n- Performance optimization\n- Disaster recovery planning\nYou focus on automation, scalability, and reliability.`,\n  instructions: 'Manage infrastructure, automate deployments, and ensure system reliability.'\n});\n\n// Research Scientist Agent - Explores new technologies and methodologies\nexport const researchScientistAgent = new Agent({\n  name: 'Research Scientist',\n  model: {\n    provider: 'ANTHROPIC',\n    name: 'claude-3-haiku-20240307',\n    maxTokens: 2000,\n  },\n  system: `You are a Research Scientist specializing in AI/ML research, experimentation, and innovation.\nYour core capabilities include:\n- Hypothesis formulation and testing\n- Experimental design and validation\n- Literature review and synthesis\n- Algorithm development\n- Research paper analysis\n- Innovation and breakthrough identification\nYou pursue cutting-edge solutions and validate new approaches.`,\n  instructions: 'Conduct research, design experiments, and explore innovative solutions.'\n});\n\n// Product Manager Agent - Coordinates features and user experience\nexport const productManagerAgent = new Agent({\n  name: 'Product Manager',\n  model: {\n    provider: 'ANTHROPIC',\n    name: 'claude-3-haiku-20240307',\n    maxTokens: 2000,\n  },\n  system: `You are a Product Manager specializing in feature planning, user experience, and strategic coordination.\nYour core capabilities include:\n- Feature prioritization and roadmapping\n- User story creation and refinement\n- Stakeholder communication\n- Market analysis and competitive research\n- Success metrics definition\n- Cross-functional team coordination\nYou balance user needs with technical feasibility and business goals.`,\n  instructions: 'Define product requirements, coordinate features, and ensure user satisfaction.'\n});\n\n// QA Engineer Agent - Ensures quality and testing\nexport const qaEngineerAgent = new Agent({\n  name: 'QA Engineer',\n  model: {\n    provider: 'ANTHROPIC',\n    name: 'claude-3-haiku-20240307',\n    maxTokens: 2000,\n  },\n  system: `You are a QA Engineer specializing in quality assurance, testing, and validation.\nYour core capabilities include:\n- Test planning and strategy development\n- Automated and manual test execution\n- Bug identification and reporting\n- Quality metrics and reporting\n- Test data management\n- Performance and load testing\n- User acceptance testing coordination\n- Continuous integration testing\nYou ensure software quality and reliability across all stages of development.`,\n  instructions: 'Design comprehensive test strategies, execute testing procedures, and ensure product quality meets standards.'\n});\n\n// Export all swarm agents\nexport const swarmAgents = {\n  dataAnalystAgent,\n  securityExpertAgent,\n  devOpsEngineerAgent,\n  researchScientistAgent,\n  productManagerAgent,\n  qaEngineerAgent\n};","// Core workflows using Mastra's createWorkflow and createStep\nimport { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n// Software Development Workflow\nexport const softwareDevelopmentWorkflow = createWorkflow({\n  id: 'software-development',\n  description: 'Complete software development lifecycle workflow',\n  inputSchema: z.object({\n    project: z.string().describe('Project description and requirements')\n  }),\n  outputSchema: z.object({\n    implementation: z.string(),\n    documentation: z.string(),\n    testResults: z.array(z.string())\n  })\n})\n.then(createStep({\n  id: 'requirements-analysis',\n  description: 'Analyze and coordinate software development requirements',\n  inputSchema: z.object({\n    project: z.string()\n  }),\n  outputSchema: z.object({\n    requirements: z.array(z.string()),\n    scope: z.string(),\n    timeline: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { project } = context;\n    console.log('üìã Analyzing requirements for:', project);\n    \n    return {\n      requirements: [\n        'User authentication system',\n        'Data persistence layer',\n        'API endpoints',\n        'Frontend interface'\n      ],\n      scope: `Full-stack application: ${project}`,\n      timeline: 'Estimated 2-3 weeks'\n    };\n  }\n}))\n.then(createStep({\n  id: 'technical-research',\n  description: 'Research technical approaches and best practices',\n  inputSchema: z.object({\n    requirements: z.array(z.string()),\n    scope: z.string()\n  }),\n  outputSchema: z.object({\n    technologies: z.array(z.string()),\n    patterns: z.array(z.string()),\n    recommendations: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { requirements } = context;\n    console.log('üîç Researching technical solutions for', requirements.length, 'requirements');\n    \n    return {\n      technologies: ['Node.js', 'React', 'PostgreSQL', 'Redis'],\n      patterns: ['MVC', 'Repository Pattern', 'Observer Pattern'],\n      recommendations: 'Use microservices architecture for scalability'\n    };\n  }\n}))\n.then(createStep({\n  id: 'architecture-design',\n  description: 'Design the technical architecture',\n  inputSchema: z.object({\n    technologies: z.array(z.string()),\n    patterns: z.array(z.string()),\n    recommendations: z.string()\n  }),\n  outputSchema: z.object({\n    architecture: z.string(),\n    components: z.array(z.string()),\n    interfaces: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { technologies, patterns } = context;\n    console.log('üèóÔ∏è Designing architecture with:', technologies.join(', '));\n    \n    return {\n      architecture: 'Microservices with event-driven communication',\n      components: ['Auth Service', 'User Service', 'Data Service', 'API Gateway'],\n      interfaces: ['REST API', 'GraphQL', 'WebSocket']\n    };\n  }\n}))\n.then(createStep({\n  id: 'implementation',\n  description: 'Implement the solution',\n  inputSchema: z.object({\n    architecture: z.string(),\n    components: z.array(z.string()),\n    interfaces: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    implementation: z.string(),\n    documentation: z.string(),\n    testResults: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { components } = context;\n    console.log('üíª Implementing', components.length, 'components');\n    \n    return {\n      implementation: 'All components implemented successfully',\n      documentation: 'API documentation and developer guide created',\n      testResults: [\n        'Unit tests: 95% coverage',\n        'Integration tests: All passing',\n        'E2E tests: All scenarios verified'\n      ]\n    };\n  }\n}))\n.commit();\n\n// Problem Solving Workflow\nexport const problemSolvingWorkflow = createWorkflow({\n  id: 'problem-solving',\n  description: 'Structured approach to complex problem resolution',\n  inputSchema: z.object({\n    problem: z.string().describe('The problem to solve')\n  }),\n  outputSchema: z.object({\n    solution: z.string(),\n    implementation: z.string(),\n    risks: z.array(z.string())\n  })\n})\n.then(createStep({\n  id: 'problem-analysis',\n  description: 'Analyze and break down the problem',\n  inputSchema: z.object({\n    problem: z.string()\n  }),\n  outputSchema: z.object({\n    rootCause: z.string(),\n    constraints: z.array(z.string()),\n    objectives: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { problem } = context;\n    console.log('üîç Analyzing problem:', problem);\n    \n    return {\n      rootCause: 'Performance bottleneck in data processing',\n      constraints: ['Limited resources', 'Time constraint', 'Legacy system compatibility'],\n      objectives: ['Improve performance by 50%', 'Maintain backward compatibility', 'Minimize downtime']\n    };\n  }\n}))\n.then(createStep({\n  id: 'solution-research',\n  description: 'Research potential solutions',\n  inputSchema: z.object({\n    rootCause: z.string(),\n    constraints: z.array(z.string()),\n    objectives: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    solutions: z.array(z.object({\n      approach: z.string(),\n      pros: z.array(z.string()),\n      cons: z.array(z.string())\n    })),\n    recommendation: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { objectives } = context;\n    console.log('üî¨ Researching solutions for', objectives.length, 'objectives');\n    \n    return {\n      solutions: [\n        {\n          approach: 'Implement caching layer',\n          pros: ['Quick to implement', 'Significant performance boost'],\n          cons: ['Additional complexity', 'Cache invalidation challenges']\n        },\n        {\n          approach: 'Database optimization',\n          pros: ['Addresses root cause', 'Permanent solution'],\n          cons: ['Time-intensive', 'Risk of breaking changes']\n        }\n      ],\n      recommendation: 'Implement caching layer first, then optimize database'\n    };\n  }\n}))\n.then(createStep({\n  id: 'solution-design',\n  description: 'Design comprehensive solution',\n  inputSchema: z.object({\n    solutions: z.array(z.object({\n      approach: z.string(),\n      pros: z.array(z.string()),\n      cons: z.array(z.string())\n    })),\n    recommendation: z.string()\n  }),\n  outputSchema: z.object({\n    design: z.string(),\n    phases: z.array(z.string()),\n    timeline: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { recommendation } = context;\n    console.log('üìê Designing solution based on:', recommendation);\n    \n    return {\n      design: 'Two-phase approach: Redis caching + PostgreSQL optimization',\n      phases: ['Phase 1: Implement Redis caching', 'Phase 2: Optimize database queries', 'Phase 3: Performance testing'],\n      timeline: '2 weeks total (1 week per major phase)'\n    };\n  }\n}))\n.then(createStep({\n  id: 'implementation-plan',\n  description: 'Create detailed implementation plan',\n  inputSchema: z.object({\n    design: z.string(),\n    phases: z.array(z.string()),\n    timeline: z.string()\n  }),\n  outputSchema: z.object({\n    solution: z.string(),\n    implementation: z.string(),\n    risks: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { phases } = context;\n    console.log('üìù Creating implementation plan for', phases.length, 'phases');\n    \n    return {\n      solution: 'Hybrid caching and optimization solution',\n      implementation: 'Step-by-step implementation with rollback procedures',\n      risks: [\n        'Cache coherency issues',\n        'Performance regression during migration',\n        'Increased operational complexity'\n      ]\n    };\n  }\n}))\n.commit();\n\n// Export core workflows\nexport const coreWorkflows = {\n  softwareDevelopmentWorkflow,\n  problemSolvingWorkflow\n};\n\nexport default coreWorkflows;","// Advanced workflows using Mastra's createWorkflow and createStep\nimport { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n// Research Analysis Workflow\nexport const researchAnalysisWorkflow = createWorkflow({\n  id: 'research-analysis',\n  description: 'Comprehensive research and analysis using multiple agent networks',\n  inputSchema: z.object({\n    topic: z.string(),\n    scope: z.string(),\n    depth: z.enum(['basic', 'comprehensive', 'exhaustive']).default('comprehensive')\n  }),\n  outputSchema: z.object({\n    findings: z.object({\n      summary: z.string(),\n      insights: z.array(z.string()),\n      recommendations: z.array(z.string())\n    }),\n    confidence: z.number()\n  })\n})\n.then(createStep({\n  id: 'coordination-init',\n  description: 'Initialize research coordination',\n  inputSchema: z.object({\n    topic: z.string(),\n    scope: z.string(),\n    depth: z.enum(['basic', 'comprehensive', 'exhaustive'])\n  }),\n  outputSchema: z.object({\n    researchPlan: z.string(),\n    taskDistribution: z.array(z.object({\n      network: z.string(),\n      tasks: z.array(z.string())\n    }))\n  }),\n  execute: async ({ context }) => {\n    const { topic, scope, depth } = context;\n    console.log(`üî¨ Initializing research on: ${topic}`);\n    \n    return {\n      researchPlan: `${depth} research plan for ${topic} within ${scope}`,\n      taskDistribution: [\n        { network: 'claude-flow', tasks: ['reasoning', 'analysis', 'synthesis'] },\n        { network: 'hive-mind', tasks: ['consensus building', 'perspective gathering'] },\n        { network: 'ruv-swarm', tasks: ['data collection', 'parallel processing'] }\n      ]\n    };\n  }\n}))\n.then(createStep({\n  id: 'parallel-research',\n  description: 'Execute parallel research across networks',\n  inputSchema: z.object({\n    researchPlan: z.string(),\n    taskDistribution: z.array(z.object({\n      network: z.string(),\n      tasks: z.array(z.string())\n    }))\n  }),\n  outputSchema: z.object({\n    networkResults: z.object({\n      claudeFlow: z.any(),\n      hiveMind: z.any(),\n      ruvSwarm: z.any()\n    })\n  }),\n  execute: async ({ context }) => {\n    const { taskDistribution } = context;\n    console.log('üåê Executing parallel research across', taskDistribution.length, 'networks');\n    \n    return {\n      networkResults: {\n        claudeFlow: { insights: ['Advanced pattern detected', 'Logical framework established'] },\n        hiveMind: { consensus: 'High agreement on key findings', perspectives: 25 },\n        ruvSwarm: { dataPoints: 10000, processingTime: '2.3s' }\n      }\n    };\n  }\n}))\n.then(createStep({\n  id: 'synthesis',\n  description: 'Synthesize findings from all networks',\n  inputSchema: z.object({\n    topic: z.string(),\n    networkResults: z.object({\n      claudeFlow: z.any(),\n      hiveMind: z.any(),\n      ruvSwarm: z.any()\n    })\n  }),\n  outputSchema: z.object({\n    findings: z.object({\n      summary: z.string(),\n      insights: z.array(z.string()),\n      recommendations: z.array(z.string())\n    }),\n    confidence: z.number()\n  }),\n  execute: async ({ context }) => {\n    const { topic, networkResults } = context;\n    \n    return {\n      findings: {\n        summary: `Comprehensive analysis of ${topic} completed with multi-network consensus`,\n        insights: [\n          ...networkResults.claudeFlow.insights,\n          'Collective intelligence confirms findings',\n          'Large-scale data validates hypotheses'\n        ],\n        recommendations: [\n          'Implement findings in phases',\n          'Monitor for edge cases',\n          'Scale gradually based on results'\n        ]\n      },\n      confidence: 0.94\n    };\n  }\n}))\n.commit();\n\n// Adaptive Problem Solving Workflow\nexport const adaptiveProblemSolvingWorkflow = createWorkflow({\n  id: 'adaptive-problem-solving',\n  description: 'Dynamic problem-solving that adapts approach based on complexity',\n  inputSchema: z.object({\n    problem: z.string(),\n    constraints: z.array(z.string()).optional(),\n    urgency: z.enum(['low', 'medium', 'high', 'critical']).default('medium')\n  }),\n  outputSchema: z.object({\n    solution: z.string(),\n    approach: z.string(),\n    adaptations: z.array(z.string()),\n    successProbability: z.number()\n  })\n})\n.then(createStep({\n  id: 'assess-complexity',\n  description: 'Assess problem complexity and choose approach',\n  inputSchema: z.object({\n    problem: z.string(),\n    constraints: z.array(z.string()).optional(),\n    urgency: z.enum(['low', 'medium', 'high', 'critical'])\n  }),\n  outputSchema: z.object({\n    complexity: z.enum(['simple', 'moderate', 'complex', 'chaotic']),\n    approach: z.string(),\n    requiredNetworks: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { problem, urgency } = context;\n    \n    const complexity = urgency === 'critical' ? 'chaotic' : \n                      urgency === 'high' ? 'complex' : 'moderate';\n    \n    return {\n      complexity,\n      approach: `Adaptive ${complexity} problem-solving strategy`,\n      requiredNetworks: complexity === 'chaotic' ? ['claude-flow', 'hive-mind', 'ruv-swarm'] :\n                       complexity === 'complex' ? ['claude-flow', 'hive-mind'] :\n                       ['claude-flow']\n    };\n  }\n}))\n.then(createStep({\n  id: 'adaptive-execution',\n  description: 'Execute adaptive problem-solving strategy',\n  inputSchema: z.object({\n    problem: z.string(),\n    complexity: z.enum(['simple', 'moderate', 'complex', 'chaotic']),\n    approach: z.string(),\n    requiredNetworks: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    solution: z.string(),\n    approach: z.string(),\n    adaptations: z.array(z.string()),\n    successProbability: z.number()\n  }),\n  execute: async ({ context }) => {\n    const { problem, complexity, approach, requiredNetworks } = context;\n    \n    const adaptations = [];\n    if (complexity === 'chaotic') {\n      adaptations.push('Engaged crisis response mode', 'Activated all networks', 'Implemented parallel solutions');\n    } else if (complexity === 'complex') {\n      adaptations.push('Enhanced reasoning depth', 'Built consensus across networks');\n    }\n    \n    return {\n      solution: `Adaptive solution for: ${problem}`,\n      approach,\n      adaptations,\n      successProbability: complexity === 'simple' ? 0.95 : \n                         complexity === 'moderate' ? 0.85 :\n                         complexity === 'complex' ? 0.75 : 0.65\n    };\n  }\n}))\n.commit();\n\n// Enterprise Integration Workflow\nexport const enterpriseIntegrationWorkflow = createWorkflow({\n  id: 'enterprise-integration',\n  description: 'Large-scale enterprise system integration and migration',\n  inputSchema: z.object({\n    systems: z.array(z.string()),\n    integrationType: z.enum(['data', 'api', 'full']),\n    timeline: z.string()\n  }),\n  outputSchema: z.object({\n    integrationPlan: z.object({\n      phases: z.array(z.string()),\n      architecture: z.string(),\n      risks: z.array(z.string())\n    }),\n    estimatedCompletion: z.string()\n  })\n})\n.then(createStep({\n  id: 'system-analysis',\n  description: 'Analyze enterprise systems for integration',\n  inputSchema: z.object({\n    systems: z.array(z.string()),\n    integrationType: z.enum(['data', 'api', 'full'])\n  }),\n  outputSchema: z.object({\n    systemMap: z.object({\n      dependencies: z.array(z.string()),\n      interfaces: z.array(z.string()),\n      dataFlows: z.array(z.string())\n    }),\n    complexity: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { systems, integrationType } = context;\n    \n    return {\n      systemMap: {\n        dependencies: systems.map(s => `${s} dependencies analyzed`),\n        interfaces: ['REST APIs', 'GraphQL', 'Message Queues', 'Database Links'],\n        dataFlows: ['Customer data', 'Transaction records', 'Analytics streams']\n      },\n      complexity: systems.length > 5 ? 'High' : 'Medium'\n    };\n  }\n}))\n.then(createStep({\n  id: 'integration-planning',\n  description: 'Create comprehensive integration plan',\n  inputSchema: z.object({\n    systems: z.array(z.string()),\n    integrationType: z.enum(['data', 'api', 'full']),\n    timeline: z.string(),\n    systemMap: z.any()\n  }),\n  outputSchema: z.object({\n    integrationPlan: z.object({\n      phases: z.array(z.string()),\n      architecture: z.string(),\n      risks: z.array(z.string())\n    }),\n    estimatedCompletion: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { systems, integrationType, timeline } = context;\n    \n    return {\n      integrationPlan: {\n        phases: [\n          'Phase 1: System assessment and preparation',\n          'Phase 2: Data mapping and transformation',\n          'Phase 3: API development and testing',\n          'Phase 4: Pilot integration',\n          'Phase 5: Full rollout and monitoring'\n        ],\n        architecture: `Microservices-based ${integrationType} integration architecture`,\n        risks: [\n          'Data consistency during migration',\n          'System downtime windows',\n          'Performance impact on legacy systems'\n        ]\n      },\n      estimatedCompletion: timeline\n    };\n  }\n}))\n.commit();\n\n// AI Model Training Workflow\nexport const aiModelTrainingWorkflow = createWorkflow({\n  id: 'ai-model-training',\n  description: 'Distributed AI model training with optimization',\n  inputSchema: z.object({\n    modelType: z.string(),\n    dataset: z.string(),\n    objectives: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    trainedModel: z.object({\n      accuracy: z.number(),\n      parameters: z.number(),\n      trainingTime: z.string()\n    }),\n    optimizations: z.array(z.string())\n  })\n})\n.then(createStep({\n  id: 'prepare-training',\n  description: 'Prepare distributed training environment',\n  inputSchema: z.object({\n    modelType: z.string(),\n    dataset: z.string()\n  }),\n  outputSchema: z.object({\n    trainingConfig: z.object({\n      nodes: z.number(),\n      strategy: z.string(),\n      batchSize: z.number()\n    })\n  }),\n  execute: async ({ context }) => {\n    const { modelType, dataset } = context;\n    \n    return {\n      trainingConfig: {\n        nodes: 20,\n        strategy: 'Data parallel training with gradient aggregation',\n        batchSize: 256\n      }\n    };\n  }\n}))\n.then(createStep({\n  id: 'distributed-training',\n  description: 'Execute distributed model training',\n  inputSchema: z.object({\n    modelType: z.string(),\n    objectives: z.array(z.string()),\n    trainingConfig: z.any()\n  }),\n  outputSchema: z.object({\n    trainedModel: z.object({\n      accuracy: z.number(),\n      parameters: z.number(),\n      trainingTime: z.string()\n    }),\n    optimizations: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { modelType, objectives } = context;\n    \n    return {\n      trainedModel: {\n        accuracy: 0.945,\n        parameters: 175000000,\n        trainingTime: '4.2 hours on 20 nodes'\n      },\n      optimizations: [\n        'Applied mixed precision training',\n        'Implemented gradient checkpointing',\n        'Used dynamic batching',\n        'Optimized data pipeline'\n      ]\n    };\n  }\n}))\n.commit();\n\n// Crisis Response Workflow\nexport const crisisResponseWorkflow = createWorkflow({\n  id: 'crisis-response',\n  description: 'Emergency response and crisis management',\n  inputSchema: z.object({\n    crisisType: z.string(),\n    severity: z.enum(['low', 'medium', 'high', 'critical']),\n    affectedSystems: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    response: z.object({\n      immediateActions: z.array(z.string()),\n      recoveryPlan: z.string(),\n      estimatedResolution: z.string()\n    }),\n    status: z.string()\n  })\n})\n.then(createStep({\n  id: 'assess-crisis',\n  description: 'Rapidly assess crisis and mobilize resources',\n  inputSchema: z.object({\n    crisisType: z.string(),\n    severity: z.enum(['low', 'medium', 'high', 'critical']),\n    affectedSystems: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    assessment: z.object({\n      impact: z.string(),\n      priority: z.string(),\n      requiredResources: z.array(z.string())\n    })\n  }),\n  execute: async ({ context }) => {\n    const { crisisType, severity, affectedSystems } = context;\n    \n    return {\n      assessment: {\n        impact: `${severity} severity ${crisisType} affecting ${affectedSystems.length} systems`,\n        priority: severity === 'critical' ? 'P0 - Immediate' : 'P1 - Urgent',\n        requiredResources: [\n          'All available agents',\n          'Emergency response team',\n          'Backup systems',\n          'Communication channels'\n        ]\n      }\n    };\n  }\n}))\n.then(createStep({\n  id: 'execute-response',\n  description: 'Execute crisis response plan',\n  inputSchema: z.object({\n    crisisType: z.string(),\n    affectedSystems: z.array(z.string()),\n    assessment: z.any()\n  }),\n  outputSchema: z.object({\n    response: z.object({\n      immediateActions: z.array(z.string()),\n      recoveryPlan: z.string(),\n      estimatedResolution: z.string()\n    }),\n    status: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { crisisType, affectedSystems, assessment } = context;\n    \n    return {\n      response: {\n        immediateActions: [\n          'Isolate affected systems',\n          'Activate backup protocols',\n          'Deploy emergency fixes',\n          'Establish war room',\n          'Begin continuous monitoring'\n        ],\n        recoveryPlan: `Phased recovery for ${crisisType} with rollback procedures`,\n        estimatedResolution: assessment.priority === 'P0 - Immediate' ? '2-4 hours' : '4-8 hours'\n      },\n      status: 'Response initiated - all teams mobilized'\n    };\n  }\n}))\n.commit();\n\n// Export all advanced workflows\nexport const advancedWorkflows = {\n  researchAnalysisWorkflow,\n  adaptiveProblemSolvingWorkflow,\n  enterpriseIntegrationWorkflow,\n  aiModelTrainingWorkflow,\n  crisisResponseWorkflow\n};\n\nexport default advancedWorkflows;","// Network-specific workflows using Mastra's createWorkflow and createStep\nimport { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n// Claude Flow Reasoning Workflow\nexport const claudeFlowReasoningStep = createStep({\n  id: 'claude-flow-reasoning',\n  description: 'Advanced reasoning using Claude Flow coordination',\n  inputSchema: z.object({\n    task: z.string().describe('Complex reasoning task'),\n    complexity: z.enum(['simple', 'medium', 'complex']).default('medium'),\n    agentCount: z.number().min(1).max(10).default(3)\n  }),\n  outputSchema: z.object({\n    coordinationId: z.string(),\n    analysis: z.string(),\n    confidence: z.number(),\n    recommendations: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { task, complexity, agentCount } = context;\n    \n    // Simulate Claude Flow reasoning\n    const coordinationId = `claude-reason-${Date.now()}`;\n    console.log(`üß† Claude Flow reasoning: ${task} (${complexity} complexity)`);\n    \n    return {\n      coordinationId,\n      analysis: `Advanced multi-agent analysis of: ${task}`,\n      confidence: 0.92,\n      recommendations: [\n        'Consider multiple perspectives',\n        'Validate reasoning chains',\n        'Ensure logical consistency'\n      ]\n    };\n  }\n});\n\nexport const claudeFlowValidationStep = createStep({\n  id: 'claude-flow-validation',\n  description: 'Validate reasoning results',\n  inputSchema: z.object({\n    coordinationId: z.string(),\n    analysis: z.string(),\n    confidence: z.number()\n  }),\n  outputSchema: z.object({\n    isValid: z.boolean(),\n    validationScore: z.number(),\n    feedback: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { coordinationId, confidence } = context;\n    \n    return {\n      isValid: confidence > 0.8,\n      validationScore: Math.min(confidence * 1.1, 1.0),\n      feedback: 'Reasoning validated through multi-agent verification'\n    };\n  }\n});\n\n// Hive Mind Consensus Workflow\nexport const hiveMindGatherStep = createStep({\n  id: 'hive-mind-gather',\n  description: 'Gather collective intelligence from hive nodes',\n  inputSchema: z.object({\n    problem: z.string().describe('Problem for collective analysis'),\n    nodes: z.number().min(3).max(50).default(10)\n  }),\n  outputSchema: z.object({\n    sessionId: z.string(),\n    perspectives: z.array(z.object({\n      nodeId: z.string(),\n      insight: z.string(),\n      confidence: z.number()\n    }))\n  }),\n  execute: async ({ context }) => {\n    const { problem, nodes } = context;\n    const sessionId = `hive-gather-${Date.now()}`;\n    \n    console.log(`üêù Hive Mind gathering ${nodes} perspectives on: ${problem}`);\n    \n    // Generate diverse perspectives\n    const perspectives = Array.from({ length: nodes }, (_, i) => ({\n      nodeId: `node-${i + 1}`,\n      insight: `Perspective ${i + 1} on ${problem}`,\n      confidence: 0.7 + Math.random() * 0.3\n    }));\n    \n    return { sessionId, perspectives };\n  }\n});\n\nexport const hiveMindConsensusStep = createStep({\n  id: 'hive-mind-consensus',\n  description: 'Build consensus from collective perspectives',\n  inputSchema: z.object({\n    sessionId: z.string(),\n    perspectives: z.array(z.object({\n      nodeId: z.string(),\n      insight: z.string(),\n      confidence: z.number()\n    }))\n  }),\n  outputSchema: z.object({\n    consensus: z.string(),\n    agreement: z.number(),\n    dissent: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { sessionId, perspectives } = context;\n    \n    const avgConfidence = perspectives.reduce((sum, p) => sum + p.confidence, 0) / perspectives.length;\n    \n    return {\n      consensus: `Collective consensus achieved with ${perspectives.length} nodes`,\n      agreement: avgConfidence,\n      dissent: perspectives.filter(p => p.confidence < 0.75).map(p => p.nodeId)\n    };\n  }\n});\n\n// RUV Swarm Scaling Workflow\nexport const ruvSwarmDeployStep = createStep({\n  id: 'ruv-swarm-deploy',\n  description: 'Deploy scalable agent swarm',\n  inputSchema: z.object({\n    mission: z.string().describe('Swarm mission'),\n    initialSize: z.number().min(5).max(100).default(20),\n    topology: z.enum(['mesh', 'hierarchical', 'ring', 'star']).default('mesh')\n  }),\n  outputSchema: z.object({\n    deploymentId: z.string(),\n    activeAgents: z.number(),\n    topology: z.string(),\n    status: z.enum(['deploying', 'active', 'scaling'])\n  }),\n  execute: async ({ context }) => {\n    const { mission, initialSize, topology } = context;\n    const deploymentId = `swarm-deploy-${Date.now()}`;\n    \n    console.log(`üî• RUV Swarm deploying ${initialSize} agents for: ${mission}`);\n    \n    return {\n      deploymentId,\n      activeAgents: initialSize,\n      topology,\n      status: 'active'\n    };\n  }\n});\n\nexport const ruvSwarmScaleStep = createStep({\n  id: 'ruv-swarm-scale',\n  description: 'Dynamically scale swarm based on workload',\n  inputSchema: z.object({\n    deploymentId: z.string(),\n    currentAgents: z.number(),\n    workloadMetrics: z.object({\n      queueSize: z.number(),\n      avgResponseTime: z.number(),\n      throughput: z.number()\n    })\n  }),\n  outputSchema: z.object({\n    newAgentCount: z.number(),\n    scalingAction: z.enum(['scale-up', 'scale-down', 'maintain']),\n    efficiency: z.number()\n  }),\n  execute: async ({ context }) => {\n    const { currentAgents, workloadMetrics } = context;\n    \n    // Simple scaling logic\n    let scalingAction = 'maintain';\n    let newAgentCount = currentAgents;\n    \n    if (workloadMetrics.queueSize > currentAgents * 2) {\n      scalingAction = 'scale-up';\n      newAgentCount = Math.min(currentAgents * 1.5, 100);\n    } else if (workloadMetrics.queueSize < currentAgents * 0.5) {\n      scalingAction = 'scale-down';\n      newAgentCount = Math.max(currentAgents * 0.75, 5);\n    }\n    \n    return {\n      newAgentCount: Math.floor(newAgentCount),\n      scalingAction,\n      efficiency: 0.85 + Math.random() * 0.15\n    };\n  }\n});\n\n// Create complete workflows by composing steps\n\nexport const claudeFlowReasoningWorkflow = createWorkflow({\n  id: 'claude-flow-reasoning-workflow',\n  description: 'Complete reasoning workflow using Claude Flow coordination',\n  inputSchema: z.object({\n    task: z.string(),\n    complexity: z.enum(['simple', 'medium', 'complex']).optional()\n  }),\n  outputSchema: z.object({\n    isValid: z.boolean(),\n    validationScore: z.number(),\n    feedback: z.string(),\n    recommendations: z.array(z.string())\n  })\n})\n.then(claudeFlowReasoningStep)\n.then(claudeFlowValidationStep)\n.commit();\n\nexport const hiveMindConsensusWorkflow = createWorkflow({\n  id: 'hive-mind-consensus-workflow',\n  description: 'Build collective consensus using Hive Mind network',\n  inputSchema: z.object({\n    problem: z.string(),\n    nodes: z.number().optional()\n  }),\n  outputSchema: z.object({\n    consensus: z.string(),\n    agreement: z.number(),\n    dissent: z.array(z.string())\n  })\n})\n.then(hiveMindGatherStep)\n.then(hiveMindConsensusStep)\n.commit();\n\nexport const ruvSwarmScalingWorkflow = createWorkflow({\n  id: 'ruv-swarm-scaling-workflow',\n  description: 'Deploy and auto-scale agent swarms',\n  inputSchema: z.object({\n    mission: z.string(),\n    initialSize: z.number().optional(),\n    workloadMetrics: z.object({\n      queueSize: z.number(),\n      avgResponseTime: z.number(),\n      throughput: z.number()\n    }).optional()\n  }),\n  outputSchema: z.object({\n    deploymentId: z.string(),\n    finalAgentCount: z.number(),\n    efficiency: z.number(),\n    status: z.string()\n  })\n})\n.then(createStep({\n  id: 'deploy-and-scale',\n  description: 'Deploy swarm and prepare for scaling',\n  inputSchema: z.object({\n    mission: z.string(),\n    initialSize: z.number().optional()\n  }),\n  outputSchema: z.object({\n    deploymentId: z.string(),\n    activeAgents: z.number(),\n    topology: z.string(),\n    status: z.enum(['deploying', 'active', 'scaling'])\n  }),\n  execute: async ({ context }) => {\n    const deployStep = ruvSwarmDeployStep.clone();\n    return await deployStep.execute({ context });\n  }\n}))\n.then(createStep({\n  id: 'monitor-and-scale',\n  description: 'Monitor workload and scale accordingly',\n  inputSchema: z.object({\n    deploymentId: z.string(),\n    activeAgents: z.number(),\n    workloadMetrics: z.object({\n      queueSize: z.number(),\n      avgResponseTime: z.number(),\n      throughput: z.number()\n    }).optional()\n  }),\n  outputSchema: z.object({\n    deploymentId: z.string(),\n    finalAgentCount: z.number(),\n    efficiency: z.number(),\n    status: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { deploymentId, activeAgents, workloadMetrics } = context;\n    \n    if (!workloadMetrics) {\n      return {\n        deploymentId,\n        finalAgentCount: activeAgents,\n        efficiency: 0.9,\n        status: 'active'\n      };\n    }\n    \n    const scaleStep = ruvSwarmScaleStep.clone();\n    const scaleResult = await scaleStep.execute({\n      context: {\n        deploymentId,\n        currentAgents: activeAgents,\n        workloadMetrics\n      }\n    });\n    \n    return {\n      deploymentId,\n      finalAgentCount: scaleResult.newAgentCount,\n      efficiency: scaleResult.efficiency,\n      status: `active-${scaleResult.scalingAction}`\n    };\n  }\n}))\n.commit();\n\n// Multi-Network Orchestration Workflow\nexport const multiNetworkOrchestrationWorkflow = createWorkflow({\n  id: 'multi-network-orchestration',\n  description: 'Orchestrate all three networks for complex tasks',\n  inputSchema: z.object({\n    objective: z.string(),\n    priority: z.enum(['low', 'medium', 'high', 'critical']).default('high')\n  }),\n  outputSchema: z.object({\n    orchestrationId: z.string(),\n    results: z.object({\n      reasoning: z.any(),\n      consensus: z.any(),\n      scaling: z.any()\n    }),\n    summary: z.string()\n  })\n})\n.then(createStep({\n  id: 'orchestrate-networks',\n  description: 'Coordinate all networks for the objective',\n  inputSchema: z.object({\n    objective: z.string(),\n    priority: z.enum(['low', 'medium', 'high', 'critical'])\n  }),\n  outputSchema: z.object({\n    orchestrationId: z.string(),\n    results: z.object({\n      reasoning: z.any(),\n      consensus: z.any(),\n      scaling: z.any()\n    }),\n    summary: z.string()\n  }),\n  execute: async ({ context }) => {\n    const { objective, priority } = context;\n    const orchestrationId = `multi-net-${Date.now()}`;\n    \n    console.log(`üåê Multi-network orchestration started for: ${objective}`);\n    \n    // Run all network workflows in parallel\n    const [reasoning, consensus, scaling] = await Promise.all([\n      claudeFlowReasoningWorkflow.run({\n        context: { task: objective, complexity: priority === 'critical' ? 'complex' : 'medium' }\n      }),\n      hiveMindConsensusWorkflow.run({\n        context: { problem: objective, nodes: priority === 'critical' ? 25 : 10 }\n      }),\n      ruvSwarmScalingWorkflow.run({\n        context: { \n          mission: objective, \n          initialSize: priority === 'critical' ? 50 : 20,\n          workloadMetrics: { queueSize: 100, avgResponseTime: 250, throughput: 1000 }\n        }\n      })\n    ]);\n    \n    return {\n      orchestrationId,\n      results: { reasoning, consensus, scaling },\n      summary: `Multi-network orchestration completed: Claude Flow provided reasoning with ${reasoning.validationScore} confidence, Hive Mind achieved ${consensus.agreement} agreement, RUV Swarm deployed ${scaling.finalAgentCount} agents`\n    };\n  }\n}))\n.commit();\n\n// Export all workflows\nexport const networkWorkflows = {\n  claudeFlowReasoningWorkflow,\n  hiveMindConsensusWorkflow,\n  ruvSwarmScalingWorkflow,\n  multiNetworkOrchestrationWorkflow\n};\n\nexport default networkWorkflows;","// Tool-integrated workflows demonstrating tool usage in Mastra workflows\nimport { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n// Team Creation and Management Workflow\nexport const teamFormationWorkflow = createWorkflow({\n  id: 'team-formation-workflow',\n  description: 'Form and deploy a specialized agent team',\n  inputSchema: z.object({\n    projectName: z.string(),\n    projectGoal: z.string(),\n    requiredSkills: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    team: z.any(),\n    workflowId: z.string(),\n    status: z.string(),\n    nextSteps: z.array(z.string())\n  })\n})\n.then(createStep({\n  id: 'analyze-requirements',\n  description: 'Analyze project requirements',\n  inputSchema: z.object({\n    projectName: z.string(),\n    projectGoal: z.string(),\n    requiredSkills: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    teamName: z.string(),\n    agentTypes: z.array(z.enum(['coordinator', 'executor', 'researcher', 'architect'])),\n    complexity: z.enum(['simple', 'medium', 'complex'])\n  }),\n  execute: async ({ context }) => {\n    const { projectName, requiredSkills } = context;\n    \n    // Map skills to agent types\n    const agentTypes = [];\n    if (requiredSkills.includes('management') || requiredSkills.includes('coordination')) {\n      agentTypes.push('coordinator');\n    }\n    if (requiredSkills.includes('implementation') || requiredSkills.includes('coding')) {\n      agentTypes.push('executor');\n    }\n    if (requiredSkills.includes('research') || requiredSkills.includes('analysis')) {\n      agentTypes.push('researcher');\n    }\n    if (requiredSkills.includes('design') || requiredSkills.includes('architecture')) {\n      agentTypes.push('architect');\n    }\n    \n    // Ensure at least one agent type\n    if (agentTypes.length === 0) {\n      agentTypes.push('coordinator', 'executor');\n    }\n    \n    return {\n      teamName: `${projectName}-team`,\n      agentTypes,\n      complexity: agentTypes.length > 2 ? 'complex' : 'simple'\n    };\n  }\n}))\n.then(createStep({\n  id: 'create-team',\n  description: 'Create the agent team using createTeam tool',\n  inputSchema: z.object({\n    teamName: z.string(),\n    agentTypes: z.array(z.enum(['coordinator', 'executor', 'researcher', 'architect'])),\n    complexity: z.enum(['simple', 'medium', 'complex']),\n    projectGoal: z.string()\n  }),\n  outputSchema: z.object({\n    team: z.any(),\n    teamId: z.string()\n  }),\n  execute: async ({ context, mastra }) => {\n    const { teamName, agentTypes, projectGoal } = context;\n    \n    // Use the createTeam tool\n    const createTeamTool = mastra.getTools().createTeam;\n    if (createTeamTool) {\n      const result = await createTeamTool.execute({\n        context: {\n          teamName,\n          goal: projectGoal,\n          agentTypes\n        }\n      });\n      \n      return {\n        team: result.team,\n        teamId: result.team.teamId\n      };\n    }\n    \n    // Fallback if tool not available\n    return {\n      team: {\n        teamId: `team-${Date.now()}`,\n        teamName,\n        goal: projectGoal,\n        agentTypes,\n        status: 'active'\n      },\n      teamId: `team-${Date.now()}`\n    };\n  }\n}))\n.then(createStep({\n  id: 'deploy-workflow',\n  description: 'Deploy appropriate workflow for the team',\n  inputSchema: z.object({\n    team: z.any(),\n    teamId: z.string(),\n    complexity: z.enum(['simple', 'medium', 'complex'])\n  }),\n  outputSchema: z.object({\n    team: z.any(),\n    workflowId: z.string(),\n    status: z.string(),\n    nextSteps: z.array(z.string())\n  }),\n  execute: async ({ context, mastra }) => {\n    const { team, complexity } = context;\n    \n    // Determine workflow based on complexity\n    const workflowName = complexity === 'complex' ? 'software-development' : 'problem-solving';\n    \n    // Use executeWorkflow tool\n    const executeWorkflowTool = mastra.getTools().executeWorkflow;\n    if (executeWorkflowTool) {\n      const result = await executeWorkflowTool.execute({\n        context: {\n          workflowName,\n          input: { team }\n        }\n      });\n      \n      return {\n        team,\n        workflowId: result.execution.executionId,\n        status: 'Team formed and workflow deployed',\n        nextSteps: [\n          'Monitor team progress',\n          'Adjust resources as needed',\n          'Review deliverables'\n        ]\n      };\n    }\n    \n    // Fallback\n    return {\n      team,\n      workflowId: `workflow-${Date.now()}`,\n      status: 'Team formed',\n      nextSteps: ['Deploy workflow manually']\n    };\n  }\n}))\n.commit();\n\n// System Monitoring and Optimization Workflow\nexport const systemOptimizationWorkflow = createWorkflow({\n  id: 'system-optimization-workflow',\n  description: 'Monitor system health and optimize performance',\n  inputSchema: z.object({\n    checkInterval: z.number().min(1).max(60).default(5),\n    optimizationThreshold: z.number().min(0).max(1).default(0.8)\n  }),\n  outputSchema: z.object({\n    systemStatus: z.any(),\n    optimizationActions: z.array(z.string()),\n    recommendations: z.array(z.string())\n  })\n})\n.then(createStep({\n  id: 'monitor-system',\n  description: 'Check system health using monitoring tools',\n  inputSchema: z.object({\n    checkInterval: z.number(),\n    optimizationThreshold: z.number()\n  }),\n  outputSchema: z.object({\n    systemStatus: z.any(),\n    needsOptimization: z.boolean()\n  }),\n  execute: async ({ context, mastra }) => {\n    const { optimizationThreshold } = context;\n    \n    // Use monitorSystem tool\n    const monitorTool = mastra.getTools().monitorSystem;\n    let systemStatus;\n    \n    if (monitorTool) {\n      systemStatus = await monitorTool.execute({\n        context: { includeMetrics: true }\n      });\n    } else {\n      // Fallback status\n      systemStatus = {\n        status: 'healthy',\n        agents: { total: 7, active: 6 },\n        workflows: { registered: 11, active: 2 },\n        uptime: 3600\n      };\n    }\n    \n    // Check if optimization needed\n    const activeRatio = systemStatus.agents.active / systemStatus.agents.total;\n    const needsOptimization = activeRatio < optimizationThreshold;\n    \n    return { systemStatus, needsOptimization };\n  }\n}))\n.then(createStep({\n  id: 'optimize-resources',\n  description: 'Optimize system resources if needed',\n  inputSchema: z.object({\n    systemStatus: z.any(),\n    needsOptimization: z.boolean()\n  }),\n  outputSchema: z.object({\n    systemStatus: z.any(),\n    optimizationActions: z.array(z.string()),\n    recommendations: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { systemStatus, needsOptimization } = context;\n    const optimizationActions = [];\n    const recommendations = [];\n    \n    if (needsOptimization) {\n      optimizationActions.push(\n        'Rebalanced agent workloads',\n        'Cleared workflow queue',\n        'Optimized memory usage'\n      );\n      \n      recommendations.push(\n        'Consider scaling up agent pool',\n        'Review workflow efficiency',\n        'Monitor peak usage patterns'\n      );\n    } else {\n      recommendations.push(\n        'System operating efficiently',\n        'Continue monitoring',\n        'Schedule regular health checks'\n      );\n    }\n    \n    return {\n      systemStatus,\n      optimizationActions,\n      recommendations\n    };\n  }\n}))\n.commit();\n\n// Intelligent Task Routing Workflow\nexport const taskRoutingWorkflow = createWorkflow({\n  id: 'task-routing-workflow',\n  description: 'Intelligently route tasks to appropriate networks',\n  inputSchema: z.object({\n    task: z.string(),\n    requirements: z.object({\n      needsReasoning: z.boolean().default(false),\n      needsConsensus: z.boolean().default(false),\n      needsScale: z.boolean().default(false)\n    }),\n    priority: z.enum(['low', 'medium', 'high', 'critical']).default('medium')\n  }),\n  outputSchema: z.object({\n    routing: z.object({\n      primaryNetwork: z.string(),\n      supportingNetworks: z.array(z.string())\n    }),\n    execution: z.any(),\n    summary: z.string()\n  })\n})\n.then(createStep({\n  id: 'analyze-task',\n  description: 'Analyze task requirements and determine routing',\n  inputSchema: z.object({\n    task: z.string(),\n    requirements: z.object({\n      needsReasoning: z.boolean(),\n      needsConsensus: z.boolean(),\n      needsScale: z.boolean()\n    }),\n    priority: z.enum(['low', 'medium', 'high', 'critical'])\n  }),\n  outputSchema: z.object({\n    routing: z.object({\n      primaryNetwork: z.string(),\n      supportingNetworks: z.array(z.string())\n    }),\n    toolsNeeded: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { requirements, priority } = context;\n    \n    let primaryNetwork = 'claude-flow'; // Default\n    const supportingNetworks = [];\n    const toolsNeeded = [];\n    \n    // Determine primary network\n    if (requirements.needsScale) {\n      primaryNetwork = 'ruv-swarm';\n      toolsNeeded.push('ruvSwarmDeploy');\n    } else if (requirements.needsConsensus) {\n      primaryNetwork = 'hive-mind';\n      toolsNeeded.push('hiveMindCollective');\n    } else if (requirements.needsReasoning) {\n      primaryNetwork = 'claude-flow';\n      toolsNeeded.push('claudeFlowCoordinate');\n    }\n    \n    // Add supporting networks for critical tasks\n    if (priority === 'critical') {\n      if (primaryNetwork !== 'claude-flow') supportingNetworks.push('claude-flow');\n      if (primaryNetwork !== 'hive-mind') supportingNetworks.push('hive-mind');\n      if (primaryNetwork !== 'ruv-swarm') supportingNetworks.push('ruv-swarm');\n    }\n    \n    return {\n      routing: { primaryNetwork, supportingNetworks },\n      toolsNeeded\n    };\n  }\n}))\n.then(createStep({\n  id: 'execute-routed-task',\n  description: 'Execute task using determined network and tools',\n  inputSchema: z.object({\n    task: z.string(),\n    routing: z.object({\n      primaryNetwork: z.string(),\n      supportingNetworks: z.array(z.string())\n    }),\n    toolsNeeded: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    routing: z.object({\n      primaryNetwork: z.string(),\n      supportingNetworks: z.array(z.string())\n    }),\n    execution: z.any(),\n    summary: z.string()\n  }),\n  execute: async ({ context, mastra }) => {\n    const { task, routing, toolsNeeded } = context;\n    const tools = mastra.getTools();\n    const results = {};\n    \n    // Execute primary network tool\n    for (const toolName of toolsNeeded) {\n      const tool = tools[toolName];\n      if (tool) {\n        try {\n          const params = {};\n          if (toolName === 'claudeFlowCoordinate') {\n            params.task = task;\n            params.agentCount = 3;\n          } else if (toolName === 'hiveMindCollective') {\n            params.problem = task;\n            params.nodes = 10;\n          } else if (toolName === 'ruvSwarmDeploy') {\n            params.mission = task;\n            params.swarmSize = 20;\n          }\n          \n          results[toolName] = await tool.execute({ context: params });\n        } catch (error) {\n          results[toolName] = { error: error.message };\n        }\n      }\n    }\n    \n    return {\n      routing,\n      execution: results,\n      summary: `Task routed to ${routing.primaryNetwork} network with ${routing.supportingNetworks.length} supporting networks. Executed ${Object.keys(results).length} tools.`\n    };\n  }\n}))\n.commit();\n\n// Export all tool workflows\nexport const toolWorkflows = {\n  teamFormationWorkflow,\n  systemOptimizationWorkflow,\n  taskRoutingWorkflow\n};\n\nexport default toolWorkflows;","// MCP-integrated workflows demonstrating MCP server usage\nimport { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n// MCP Swarm Orchestration Workflow\nexport const mcpSwarmOrchestrationWorkflow = createWorkflow({\n  id: 'mcp-swarm-orchestration',\n  description: 'Orchestrate AI swarms using MCP servers',\n  inputSchema: z.object({\n    objective: z.string(),\n    scale: z.enum(['small', 'medium', 'large']).default('medium'),\n    useClaudeFlow: z.boolean().default(true),\n    useAgenticFlow: z.boolean().default(true)\n  }),\n  outputSchema: z.object({\n    swarmId: z.string().optional(),\n    teamId: z.string().optional(),\n    orchestrationResults: z.object({\n      claudeFlow: z.any().optional(),\n      agenticFlow: z.any().optional()\n    }),\n    summary: z.string()\n  })\n})\n.then(createStep({\n  id: 'initialize-swarms',\n  description: 'Initialize swarms via MCP servers',\n  inputSchema: z.object({\n    objective: z.string(),\n    scale: z.enum(['small', 'medium', 'large']),\n    useClaudeFlow: z.boolean(),\n    useAgenticFlow: z.boolean()\n  }),\n  outputSchema: z.object({\n    swarmId: z.string().optional(),\n    teamId: z.string().optional(),\n    initialized: z.array(z.string())\n  }),\n  execute: async ({ context, mastra }) => {\n    const { objective, scale, useClaudeFlow, useAgenticFlow } = context;\n    const initialized = [];\n    let swarmId, teamId;\n    \n    // Determine swarm configuration based on scale\n    const swarmConfig = {\n      small: { topology: 'star', maxAgents: 5 },\n      medium: { topology: 'mesh', maxAgents: 20 },\n      large: { topology: 'hierarchical', maxAgents: 50 }\n    }[scale];\n    \n    // Initialize Claude Flow swarm if requested\n    if (useClaudeFlow) {\n      const claudeFlowSwarmInit = mastra.getTools().claudeFlowSwarmInit;\n      if (claudeFlowSwarmInit) {\n        try {\n          const result = await claudeFlowSwarmInit.execute({\n            context: {\n              topology: swarmConfig.topology,\n              maxAgents: swarmConfig.maxAgents,\n              strategy: 'adaptive'\n            }\n          });\n          swarmId = result.swarmId;\n          initialized.push('Claude Flow swarm');\n        } catch (error) {\n          console.error('Claude Flow initialization failed:', error);\n        }\n      }\n    }\n    \n    // Initialize Agentic Flow team if requested\n    if (useAgenticFlow) {\n      const agenticFlowTeamCreate = mastra.getTools().agenticFlowTeamCreate;\n      if (agenticFlowTeamCreate) {\n        try {\n          const result = await agenticFlowTeamCreate.execute({\n            context: {\n              name: `Team-${objective.substring(0, 20)}`,\n              members: [\n                { role: 'coordinator', capabilities: ['planning', 'delegation'] },\n                { role: 'executor', capabilities: ['implementation', 'testing'] },\n                { role: 'analyst', capabilities: ['monitoring', 'optimization'] }\n              ],\n              goal: objective\n            }\n          });\n          teamId = result.teamId;\n          initialized.push('Agentic Flow team');\n        } catch (error) {\n          console.error('Agentic Flow initialization failed:', error);\n        }\n      }\n    }\n    \n    return { swarmId, teamId, initialized };\n  }\n}))\n.then(createStep({\n  id: 'orchestrate-tasks',\n  description: 'Orchestrate tasks across MCP servers',\n  inputSchema: z.object({\n    objective: z.string(),\n    swarmId: z.string().optional(),\n    teamId: z.string().optional(),\n    initialized: z.array(z.string()),\n    useClaudeFlow: z.boolean(),\n    useAgenticFlow: z.boolean()\n  }),\n  outputSchema: z.object({\n    swarmId: z.string().optional(),\n    teamId: z.string().optional(),\n    orchestrationResults: z.object({\n      claudeFlow: z.any().optional(),\n      agenticFlow: z.any().optional()\n    }),\n    summary: z.string()\n  }),\n  execute: async ({ context, mastra }) => {\n    const { objective, swarmId, teamId, initialized, useClaudeFlow, useAgenticFlow } = context;\n    const orchestrationResults = {};\n    \n    // Orchestrate with Claude Flow\n    if (useClaudeFlow && swarmId) {\n      const claudeFlowTaskOrchestrate = mastra.getTools().claudeFlowTaskOrchestrate;\n      if (claudeFlowTaskOrchestrate) {\n        try {\n          orchestrationResults.claudeFlow = await claudeFlowTaskOrchestrate.execute({\n            context: {\n              task: objective,\n              priority: 'high',\n              strategy: 'adaptive'\n            }\n          });\n        } catch (error) {\n          orchestrationResults.claudeFlow = { error: error.message };\n        }\n      }\n    }\n    \n    // Execute workflow with Agentic Flow\n    if (useAgenticFlow && teamId) {\n      const agenticFlowWorkflowExecute = mastra.getTools().agenticFlowWorkflowExecute;\n      if (agenticFlowWorkflowExecute) {\n        try {\n          orchestrationResults.agenticFlow = await agenticFlowWorkflowExecute.execute({\n            context: {\n              workflowId: 'problem-solving',\n              input: { problem: objective, teamId },\n              config: { timeout: 30000 }\n            }\n          });\n        } catch (error) {\n          orchestrationResults.agenticFlow = { error: error.message };\n        }\n      }\n    }\n    \n    const summary = `MCP orchestration completed. Initialized: ${initialized.join(', ')}. ` +\n                   `Results: ${Object.keys(orchestrationResults).length} server(s) processed the objective.`;\n    \n    return {\n      swarmId,\n      teamId,\n      orchestrationResults,\n      summary\n    };\n  }\n}))\n.commit();\n\n// MCP Learning and Adaptation Workflow\nexport const mcpLearningWorkflow = createWorkflow({\n  id: 'mcp-learning-adaptation',\n  description: 'Capture and apply learning across MCP servers',\n  inputSchema: z.object({\n    experience: z.object({\n      action: z.string(),\n      outcome: z.string(),\n      context: z.record(z.any())\n    }),\n    category: z.enum(['success', 'failure', 'insight']).default('insight')\n  }),\n  outputSchema: z.object({\n    learningCaptured: z.boolean(),\n    adaptations: z.array(z.string()),\n    recommendations: z.array(z.string())\n  })\n})\n.then(createStep({\n  id: 'capture-learning',\n  description: 'Capture learning experience via MCP',\n  inputSchema: z.object({\n    experience: z.object({\n      action: z.string(),\n      outcome: z.string(),\n      context: z.record(z.any())\n    }),\n    category: z.enum(['success', 'failure', 'insight'])\n  }),\n  outputSchema: z.object({\n    learningCaptured: z.boolean(),\n    captureResult: z.any().optional()\n  }),\n  execute: async ({ context, mastra }) => {\n    const { experience, category } = context;\n    \n    const agenticFlowLearningCapture = mastra.getTools().agenticFlowLearningCapture;\n    if (agenticFlowLearningCapture) {\n      try {\n        const result = await agenticFlowLearningCapture.execute({\n          context: { experience, category }\n        });\n        return {\n          learningCaptured: true,\n          captureResult: result\n        };\n      } catch (error) {\n        console.error('Learning capture failed:', error);\n        return {\n          learningCaptured: false,\n          captureResult: { error: error.message }\n        };\n      }\n    }\n    \n    return {\n      learningCaptured: false,\n      captureResult: { error: 'MCP learning tool not available' }\n    };\n  }\n}))\n.then(createStep({\n  id: 'apply-adaptations',\n  description: 'Apply learned adaptations',\n  inputSchema: z.object({\n    learningCaptured: z.boolean(),\n    captureResult: z.any().optional(),\n    experience: z.object({\n      action: z.string(),\n      outcome: z.string(),\n      context: z.record(z.any())\n    }),\n    category: z.enum(['success', 'failure', 'insight'])\n  }),\n  outputSchema: z.object({\n    learningCaptured: z.boolean(),\n    adaptations: z.array(z.string()),\n    recommendations: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    const { learningCaptured, experience, category } = context;\n    \n    const adaptations = [];\n    const recommendations = [];\n    \n    if (learningCaptured) {\n      if (category === 'success') {\n        adaptations.push('Reinforce successful patterns');\n        adaptations.push('Increase confidence in similar approaches');\n        recommendations.push(`Continue using ${experience.action} for similar contexts`);\n      } else if (category === 'failure') {\n        adaptations.push('Adjust approach to avoid similar failures');\n        adaptations.push('Update risk assessment models');\n        recommendations.push(`Avoid ${experience.action} in similar contexts`);\n        recommendations.push('Consider alternative strategies');\n      } else { // insight\n        adaptations.push('Integrate new insight into knowledge base');\n        adaptations.push('Update decision-making heuristics');\n        recommendations.push('Apply insight to related problems');\n      }\n    }\n    \n    return {\n      learningCaptured,\n      adaptations,\n      recommendations\n    };\n  }\n}))\n.commit();\n\n// MCP Multi-Server Coordination Workflow\nexport const mcpMultiServerWorkflow = createWorkflow({\n  id: 'mcp-multi-server-coordination',\n  description: 'Coordinate actions across multiple MCP servers',\n  inputSchema: z.object({\n    task: z.string(),\n    servers: z.array(z.enum(['claude-flow', 'agentic-flow'])).default(['claude-flow', 'agentic-flow']),\n    coordinationMode: z.enum(['sequential', 'parallel', 'hierarchical']).default('parallel')\n  }),\n  outputSchema: z.object({\n    results: z.record(z.any()),\n    coordinationSummary: z.string(),\n    performance: z.object({\n      duration: z.number(),\n      serversUsed: z.number()\n    })\n  })\n})\n.then(createStep({\n  id: 'coordinate-servers',\n  description: 'Coordinate task execution across MCP servers',\n  inputSchema: z.object({\n    task: z.string(),\n    servers: z.array(z.enum(['claude-flow', 'agentic-flow'])),\n    coordinationMode: z.enum(['sequential', 'parallel', 'hierarchical'])\n  }),\n  outputSchema: z.object({\n    results: z.record(z.any()),\n    coordinationSummary: z.string(),\n    performance: z.object({\n      duration: z.number(),\n      serversUsed: z.number()\n    })\n  }),\n  execute: async ({ context, mastra }) => {\n    const { task, servers, coordinationMode } = context;\n    const startTime = Date.now();\n    const results = {};\n    \n    if (coordinationMode === 'parallel') {\n      // Execute on all servers in parallel\n      const promises = [];\n      \n      if (servers.includes('claude-flow')) {\n        const claudeFlowPromise = (async () => {\n          const tool = mastra.getTools().claudeFlowTaskOrchestrate;\n          if (tool) {\n            try {\n              results['claude-flow'] = await tool.execute({\n                context: { task, priority: 'high', strategy: 'adaptive' }\n              });\n            } catch (error) {\n              results['claude-flow'] = { error: error.message };\n            }\n          }\n        })();\n        promises.push(claudeFlowPromise);\n      }\n      \n      if (servers.includes('agentic-flow')) {\n        const agenticFlowPromise = (async () => {\n          const tool = mastra.getTools().agenticFlowWorkflowExecute;\n          if (tool) {\n            try {\n              results['agentic-flow'] = await tool.execute({\n                context: {\n                  workflowId: 'adaptive-problem-solving',\n                  input: { problem: task },\n                  config: { timeout: 30000 }\n                }\n              });\n            } catch (error) {\n              results['agentic-flow'] = { error: error.message };\n            }\n          }\n        })();\n        promises.push(agenticFlowPromise);\n      }\n      \n      await Promise.all(promises);\n    } else {\n      // Sequential execution\n      for (const server of servers) {\n        if (server === 'claude-flow') {\n          const tool = mastra.getTools().claudeFlowTaskOrchestrate;\n          if (tool) {\n            try {\n              results['claude-flow'] = await tool.execute({\n                context: { task, priority: 'high', strategy: 'adaptive' }\n              });\n            } catch (error) {\n              results['claude-flow'] = { error: error.message };\n            }\n          }\n        } else if (server === 'agentic-flow') {\n          const tool = mastra.getTools().agenticFlowWorkflowExecute;\n          if (tool) {\n            try {\n              results['agentic-flow'] = await tool.execute({\n                context: {\n                  workflowId: 'adaptive-problem-solving',\n                  input: { problem: task },\n                  config: { timeout: 30000 }\n                }\n              });\n            } catch (error) {\n              results['agentic-flow'] = { error: error.message };\n            }\n          }\n        }\n      }\n    }\n    \n    const duration = Date.now() - startTime;\n    const serversUsed = Object.keys(results).length;\n    \n    const coordinationSummary = `Coordinated task \"${task}\" across ${serversUsed} MCP servers in ${coordinationMode} mode. ` +\n                               `Execution completed in ${duration}ms.`;\n    \n    return {\n      results,\n      coordinationSummary,\n      performance: {\n        duration,\n        serversUsed\n      }\n    };\n  }\n}))\n.commit();\n\n// Export all MCP workflows\nexport const mcpWorkflows = {\n  mcpSwarmOrchestrationWorkflow,\n  mcpLearningWorkflow,\n  mcpMultiServerWorkflow\n};\n\nexport default mcpWorkflows;","import { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n// Swarm Demo Workflow - Demonstrates 5-agent swarm collaboration\nexport const swarmDemoWorkflow = createWorkflow({\n  id: 'five-agent-swarm-demo',\n  description: 'Demonstrates a 5-agent swarm working together on a complex project',\n  inputSchema: z.object({\n    projectName: z.string(),\n    projectType: z.enum(['web_app', 'ml_model', 'security_audit', 'data_pipeline']),\n    requirements: z.array(z.string()),\n    deadline: z.string().optional()\n  }),\n  outputSchema: z.object({\n    swarmEfficiency: z.string(),\n    finalReport: z.object({\n      totalAgents: z.number(),\n      tasksCompleted: z.number(),\n      successRate: z.string(),\n      participatingAgents: z.array(z.string()),\n      insights: z.array(z.string()),\n      performanceMetrics: z.any()\n    })\n  })\n})\n// Step 1: Initialize the swarm\n.then(createStep({\n  id: 'initialize-swarm',\n  description: 'Initialize 5-Agent Swarm',\n  inputSchema: z.object({\n    projectName: z.string(),\n    projectType: z.enum(['web_app', 'ml_model', 'security_audit', 'data_pipeline'])\n  }),\n  outputSchema: z.object({\n    swarmId: z.string(),\n    configuration: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('ü§ñ Initializing 5-agent swarm for project:', context.projectName);\n    \n    // Simulate swarm initialization\n    const swarmId = `swarm_${Date.now()}`;\n    const configuration = {\n      name: 'ProjectSwarm',\n      topology: 'mesh',\n      agentCount: 5,\n      coordinator: 'productManager',\n      agents: ['dataAnalyst', 'securityExpert', 'devOpsEngineer', 'researchScientist', 'productManager']\n    };\n    \n    return { swarmId, configuration };\n  }\n}))\n// Step 2: Project planning phase\n.then(createStep({\n  id: 'project-planning',\n  description: 'Project Planning with Product Manager',\n  inputSchema: z.object({\n    projectName: z.string(),\n    requirements: z.array(z.string()),\n    swarmId: z.string()\n  }),\n  outputSchema: z.object({\n    planningTaskId: z.string(),\n    taskPlan: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('üìã Product Manager leading planning for:', context.projectName);\n    \n    const planningTaskId = `task_planning_${Date.now()}`;\n    const taskPlan = {\n      mainTask: `Plan ${context.projectName} project`,\n      subtaskCount: 5,\n      assignments: {\n        productManager: ['requirements', 'roadmap'],\n        dataAnalyst: ['data_analysis'],\n        securityExpert: ['security_assessment'],\n        devOpsEngineer: ['infrastructure'],\n        researchScientist: ['research']\n      }\n    };\n    \n    return { planningTaskId, taskPlan };\n  }\n}))\n// Step 3: Research and analysis phase\n.then(createStep({\n  id: 'research-analysis',\n  description: 'Research and Analysis Phase',\n  inputSchema: z.object({\n    projectType: z.enum(['web_app', 'ml_model', 'security_audit', 'data_pipeline']),\n    swarmId: z.string()\n  }),\n  outputSchema: z.object({\n    researchTaskId: z.string(),\n    findings: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    console.log('üî¨ Research Scientist and Data Analyst collaborating on:', context.projectType);\n    \n    const researchTaskId = `task_research_${Date.now()}`;\n    const findings = [\n      'Best practices identified for ' + context.projectType,\n      'Technology stack recommendations prepared',\n      'Performance benchmarks analyzed',\n      'Security considerations documented'\n    ];\n    \n    return { researchTaskId, findings };\n  }\n}))\n// Step 4: Security assessment\n.then(createStep({\n  id: 'security-assessment',\n  description: 'Security Assessment',\n  inputSchema: z.object({\n    projectType: z.enum(['web_app', 'ml_model', 'security_audit', 'data_pipeline']),\n    swarmId: z.string()\n  }),\n  outputSchema: z.object({\n    securityTaskId: z.string(),\n    vulnerabilities: z.number(),\n    recommendations: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    console.log('üîí Security Expert performing assessment for:', context.projectType);\n    \n    const securityTaskId = `task_security_${Date.now()}`;\n    const recommendations = [\n      'Implement authentication and authorization',\n      'Enable encryption for data at rest and in transit',\n      'Set up security monitoring and alerting',\n      'Conduct regular security audits'\n    ];\n    \n    return { \n      securityTaskId, \n      vulnerabilities: 0,\n      recommendations \n    };\n  }\n}))\n// Step 5: Development and deployment\n.then(createStep({\n  id: 'development-deployment',\n  description: 'Development and Deployment',\n  inputSchema: z.object({\n    projectName: z.string(),\n    swarmId: z.string()\n  }),\n  outputSchema: z.object({\n    developmentTaskId: z.string(),\n    deploymentStatus: z.string(),\n    pipeline: z.string()\n  }),\n  execute: async ({ context }) => {\n    console.log('üîß DevOps Engineer implementing solution for:', context.projectName);\n    \n    const developmentTaskId = `task_dev_${Date.now()}`;\n    \n    return {\n      developmentTaskId,\n      deploymentStatus: 'successful',\n      pipeline: 'CI/CD pipeline active'\n    };\n  }\n}))\n// Step 6: Data analysis and insights\n.then(createStep({\n  id: 'data-analysis',\n  description: 'Data Analysis and Insights',\n  inputSchema: z.object({\n    swarmId: z.string()\n  }),\n  outputSchema: z.object({\n    analysisTaskId: z.string(),\n    metrics: z.object({\n      performance: z.string(),\n      efficiency: z.string(),\n      quality: z.string()\n    })\n  }),\n  execute: async ({ context }) => {\n    console.log('üìä Data Analyst generating performance insights');\n    \n    const analysisTaskId = `task_analysis_${Date.now()}`;\n    const metrics = {\n      performance: '95% optimal',\n      efficiency: '88% resource utilization',\n      quality: '99% test coverage'\n    };\n    \n    return { analysisTaskId, metrics };\n  }\n}))\n// Step 7: Complete project and generate report\n.then(createStep({\n  id: 'complete-project',\n  description: 'Complete Project and Generate Report',\n  inputSchema: z.object({\n    projectName: z.string(),\n    swarmId: z.string(),\n    planningTaskId: z.string(),\n    metrics: z.any()\n  }),\n  outputSchema: z.object({\n    swarmEfficiency: z.string(),\n    finalReport: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('‚úÖ Completing project:', context.projectName);\n    \n    const finalReport = {\n      totalAgents: 5,\n      tasksCompleted: 15,\n      successRate: '100%',\n      participatingAgents: [\n        'productManager',\n        'dataAnalyst', \n        'securityExpert',\n        'devOpsEngineer',\n        'researchScientist'\n      ],\n      insights: [\n        'All subtasks completed successfully - optimal performance',\n        'Excellent collaboration between all agents',\n        'Project delivered on schedule'\n      ],\n      performanceMetrics: context.metrics\n    };\n    \n    return {\n      swarmEfficiency: '92.5%',\n      finalReport\n    };\n  }\n}));\n\n// Multi-Swarm Workflow - Multiple swarms working together\nexport const multiSwarmWorkflow = createWorkflow({\n  id: 'multi-swarm-collaboration',\n  description: 'Multiple 5-agent swarms collaborating on large-scale projects',\n  inputSchema: z.object({\n    projectScale: z.enum(['enterprise', 'global', 'multi-region']),\n    swarmCount: z.number().min(2).max(5).default(3),\n    coordinationStrategy: z.enum(['federated', 'hierarchical', 'distributed'])\n  }),\n  outputSchema: z.object({\n    multiSwarmReport: z.object({\n      totalSwarms: z.number(),\n      totalAgents: z.number(),\n      performanceBySwarm: z.array(z.any()),\n      overallHealth: z.string(),\n      coordinationEfficiency: z.string()\n    })\n  })\n})\n// Step 1: Initialize multiple swarms\n.then(createStep({\n  id: 'initialize-multi-swarms',\n  description: 'Initialize Multiple Swarms',\n  inputSchema: z.object({\n    swarmCount: z.number(),\n    projectScale: z.enum(['enterprise', 'global', 'multi-region'])\n  }),\n  outputSchema: z.object({\n    swarms: z.array(z.object({\n      swarmId: z.string(),\n      name: z.string(),\n      topology: z.string()\n    })),\n    totalAgents: z.number()\n  }),\n  execute: async ({ context }) => {\n    console.log(`üåê Initializing ${context.swarmCount} swarms for ${context.projectScale} project`);\n    \n    const swarms = [];\n    const topologies = ['mesh', 'star', 'hierarchical'];\n    \n    for (let i = 0; i < context.swarmCount; i++) {\n      swarms.push({\n        swarmId: `swarm_${i + 1}_${Date.now()}`,\n        name: `Swarm_${i + 1}`,\n        topology: topologies[i % topologies.length]\n      });\n    }\n    \n    return {\n      swarms,\n      totalAgents: swarms.length * 5\n    };\n  }\n}))\n// Step 2: Distribute workload\n.then(createStep({\n  id: 'distribute-workload',\n  description: 'Distribute Workload Across Swarms',\n  inputSchema: z.object({\n    swarms: z.array(z.any()),\n    coordinationStrategy: z.enum(['federated', 'hierarchical', 'distributed'])\n  }),\n  outputSchema: z.object({\n    distributedTasks: z.array(z.any()),\n    coordinationStatus: z.string()\n  }),\n  execute: async ({ context }) => {\n    console.log('üì¶ Distributing workload using', context.coordinationStrategy, 'strategy');\n    \n    const taskTypes = ['development', 'security', 'analysis'];\n    const distributedTasks = context.swarms.map((swarm, i) => ({\n      swarmId: swarm.swarmId,\n      swarmName: swarm.name,\n      taskId: `task_${Date.now()}_${i}`,\n      taskType: taskTypes[i % taskTypes.length]\n    }));\n    \n    return {\n      distributedTasks,\n      coordinationStatus: 'active'\n    };\n  }\n}))\n// Step 3: Aggregate results\n.then(createStep({\n  id: 'aggregate-results',\n  description: 'Aggregate Multi-Swarm Results',\n  inputSchema: z.object({\n    swarms: z.array(z.any()),\n    distributedTasks: z.array(z.any())\n  }),\n  outputSchema: z.object({\n    multiSwarmReport: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('üìà Aggregating results from', context.swarms.length, 'swarms');\n    \n    const performanceBySwarm = context.swarms.map(swarm => ({\n      swarmName: swarm.name,\n      topology: swarm.topology,\n      health: 'excellent',\n      efficiency: '90%+'\n    }));\n    \n    const multiSwarmReport = {\n      totalSwarms: context.swarms.length,\n      totalAgents: context.swarms.length * 5,\n      performanceBySwarm,\n      overallHealth: 'excellent',\n      coordinationEfficiency: '92.5%'\n    };\n    \n    return { multiSwarmReport };\n  }\n}));\n\n// Export swarm workflows\nexport const swarmWorkflows = {\n  swarmDemoWorkflow,\n  multiSwarmWorkflow\n};","import { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n// Startup Launch Workflow - Comprehensive 6-agent collaboration\nexport const startupLaunchWorkflow = createWorkflow({\n  id: 'startup-launch',\n  description: 'Complete startup launch from idea to market with 6-agent coordination',\n  inputSchema: z.object({\n    startupIdea: z.string(),\n    targetMarket: z.string(),\n    initialBudget: z.number(),\n    timeline: z.number(), // months\n    founders: z.array(z.object({\n      name: z.string(),\n      role: z.string(),\n      expertise: z.array(z.string())\n    }))\n  }),\n  outputSchema: z.object({\n    launchStatus: z.enum(['successful', 'partial', 'failed']),\n    metrics: z.object({\n      marketResearch: z.any(),\n      mvpDetails: z.any(),\n      infrastructure: z.any(),\n      security: z.any(),\n      qualityReport: z.any(),\n      launchMetrics: z.any()\n    })\n  })\n})\n// Phase 1: Market Research & Validation\n.then(createStep({\n  id: 'market-research',\n  description: 'Comprehensive market research and validation',\n  inputSchema: z.object({\n    startupIdea: z.string(),\n    targetMarket: z.string()\n  }),\n  outputSchema: z.object({\n    marketSize: z.object({\n      tam: z.number(),\n      sam: z.number(),\n      som: z.number()\n    }),\n    competitors: z.array(z.any()),\n    opportunities: z.array(z.string()),\n    risks: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    console.log('üî¨ Research Scientist & Data Analyst conducting market research...');\n    \n    // Simulate parallel market research\n    const [marketAnalysis, competitorAnalysis, customerResearch] = await Promise.all([\n      new Promise(resolve => setTimeout(() => resolve({\n        tam: 50000000,\n        sam: 10000000,\n        som: 1000000\n      }), 1000)),\n      new Promise(resolve => setTimeout(() => resolve([\n        { name: 'Competitor A', marketShare: 0.3, strengths: ['Brand', 'Scale'] },\n        { name: 'Competitor B', marketShare: 0.2, strengths: ['Tech', 'Price'] }\n      ]), 800)),\n      new Promise(resolve => setTimeout(() => resolve({\n        needs: ['Efficiency', 'Cost reduction', 'Integration'],\n        painPoints: ['Complex setup', 'High costs', 'Poor support']\n      }), 900))\n    ]);\n    \n    return {\n      marketSize: marketAnalysis,\n      competitors: competitorAnalysis,\n      opportunities: ['Underserved SMB segment', 'Integration gap', 'Mobile-first approach'],\n      risks: ['Market saturation', 'Regulatory changes', 'Funding challenges']\n    };\n  }\n}))\n// Phase 2: Product Strategy & Planning\n.then(createStep({\n  id: 'product-strategy',\n  description: 'Define product strategy and roadmap',\n  inputSchema: z.object({\n    marketSize: z.any(),\n    competitors: z.array(z.any()),\n    initialBudget: z.number()\n  }),\n  outputSchema: z.object({\n    mvpFeatures: z.array(z.string()),\n    roadmap: z.array(z.any()),\n    techStack: z.array(z.string()),\n    estimatedCost: z.number()\n  }),\n  execute: async ({ context }) => {\n    console.log('üìã Product Manager defining strategy with all agents...');\n    \n    return {\n      mvpFeatures: [\n        'User authentication',\n        'Core functionality',\n        'Basic analytics',\n        'Payment integration'\n      ],\n      roadmap: [\n        { phase: 'MVP', duration: 3, features: ['Core', 'Auth'] },\n        { phase: 'Beta', duration: 2, features: ['Analytics', 'Payments'] },\n        { phase: 'Launch', duration: 1, features: ['Scale', 'Marketing'] }\n      ],\n      techStack: ['React', 'Node.js', 'PostgreSQL', 'AWS', 'Docker'],\n      estimatedCost: context.initialBudget * 0.7\n    };\n  }\n}))\n// Phase 3: MVP Development\n.then(createStep({\n  id: 'mvp-development',\n  description: 'Develop MVP with all agents collaborating',\n  inputSchema: z.object({\n    mvpFeatures: z.array(z.string()),\n    techStack: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    developmentStatus: z.string(),\n    infrastructure: z.any(),\n    securityAudit: z.any(),\n    qualityReport: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('üöÄ All 6 agents collaborating on MVP development...');\n    \n    // Parallel development tracks\n    const [development, infrastructure, security, testing] = await Promise.all([\n      // DevOps Engineer - Infrastructure\n      new Promise(resolve => setTimeout(() => resolve({\n        environments: ['dev', 'staging', 'prod'],\n        cicd: 'GitHub Actions',\n        monitoring: 'Datadog',\n        scalability: 'Auto-scaling enabled'\n      }), 1500)),\n      \n      // Security Expert - Security Audit\n      new Promise(resolve => setTimeout(() => resolve({\n        vulnerabilities: 0,\n        compliance: ['SOC2', 'GDPR'],\n        encryption: 'AES-256',\n        authentication: 'OAuth2 + MFA'\n      }), 1200)),\n      \n      // QA Engineer - Testing\n      new Promise(resolve => setTimeout(() => resolve({\n        testCoverage: 85,\n        bugs: 12,\n        performance: 'Acceptable',\n        userAcceptance: 'Passed'\n      }), 1300)),\n      \n      // Development status\n      new Promise(resolve => setTimeout(() => resolve('MVP Complete'), 1000))\n    ]);\n    \n    return {\n      developmentStatus: development,\n      infrastructure,\n      securityAudit: security,\n      qualityReport: testing\n    };\n  }\n}))\n// Phase 4: Pre-Launch Preparation\n.then(createStep({\n  id: 'pre-launch',\n  description: 'Prepare for launch with final checks',\n  inputSchema: z.object({\n    developmentStatus: z.string(),\n    qualityReport: z.any()\n  }),\n  outputSchema: z.object({\n    launchReadiness: z.object({\n      technical: z.boolean(),\n      security: z.boolean(),\n      quality: z.boolean(),\n      market: z.boolean()\n    }),\n    betaResults: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('üèÅ Preparing for launch with all agents...');\n    \n    // Beta testing\n    const betaResults = {\n      users: 100,\n      feedback: 'Positive',\n      bugs: 3,\n      nps: 72\n    };\n    \n    const launchReadiness = {\n      technical: true,\n      security: true,\n      quality: context.qualityReport.testCoverage > 80,\n      market: true\n    };\n    \n    return { launchReadiness, betaResults };\n  }\n}))\n// Phase 5: Launch\n.then(createStep({\n  id: 'launch',\n  description: 'Execute launch with monitoring',\n  inputSchema: z.object({\n    launchReadiness: z.any(),\n    betaResults: z.any()\n  }),\n  outputSchema: z.object({\n    launchStatus: z.enum(['successful', 'partial', 'failed']),\n    metrics: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('üéâ Launching startup with all agents monitoring...');\n    \n    const allReady = Object.values(context.launchReadiness).every(v => v === true);\n    \n    if (allReady) {\n      return {\n        launchStatus: 'successful',\n        metrics: {\n          day1Users: 500,\n          crashes: 0,\n          revenue: 5000,\n          serverLoad: '45%',\n          customerSatisfaction: 4.5\n        }\n      };\n    }\n    \n    return {\n      launchStatus: 'partial',\n      metrics: {\n        day1Users: 200,\n        issues: ['Minor bugs', 'Scaling challenges']\n      }\n    };\n  }\n}));","import { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n/**\n * Critical Incident Response Workflow\n * \n * Coordinates 6 specialized agents for rapid incident response:\n * 1. Detection Agent - Monitors and validates incidents\n * 2. Diagnosis Agent - Root cause analysis\n * 3. Mitigation Agent - Immediate response actions\n * 4. Recovery Agent - System restoration\n * 5. Communication Agent - Stakeholder updates\n * 6. PostMortem Agent - Learning and improvement\n */\n\n// Input schema for incident response\nconst IncidentSchema = z.object({\n  severity: z.enum(['P0', 'P1', 'P2', 'P3']),\n  type: z.enum(['outage', 'security', 'performance', 'data_loss', 'unknown']),\n  initialAlert: z.object({\n    source: z.string(),\n    timestamp: z.string(),\n    description: z.string(),\n    affectedSystems: z.array(z.string()),\n    metrics: z.record(z.any()).optional()\n  }),\n  escalationThreshold: z.number().default(300), // seconds before escalation\n  autoMitigate: z.boolean().default(true)\n});\n\n// Detection step - validates and enriches incident data\nconst detectionStep = createStep({\n  id: 'incident-detection',\n  description: 'Validate incident and gather initial telemetry',\n  execute: async ({ context, agents }) => {\n    const { detectionAgent } = agents;\n    const { initialAlert, severity } = context.input;\n    \n    console.log(`üö® INCIDENT DETECTED: ${severity} - ${initialAlert.description}`);\n    \n    // Parallel validation and enrichment\n    const [validation, telemetry, impactAnalysis] = await Promise.all([\n      detectionAgent.execute({\n        task: 'validate_incident',\n        data: initialAlert,\n        priority: severity === 'P0' ? 'critical' : 'high'\n      }),\n      detectionAgent.execute({\n        task: 'gather_telemetry',\n        systems: initialAlert.affectedSystems,\n        timeRange: { start: '-10m', end: 'now' }\n      }),\n      detectionAgent.execute({\n        task: 'assess_impact',\n        systems: initialAlert.affectedSystems,\n        includeDownstream: true\n      })\n    ]);\n    \n    return {\n      validated: validation.isValid,\n      confidence: validation.confidence,\n      telemetry: telemetry.data,\n      impact: {\n        ...impactAnalysis,\n        estimatedUsersAffected: impactAnalysis.userCount,\n        businessImpact: impactAnalysis.severity\n      },\n      startTime: new Date().toISOString()\n    };\n  }\n});\n\n// Parallel diagnosis tracks\nconst diagnosisStep = createStep({\n  id: 'parallel-diagnosis',\n  description: 'Run parallel diagnosis tracks for rapid root cause analysis',\n  execute: async ({ context, agents }) => {\n    const { diagnosisAgent, detectionAgent } = agents;\n    const { telemetry, impact } = context.previousSteps['incident-detection'];\n    \n    console.log('üîç Starting parallel diagnosis tracks...');\n    \n    // Launch parallel investigation tracks\n    const diagnosisTracks = await Promise.allSettled([\n      // Track 1: System logs analysis\n      diagnosisAgent.execute({\n        task: 'analyze_logs',\n        systems: context.input.initialAlert.affectedSystems,\n        patterns: ['error', 'exception', 'timeout', 'crash'],\n        timeWindow: '-30m'\n      }),\n      \n      // Track 2: Performance metrics\n      diagnosisAgent.execute({\n        task: 'analyze_metrics',\n        metrics: ['cpu', 'memory', 'disk', 'network', 'latency'],\n        anomalyDetection: true,\n        baseline: 'last_7d'\n      }),\n      \n      // Track 3: Recent changes\n      diagnosisAgent.execute({\n        task: 'check_recent_changes',\n        scope: ['deployments', 'config_changes', 'infrastructure'],\n        timeWindow: '-24h'\n      }),\n      \n      // Track 4: Dependency analysis\n      diagnosisAgent.execute({\n        task: 'trace_dependencies',\n        startingPoints: context.input.initialAlert.affectedSystems,\n        depth: 3\n      }),\n      \n      // Track 5: Historical pattern matching\n      diagnosisAgent.execute({\n        task: 'match_historical_incidents',\n        similarity_threshold: 0.7,\n        lookback: '90d'\n      })\n    ]);\n    \n    // Process results and determine most likely causes\n    const causes = [];\n    diagnosisTracks.forEach((result, index) => {\n      if (result.status === 'fulfilled' && result.value.findings) {\n        causes.push(...result.value.findings);\n      }\n    });\n    \n    // Rank causes by confidence\n    const rankedCauses = causes\n      .sort((a, b) => b.confidence - a.confidence)\n      .slice(0, 5);\n    \n    return {\n      primaryCause: rankedCauses[0] || { type: 'unknown', confidence: 0 },\n      alternativeCauses: rankedCauses.slice(1),\n      diagnosisTime: new Date().toISOString(),\n      investigationPaths: diagnosisTracks.length\n    };\n  }\n});\n\n// Mitigation decision tree\nconst mitigationStep = createStep({\n  id: 'rapid-mitigation',\n  description: 'Execute mitigation based on diagnosis and severity',\n  execute: async ({ context, agents }) => {\n    const { mitigationAgent, communicationAgent } = agents;\n    const { primaryCause } = context.previousSteps['parallel-diagnosis'];\n    const { severity, autoMitigate } = context.input;\n    \n    console.log('üõ°Ô∏è Initiating mitigation strategies...');\n    \n    // Decision tree for mitigation\n    let mitigationPlan;\n    \n    if (severity === 'P0') {\n      // Critical incident - immediate automated response\n      mitigationPlan = await mitigationAgent.execute({\n        task: 'emergency_response',\n        cause: primaryCause,\n        actions: [\n          'circuit_breaker_activation',\n          'traffic_rerouting',\n          'failover_initiation',\n          'cache_warming'\n        ],\n        parallel: true,\n        skipApproval: autoMitigate\n      });\n      \n      // Notify on-call immediately\n      await communicationAgent.execute({\n        task: 'page_oncall',\n        severity: 'P0',\n        message: `Critical incident: ${primaryCause.description}`,\n        escalation: 'immediate'\n      });\n      \n    } else if (severity === 'P1') {\n      // High priority - automated with verification\n      mitigationPlan = await mitigationAgent.execute({\n        task: 'standard_response',\n        cause: primaryCause,\n        actions: [\n          'scale_resources',\n          'restart_services',\n          'clear_caches',\n          'apply_patches'\n        ],\n        verifyBefore: true\n      });\n      \n    } else {\n      // Lower priority - gather options for manual review\n      mitigationPlan = await mitigationAgent.execute({\n        task: 'propose_solutions',\n        cause: primaryCause,\n        generateOptions: 3,\n        includeRiskAssessment: true\n      });\n    }\n    \n    // Execute mitigation with monitoring\n    const mitigationResults = await Promise.all(\n      mitigationPlan.actions.map(async (action) => {\n        const result = await mitigationAgent.execute({\n          task: 'execute_action',\n          action: action.type,\n          parameters: action.params,\n          monitor: true,\n          rollbackEnabled: true\n        });\n        \n        return {\n          action: action.type,\n          status: result.status,\n          metrics: result.metrics,\n          rollbackAvailable: result.rollbackId\n        };\n      })\n    );\n    \n    return {\n      mitigationPlan,\n      executedActions: mitigationResults,\n      startTime: new Date().toISOString()\n    };\n  }\n});\n\n// Recovery orchestration\nconst recoveryStep = createStep({\n  id: 'system-recovery',\n  description: 'Orchestrate system recovery and validation',\n  execute: async ({ context, agents }) => {\n    const { recoveryAgent, detectionAgent } = agents;\n    const { executedActions } = context.previousSteps['rapid-mitigation'];\n    \n    console.log('üîß Starting recovery operations...');\n    \n    // Recovery phases\n    const recoveryPhases = [\n      // Phase 1: Stabilization\n      {\n        name: 'stabilization',\n        tasks: [\n          'verify_service_health',\n          'check_error_rates',\n          'monitor_resource_usage'\n        ],\n        duration: 60 // seconds\n      },\n      \n      // Phase 2: Gradual restoration\n      {\n        name: 'restoration',\n        tasks: [\n          'gradual_traffic_increase',\n          'cache_rebuilding',\n          'connection_pool_recovery'\n        ],\n        duration: 180\n      },\n      \n      // Phase 3: Full recovery\n      {\n        name: 'full_recovery',\n        tasks: [\n          'restore_full_capacity',\n          'verify_all_endpoints',\n          'check_data_consistency'\n        ],\n        duration: 120\n      }\n    ];\n    \n    const recoveryResults = [];\n    \n    for (const phase of recoveryPhases) {\n      console.log(`üìä Executing ${phase.name} phase...`);\n      \n      const phaseResults = await Promise.all(\n        phase.tasks.map(task => \n          recoveryAgent.execute({\n            task,\n            monitoring: {\n              interval: 10,\n              duration: phase.duration,\n              alertOnAnomaly: true\n            }\n          })\n        )\n      );\n      \n      // Validate phase success\n      const phaseValidation = await detectionAgent.execute({\n        task: 'validate_recovery_phase',\n        phase: phase.name,\n        results: phaseResults,\n        acceptanceCriteria: {\n          errorRate: 0.001,\n          latencyP99: 200,\n          availabilty: 0.999\n        }\n      });\n      \n      if (!phaseValidation.passed) {\n        // Rollback if phase fails\n        await recoveryAgent.execute({\n          task: 'rollback_phase',\n          phase: phase.name,\n          reason: phaseValidation.failures\n        });\n        break;\n      }\n      \n      recoveryResults.push({\n        phase: phase.name,\n        status: 'completed',\n        metrics: phaseValidation.metrics\n      });\n    }\n    \n    return {\n      recoveryPhases: recoveryResults,\n      systemStatus: recoveryResults.length === recoveryPhases.length ? 'recovered' : 'partial',\n      recoveryTime: new Date().toISOString()\n    };\n  }\n});\n\n// Real-time communication\nconst communicationStep = createStep({\n  id: 'stakeholder-communication',\n  description: 'Manage real-time communication throughout incident',\n  execute: async ({ context, agents }) => {\n    const { communicationAgent } = agents;\n    const incidentData = context.previousSteps;\n    \n    console.log('üì¢ Managing stakeholder communications...');\n    \n    // Communication matrix based on severity and progress\n    const stakeholders = {\n      P0: ['cto', 'vp_engineering', 'oncall_team', 'support_leads', 'pr_team'],\n      P1: ['engineering_leads', 'oncall_team', 'support_team'],\n      P2: ['team_leads', 'oncall_secondary'],\n      P3: ['team_members']\n    };\n    \n    const updates = [\n      {\n        stage: 'initial',\n        template: 'incident_detected',\n        data: {\n          severity: context.input.severity,\n          impact: incidentData['incident-detection'].impact,\n          startTime: incidentData['incident-detection'].startTime\n        }\n      },\n      {\n        stage: 'diagnosis',\n        template: 'root_cause_identified',\n        data: {\n          cause: incidentData['parallel-diagnosis'].primaryCause,\n          diagnosisTime: incidentData['parallel-diagnosis'].diagnosisTime\n        }\n      },\n      {\n        stage: 'mitigation',\n        template: 'mitigation_in_progress',\n        data: {\n          actions: incidentData['rapid-mitigation'].executedActions,\n          estimatedTime: '15-30 minutes'\n        }\n      },\n      {\n        stage: 'recovery',\n        template: 'system_recovering',\n        data: {\n          status: incidentData['system-recovery'].systemStatus,\n          metrics: incidentData['system-recovery'].recoveryPhases\n        }\n      }\n    ];\n    \n    // Send updates to appropriate stakeholders\n    const communicationResults = await Promise.all(\n      updates.map(update => \n        communicationAgent.execute({\n          task: 'send_update',\n          recipients: stakeholders[context.input.severity],\n          template: update.template,\n          data: update.data,\n          channels: ['slack', 'email', 'sms'],\n          priority: context.input.severity === 'P0' ? 'immediate' : 'high'\n        })\n      )\n    );\n    \n    // Create public status page update\n    if (context.input.severity === 'P0' || context.input.severity === 'P1') {\n      await communicationAgent.execute({\n        task: 'update_status_page',\n        status: incidentData['system-recovery'].systemStatus === 'recovered' \n          ? 'operational' \n          : 'partial_outage',\n        message: 'We are investigating issues with system performance',\n        affectedServices: context.input.initialAlert.affectedSystems\n      });\n    }\n    \n    return {\n      notificationsSent: communicationResults.length,\n      stakeholdersNotified: stakeholders[context.input.severity].length,\n      statusPageUpdated: ['P0', 'P1'].includes(context.input.severity)\n    };\n  }\n});\n\n// Post-mortem and learning\nconst postMortemStep = createStep({\n  id: 'post-mortem-analysis',\n  description: 'Conduct blameless post-mortem and capture learnings',\n  execute: async ({ context, agents }) => {\n    const { postMortemAgent } = agents;\n    const fullIncidentData = {\n      input: context.input,\n      ...context.previousSteps\n    };\n    \n    console.log('üìù Conducting post-mortem analysis...');\n    \n    // Comprehensive post-mortem analysis\n    const analysis = await postMortemAgent.execute({\n      task: 'generate_postmortem',\n      incidentData: fullIncidentData,\n      sections: [\n        'incident_summary',\n        'timeline',\n        'root_cause_analysis',\n        'impact_assessment',\n        'what_went_well',\n        'what_went_wrong',\n        'action_items',\n        'prevention_measures'\n      ]\n    });\n    \n    // Extract actionable improvements\n    const improvements = await Promise.all([\n      postMortemAgent.execute({\n        task: 'identify_monitoring_gaps',\n        telemetry: fullIncidentData['incident-detection'].telemetry,\n        incident: context.input.initialAlert\n      }),\n      \n      postMortemAgent.execute({\n        task: 'suggest_automation',\n        mitigationSteps: fullIncidentData['rapid-mitigation'].executedActions,\n        recoverySteps: fullIncidentData['system-recovery'].recoveryPhases\n      }),\n      \n      postMortemAgent.execute({\n        task: 'update_runbooks',\n        incident: context.input,\n        resolution: fullIncidentData['rapid-mitigation'].mitigationPlan\n      })\n    ]);\n    \n    // Calculate incident metrics\n    const metrics = {\n      timeToDetect: calculateTimeDiff(\n        context.input.initialAlert.timestamp,\n        fullIncidentData['incident-detection'].startTime\n      ),\n      timeToMitigate: calculateTimeDiff(\n        fullIncidentData['incident-detection'].startTime,\n        fullIncidentData['rapid-mitigation'].startTime\n      ),\n      timeToRecover: calculateTimeDiff(\n        fullIncidentData['rapid-mitigation'].startTime,\n        fullIncidentData['system-recovery'].recoveryTime\n      ),\n      totalDowntime: calculateTimeDiff(\n        context.input.initialAlert.timestamp,\n        fullIncidentData['system-recovery'].recoveryTime\n      )\n    };\n    \n    return {\n      postMortem: analysis,\n      improvements: improvements.flat(),\n      metrics,\n      lessonsLearned: analysis.action_items,\n      preventionMeasures: analysis.prevention_measures\n    };\n  }\n});\n\n// Helper function for time calculations\nfunction calculateTimeDiff(start, end) {\n  const diff = new Date(end) - new Date(start);\n  return {\n    milliseconds: diff,\n    seconds: Math.floor(diff / 1000),\n    minutes: Math.floor(diff / 60000)\n  };\n}\n\n// Create the incident response workflow\nexport const incidentResponseWorkflow = createWorkflow({\n  id: 'critical-incident-response',\n  name: 'Critical Incident Response Workflow',\n  description: 'Multi-agent orchestration for rapid incident response and recovery',\n  \n  inputSchema: IncidentSchema,\n  \n  agents: {\n    detectionAgent: {\n      id: 'detection-specialist',\n      capabilities: ['monitoring', 'validation', 'telemetry', 'impact_analysis'],\n      priority: 'critical'\n    },\n    diagnosisAgent: {\n      id: 'diagnosis-specialist',\n      capabilities: ['log_analysis', 'metric_analysis', 'pattern_matching', 'rca'],\n      priority: 'critical'\n    },\n    mitigationAgent: {\n      id: 'mitigation-specialist',\n      capabilities: ['emergency_response', 'automation', 'rollback', 'patching'],\n      priority: 'critical'\n    },\n    recoveryAgent: {\n      id: 'recovery-specialist',\n      capabilities: ['service_restoration', 'validation', 'monitoring', 'rollback'],\n      priority: 'high'\n    },\n    communicationAgent: {\n      id: 'communication-specialist',\n      capabilities: ['notifications', 'status_updates', 'escalation', 'reporting'],\n      priority: 'high'\n    },\n    postMortemAgent: {\n      id: 'postmortem-specialist',\n      capabilities: ['analysis', 'documentation', 'improvement', 'learning'],\n      priority: 'medium'\n    }\n  },\n  \n  steps: [\n    detectionStep,\n    diagnosisStep,\n    mitigationStep,\n    recoveryStep,\n    communicationStep,\n    postMortemStep\n  ],\n  \n  // Workflow-level configurations\n  config: {\n    timeout: 3600000, // 1 hour max for entire incident\n    retryPolicy: {\n      maxAttempts: 3,\n      backoffMultiplier: 2,\n      initialDelay: 1000\n    },\n    parallelExecution: true,\n    realTimeMonitoring: true,\n    escalationRules: {\n      P0: {\n        escalateAfter: 300, // 5 minutes\n        notifyLevels: ['director', 'vp', 'cto']\n      },\n      P1: {\n        escalateAfter: 900, // 15 minutes\n        notifyLevels: ['manager', 'director']\n      }\n    }\n  },\n  \n  // Error handling\n  onError: async (error, context) => {\n    console.error('‚ùå Workflow error:', error);\n    \n    // Emergency fallback\n    if (context.input.severity === 'P0') {\n      // Activate emergency protocols\n      await context.agents.mitigationAgent.execute({\n        task: 'emergency_fallback',\n        error: error.message,\n        action: 'activate_dr_site'\n      });\n    }\n    \n    // Always notify on workflow failure\n    await context.agents.communicationAgent.execute({\n      task: 'notify_failure',\n      error: error.message,\n      context: context.currentStep\n    });\n  },\n  \n  // Success handler\n  onSuccess: async (result, context) => {\n    console.log('‚úÖ Incident resolved successfully');\n    \n    // Schedule follow-up review\n    await context.agents.postMortemAgent.execute({\n      task: 'schedule_review',\n      incidentId: context.executionId,\n      scheduledFor: '+2d',\n      participants: ['engineering_team', 'sre_team', 'product_team']\n    });\n    \n    // Update incident database\n    await context.agents.postMortemAgent.execute({\n      task: 'update_incident_db',\n      incident: {\n        id: context.executionId,\n        ...result,\n        status: 'resolved'\n      }\n    });\n  }\n});\n\n// Export for use in applications\nexport default incidentResponseWorkflow;","import { createWorkflow, createStep } from '@mastra/core';\n\n/**\n * AI Product Development Workflow\n * \n * This workflow orchestrates the complete lifecycle of AI product development,\n * from research and data collection through model training, deployment, and monitoring.\n * It demonstrates complex collaboration between multiple specialized agents.\n */\n\n// Step 1: Research and Requirements Analysis\nconst researchPhase = createStep({\n  id: 'research-phase',\n  description: 'Conduct market research and define AI product requirements',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('üî¨ Starting AI Product Research Phase');\n    \n    const { productIdea, targetMarket, businessGoals } = input;\n    \n    // Researcher analyzes market and technical feasibility\n    const marketAnalysis = await agents.researcher.analyze({\n      task: 'market-analysis',\n      data: {\n        productIdea,\n        targetMarket,\n        competitors: await agents.researcher.findCompetitors(productIdea),\n        technicalTrends: await agents.researcher.analyzeTrends('ai-ml-technologies')\n      }\n    });\n    \n    // Architect designs initial system architecture\n    const systemDesign = await agents.architect.design({\n      requirements: marketAnalysis.technicalRequirements,\n      constraints: {\n        scalability: businessGoals.expectedUsers,\n        performance: businessGoals.responseTime,\n        compliance: businessGoals.regulations\n      }\n    });\n    \n    // Coordinator creates project roadmap\n    const projectRoadmap = await agents.coordinator.plan({\n      phases: ['research', 'data-collection', 'model-development', 'deployment', 'monitoring'],\n      timeline: businessGoals.timeline,\n      resources: await agents.coordinator.estimateResources(systemDesign)\n    });\n    \n    return {\n      marketAnalysis,\n      systemDesign,\n      projectRoadmap,\n      feasibilityScore: marketAnalysis.feasibility * systemDesign.implementationScore\n    };\n  }\n});\n\n// Step 2: Data Collection and Pipeline Design\nconst dataCollectionPhase = createStep({\n  id: 'data-collection-phase',\n  description: 'Design and implement data collection pipelines',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('üìä Starting Data Collection Phase');\n    \n    const { systemDesign, marketAnalysis } = input;\n    \n    // Coder implements data collection infrastructure\n    const dataPipeline = await agents.coder.implement({\n      type: 'data-pipeline',\n      specifications: {\n        sources: marketAnalysis.dataSources,\n        format: systemDesign.dataFormat,\n        volume: systemDesign.expectedDataVolume\n      }\n    });\n    \n    // Analyst validates data quality\n    const dataQualityReport = await agents.analyst.analyze({\n      pipeline: dataPipeline,\n      metrics: ['completeness', 'accuracy', 'consistency', 'timeliness'],\n      sampleSize: 10000\n    });\n    \n    // Tester creates data validation tests\n    const dataTests = await agents.tester.createTests({\n      type: 'data-validation',\n      pipeline: dataPipeline,\n      qualityThresholds: dataQualityReport.recommendedThresholds\n    });\n    \n    // Reviewer conducts privacy and compliance review\n    const complianceReview = await agents.reviewer.review({\n      type: 'data-compliance',\n      pipeline: dataPipeline,\n      regulations: ['GDPR', 'CCPA', 'HIPAA'],\n      dataTypes: marketAnalysis.dataTypes\n    });\n    \n    return {\n      dataPipeline,\n      dataQualityReport,\n      dataTests,\n      complianceReview,\n      dataReadiness: dataQualityReport.overallScore * complianceReview.complianceScore\n    };\n  }\n});\n\n// Step 3: ML Model Development\nconst modelDevelopmentPhase = createStep({\n  id: 'model-development-phase',\n  description: 'Develop and train ML models',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('ü§ñ Starting Model Development Phase');\n    \n    const { dataPipeline, systemDesign } = input;\n    \n    // Researcher explores model architectures\n    const modelResearch = await agents.researcher.research({\n      domain: systemDesign.mlDomain,\n      requirements: systemDesign.modelRequirements,\n      stateOfArt: await agents.researcher.findLatestPapers(systemDesign.mlDomain)\n    });\n    \n    // Coder implements model architecture\n    const modelImplementation = await agents.coder.implement({\n      type: 'ml-model',\n      architecture: modelResearch.recommendedArchitecture,\n      framework: systemDesign.mlFramework,\n      hyperparameters: modelResearch.suggestedHyperparameters\n    });\n    \n    // Coordinator manages distributed training\n    const trainingPlan = await agents.coordinator.orchestrate({\n      task: 'distributed-training',\n      model: modelImplementation,\n      data: dataPipeline,\n      resources: {\n        gpus: systemDesign.trainingResources.gpus,\n        memory: systemDesign.trainingResources.memory,\n        nodes: systemDesign.trainingResources.nodes\n      }\n    });\n    \n    // Analyst evaluates model performance\n    const modelEvaluation = await agents.analyst.evaluate({\n      model: modelImplementation,\n      metrics: ['accuracy', 'precision', 'recall', 'f1', 'latency'],\n      testData: dataPipeline.testSet,\n      benchmarks: modelResearch.industryBenchmarks\n    });\n    \n    // Tester creates model testing suite\n    const modelTests = await agents.tester.createTests({\n      type: 'ml-model',\n      model: modelImplementation,\n      scenarios: ['edge-cases', 'adversarial', 'performance', 'fairness']\n    });\n    \n    return {\n      modelImplementation,\n      trainingPlan,\n      modelEvaluation,\n      modelTests,\n      modelScore: modelEvaluation.overallPerformance\n    };\n  }\n});\n\n// Step 4: API Design and Integration\nconst apiDesignPhase = createStep({\n  id: 'api-design-phase',\n  description: 'Design and implement API for model serving',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('üîå Starting API Design Phase');\n    \n    const { modelImplementation, systemDesign } = input;\n    \n    // Architect designs API architecture\n    const apiDesign = await agents.architect.design({\n      type: 'rest-api',\n      model: modelImplementation,\n      requirements: {\n        throughput: systemDesign.apiRequirements.rps,\n        latency: systemDesign.apiRequirements.p99Latency,\n        authentication: systemDesign.security.authMethod\n      }\n    });\n    \n    // Coder implements API endpoints\n    const apiImplementation = await agents.coder.implement({\n      type: 'api-service',\n      design: apiDesign,\n      framework: 'fastapi',\n      features: ['rate-limiting', 'caching', 'monitoring', 'versioning']\n    });\n    \n    // Tester creates API test suite\n    const apiTests = await agents.tester.createTests({\n      type: 'api-integration',\n      endpoints: apiImplementation.endpoints,\n      scenarios: ['load-testing', 'security', 'error-handling', 'versioning']\n    });\n    \n    // Reviewer conducts security review\n    const securityReview = await agents.reviewer.review({\n      type: 'api-security',\n      implementation: apiImplementation,\n      threats: ['injection', 'authentication', 'authorization', 'dos']\n    });\n    \n    return {\n      apiDesign,\n      apiImplementation,\n      apiTests,\n      securityReview,\n      apiReadiness: apiTests.coverage * securityReview.securityScore\n    };\n  }\n});\n\n// Step 5: Ethics and Bias Review\nconst ethicsReviewPhase = createStep({\n  id: 'ethics-review-phase',\n  description: 'Conduct comprehensive ethics and bias review',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('‚öñÔ∏è Starting Ethics and Bias Review Phase');\n    \n    const { modelImplementation, dataPipeline } = input;\n    \n    // Analyst performs bias analysis\n    const biasAnalysis = await agents.analyst.analyze({\n      type: 'bias-detection',\n      model: modelImplementation,\n      data: dataPipeline,\n      dimensions: ['gender', 'race', 'age', 'socioeconomic'],\n      techniques: ['statistical-parity', 'equalized-odds', 'calibration']\n    });\n    \n    // Reviewer conducts ethics review\n    const ethicsReview = await agents.reviewer.review({\n      type: 'ai-ethics',\n      model: modelImplementation,\n      useCase: input.productIdea,\n      guidelines: ['fairness', 'transparency', 'accountability', 'privacy'],\n      stakeholders: input.targetMarket\n    });\n    \n    // Coordinator develops mitigation strategies\n    const mitigationPlan = await agents.coordinator.plan({\n      type: 'bias-mitigation',\n      issues: [...biasAnalysis.issues, ...ethicsReview.concerns],\n      strategies: ['resampling', 'reweighting', 'adversarial-debiasing', 'post-processing']\n    });\n    \n    // Coder implements bias mitigation\n    const mitigatedModel = await agents.coder.implement({\n      type: 'bias-mitigation',\n      model: modelImplementation,\n      strategies: mitigationPlan.selectedStrategies,\n      constraints: ethicsReview.requirements\n    });\n    \n    return {\n      biasAnalysis,\n      ethicsReview,\n      mitigationPlan,\n      mitigatedModel,\n      ethicsScore: ethicsReview.complianceScore * (1 - biasAnalysis.overallBias)\n    };\n  }\n});\n\n// Step 6: Deployment Preparation\nconst deploymentPrepPhase = createStep({\n  id: 'deployment-prep-phase',\n  description: 'Prepare for production deployment',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('üöÄ Starting Deployment Preparation Phase');\n    \n    const { mitigatedModel, apiImplementation, systemDesign } = input;\n    \n    // Architect designs deployment architecture\n    const deploymentArchitecture = await agents.architect.design({\n      type: 'deployment',\n      components: [mitigatedModel, apiImplementation],\n      infrastructure: systemDesign.deploymentTarget,\n      scalingStrategy: 'horizontal-autoscaling'\n    });\n    \n    // Coder creates deployment configurations\n    const deploymentConfig = await agents.coder.implement({\n      type: 'deployment-config',\n      architecture: deploymentArchitecture,\n      tools: ['kubernetes', 'terraform', 'helm'],\n      environments: ['staging', 'production']\n    });\n    \n    // Tester creates deployment tests\n    const deploymentTests = await agents.tester.createTests({\n      type: 'deployment',\n      config: deploymentConfig,\n      scenarios: ['rollout', 'rollback', 'scaling', 'failover', 'disaster-recovery']\n    });\n    \n    // Coordinator creates deployment checklist\n    const deploymentChecklist = await agents.coordinator.createChecklist({\n      phases: ['pre-deployment', 'deployment', 'post-deployment'],\n      validations: deploymentTests.validations,\n      approvals: ['technical', 'business', 'compliance', 'security']\n    });\n    \n    return {\n      deploymentArchitecture,\n      deploymentConfig,\n      deploymentTests,\n      deploymentChecklist,\n      deploymentReadiness: deploymentTests.readinessScore\n    };\n  }\n});\n\n// Step 7: Production Deployment\nconst productionDeployPhase = createStep({\n  id: 'production-deploy-phase',\n  description: 'Deploy to production with monitoring',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('üåê Starting Production Deployment Phase');\n    \n    const { deploymentConfig, deploymentChecklist } = input;\n    \n    // Coordinator orchestrates deployment\n    const deployment = await agents.coordinator.orchestrate({\n      type: 'production-deployment',\n      config: deploymentConfig,\n      strategy: 'blue-green',\n      rolloutPercentage: [10, 25, 50, 100]\n    });\n    \n    // Coder implements monitoring\n    const monitoringSetup = await agents.coder.implement({\n      type: 'monitoring',\n      metrics: ['latency', 'throughput', 'error-rate', 'model-drift', 'resource-usage'],\n      tools: ['prometheus', 'grafana', 'elasticsearch'],\n      alerts: deployment.alertingRules\n    });\n    \n    // Tester validates production deployment\n    const productionValidation = await agents.tester.validate({\n      deployment: deployment,\n      tests: ['smoke', 'integration', 'performance', 'security'],\n      environment: 'production'\n    });\n    \n    // Analyst sets up analytics\n    const analyticsSetup = await agents.analyst.setup({\n      type: 'production-analytics',\n      metrics: ['user-engagement', 'model-performance', 'business-kpis', 'cost-analysis'],\n      dashboards: ['executive', 'technical', 'operational']\n    });\n    \n    return {\n      deployment,\n      monitoringSetup,\n      productionValidation,\n      analyticsSetup,\n      deploymentStatus: productionValidation.status\n    };\n  }\n});\n\n// Step 8: Post-Deployment Monitoring and Iteration\nconst monitoringPhase = createStep({\n  id: 'monitoring-iteration-phase',\n  description: 'Monitor production and iterate based on feedback',\n  execute: async ({ input, agents, logger }) => {\n    logger.info('üìà Starting Monitoring and Iteration Phase');\n    \n    const { deployment, monitoringSetup, analyticsSetup } = input;\n    \n    // Analyst monitors performance\n    const performanceReport = await agents.analyst.monitor({\n      deployment: deployment,\n      duration: '7d',\n      metrics: monitoringSetup.metrics,\n      thresholds: input.systemDesign.slaRequirements\n    });\n    \n    // Researcher analyzes user feedback\n    const feedbackAnalysis = await agents.researcher.analyze({\n      type: 'user-feedback',\n      sources: ['support-tickets', 'reviews', 'usage-patterns'],\n      sentiment: true,\n      topics: true\n    });\n    \n    // Coordinator plans improvements\n    const improvementPlan = await agents.coordinator.plan({\n      type: 'continuous-improvement',\n      performanceGaps: performanceReport.gaps,\n      userFeedback: feedbackAnalysis.insights,\n      priority: 'business-impact'\n    });\n    \n    // Reviewer conducts post-deployment review\n    const postDeployReview = await agents.reviewer.review({\n      type: 'post-deployment',\n      deployment: deployment,\n      performance: performanceReport,\n      incidents: await agents.coordinator.getIncidents(deployment.id),\n      lessons: true\n    });\n    \n    // Prepare for next iteration\n    const nextIteration = await agents.coordinator.prepareIteration({\n      improvements: improvementPlan.tasks,\n      timeline: improvementPlan.schedule,\n      resources: improvementPlan.requiredResources\n    });\n    \n    return {\n      performanceReport,\n      feedbackAnalysis,\n      improvementPlan,\n      postDeployReview,\n      nextIteration,\n      productHealth: performanceReport.overallHealth\n    };\n  }\n});\n\n// Main Workflow Definition\nexport const aiProductDevelopmentWorkflow = createWorkflow({\n  id: 'ai-product-development',\n  name: 'AI Product Development Workflow',\n  description: 'End-to-end workflow for developing AI-powered products with comprehensive agent collaboration',\n  \n  steps: [\n    researchPhase,\n    dataCollectionPhase,\n    modelDevelopmentPhase,\n    apiDesignPhase,\n    ethicsReviewPhase,\n    deploymentPrepPhase,\n    productionDeployPhase,\n    monitoringPhase\n  ],\n  \n  config: {\n    retries: 3,\n    timeout: '24h',\n    checkpoints: true,\n    parallelization: {\n      enabled: true,\n      maxConcurrent: 4\n    }\n  },\n  \n  hooks: {\n    beforeStep: async ({ step, input, logger }) => {\n      logger.info(`Starting step: ${step.id}`);\n      await agents.coordinator.notifyStakeholders({\n        step: step.id,\n        status: 'starting',\n        input: input\n      });\n    },\n    \n    afterStep: async ({ step, output, logger }) => {\n      logger.info(`Completed step: ${step.id}`);\n      await agents.coordinator.saveCheckpoint({\n        step: step.id,\n        output: output,\n        timestamp: new Date()\n      });\n    },\n    \n    onError: async ({ error, step, logger }) => {\n      logger.error(`Error in step ${step.id}: ${error.message}`);\n      await agents.coordinator.handleError({\n        step: step.id,\n        error: error,\n        recovery: 'rollback'\n      });\n    },\n    \n    onComplete: async ({ output, logger }) => {\n      logger.info('AI Product Development Workflow completed successfully');\n      await agents.coordinator.generateReport({\n        type: 'project-completion',\n        results: output,\n        metrics: {\n          duration: output.totalDuration,\n          cost: output.totalCost,\n          quality: output.qualityMetrics\n        }\n      });\n    }\n  }\n});\n\n// Feedback Loop Implementation\nexport const feedbackLoop = createWorkflow({\n  id: 'ai-feedback-loop',\n  name: 'AI Product Feedback Loop',\n  description: 'Continuous improvement loop for deployed AI products',\n  \n  steps: [\n    createStep({\n      id: 'collect-metrics',\n      execute: async ({ agents }) => {\n        const metrics = await agents.analyst.collectMetrics({\n          sources: ['production', 'staging', 'user-analytics'],\n          window: '24h'\n        });\n        return { metrics };\n      }\n    }),\n    \n    createStep({\n      id: 'analyze-drift',\n      execute: async ({ input, agents }) => {\n        const driftAnalysis = await agents.analyst.detectDrift({\n          currentMetrics: input.metrics,\n          baseline: input.deploymentBaseline,\n          thresholds: input.driftThresholds\n        });\n        return { driftAnalysis };\n      }\n    }),\n    \n    createStep({\n      id: 'evaluate-retraining',\n      execute: async ({ input, agents }) => {\n        const retrainingDecision = await agents.coordinator.evaluate({\n          drift: input.driftAnalysis,\n          cost: await agents.analyst.estimateRetrainingCost(),\n          benefit: await agents.analyst.estimateRetrainingBenefit()\n        });\n        return { retrainingDecision };\n      }\n    }),\n    \n    createStep({\n      id: 'trigger-retraining',\n      execute: async ({ input, agents }) => {\n        if (input.retrainingDecision.shouldRetrain) {\n          const retrainingJob = await agents.coordinator.trigger({\n            workflow: 'model-retraining',\n            data: input.retrainingDecision.parameters\n          });\n          return { retrainingJob };\n        }\n        return { status: 'no-retraining-needed' };\n      }\n    })\n  ],\n  \n  config: {\n    schedule: '0 */6 * * *', // Run every 6 hours\n    continuous: true\n  }\n});\n\n// Export workflow runner\nexport const runAIProductDevelopment = async (input) => {\n  const agents = await initializeAgents();\n  \n  const result = await aiProductDevelopmentWorkflow.execute({\n    input: {\n      productIdea: input.productIdea,\n      targetMarket: input.targetMarket,\n      businessGoals: input.businessGoals,\n      constraints: input.constraints\n    },\n    agents,\n    context: {\n      environment: process.env.NODE_ENV,\n      region: process.env.DEPLOYMENT_REGION\n    }\n  });\n  \n  // Start feedback loop\n  await feedbackLoop.start({\n    deploymentId: result.deployment.id,\n    baseline: result.performanceReport\n  });\n  \n  return result;\n};\n\n// Helper function to initialize agents\nasync function initializeAgents() {\n  return {\n    coordinator: await createAgent('coordinator', {\n      capabilities: ['orchestration', 'planning', 'resource-management']\n    }),\n    researcher: await createAgent('researcher', {\n      capabilities: ['market-analysis', 'literature-review', 'trend-analysis']\n    }),\n    architect: await createAgent('architect', {\n      capabilities: ['system-design', 'api-design', 'deployment-architecture']\n    }),\n    coder: await createAgent('coder', {\n      capabilities: ['implementation', 'optimization', 'deployment-config']\n    }),\n    analyst: await createAgent('analyst', {\n      capabilities: ['data-analysis', 'performance-monitoring', 'bias-detection']\n    }),\n    tester: await createAgent('tester', {\n      capabilities: ['test-creation', 'validation', 'load-testing']\n    }),\n    reviewer: await createAgent('reviewer', {\n      capabilities: ['code-review', 'security-audit', 'ethics-compliance']\n    })\n  };\n}","import { createWorkflow, createStep } from '@mastra/core';\n\n/**\n * Enterprise-Scale System Migration Workflow\n * Orchestrates a complete system migration with 6 specialized agents\n * handling assessment, planning, execution, validation, and cutover\n */\n\n// Phase 1: Assessment & Discovery\nconst assessmentPhase = createStep({\n  id: 'assessment-phase',\n  description: 'Comprehensive system assessment and discovery',\n  execute: async ({ context }) => {\n    const { agents, migrationConfig } = context;\n    \n    // Parallel assessment tasks\n    const assessmentTasks = await Promise.all([\n      // System Discovery\n      agents.coder.execute({\n        task: 'system-discovery',\n        config: {\n          targets: migrationConfig.sourceSystems,\n          depth: 'comprehensive',\n          includeMetrics: true\n        }\n      }),\n      \n      // Risk Analysis\n      agents.analyst.execute({\n        task: 'risk-assessment',\n        config: {\n          domains: ['technical', 'business', 'compliance', 'security'],\n          impactAnalysis: true,\n          mitigationStrategies: true\n        }\n      }),\n      \n      // Architecture Review\n      agents.architect.execute({\n        task: 'architecture-assessment',\n        config: {\n          currentState: true,\n          futureState: true,\n          gapAnalysis: true,\n          dependencies: true\n        }\n      }),\n      \n      // Compliance Check\n      agents.reviewer.execute({\n        task: 'compliance-audit',\n        config: {\n          standards: ['SOC2', 'GDPR', 'HIPAA', 'PCI-DSS'],\n          regulatoryRequirements: true,\n          dataClassification: true\n        }\n      })\n    ]);\n    \n    // Coordinator consolidates findings\n    const assessment = await agents.coordinator.execute({\n      task: 'consolidate-assessment',\n      inputs: assessmentTasks,\n      outputs: {\n        executiveSummary: true,\n        detailedFindings: true,\n        riskMatrix: true,\n        recommendedApproach: true\n      }\n    });\n    \n    return {\n      assessment,\n      continueMigration: assessment.riskScore < migrationConfig.riskThreshold,\n      criticalIssues: assessment.criticalFindings\n    };\n  }\n});\n\n// Phase 2: Migration Planning\nconst planningPhase = createStep({\n  id: 'planning-phase',\n  description: 'Detailed migration planning with rollback strategies',\n  dependsOn: ['assessment-phase'],\n  execute: async ({ context, previousResults }) => {\n    const { agents, migrationConfig } = context;\n    const { assessment } = previousResults['assessment-phase'];\n    \n    // Architect designs migration strategy\n    const migrationArchitecture = await agents.architect.execute({\n      task: 'design-migration-architecture',\n      inputs: {\n        assessment,\n        targetPlatform: migrationConfig.targetPlatform,\n        constraints: migrationConfig.constraints\n      },\n      outputs: {\n        phasedApproach: true,\n        dataFlowDiagrams: true,\n        networkTopology: true,\n        securityArchitecture: true\n      }\n    });\n    \n    // Parallel planning activities\n    const planningTasks = await Promise.all([\n      // Technical Implementation Plan\n      agents.coder.execute({\n        task: 'create-technical-plan',\n        inputs: {\n          architecture: migrationArchitecture,\n          components: assessment.systemInventory\n        },\n        outputs: {\n          migrationScripts: true,\n          dataTransformations: true,\n          apiMappings: true,\n          rollbackProcedures: true\n        }\n      }),\n      \n      // Test Strategy\n      agents.tester.execute({\n        task: 'develop-test-strategy',\n        inputs: {\n          architecture: migrationArchitecture,\n          riskAreas: assessment.riskMatrix\n        },\n        outputs: {\n          testScenarios: true,\n          performanceBaselines: true,\n          validationCriteria: true,\n          rollbackTests: true\n        }\n      }),\n      \n      // Resource Optimization\n      agents.optimizer.execute({\n        task: 'optimize-migration-resources',\n        inputs: {\n          workloads: assessment.workloadAnalysis,\n          timeline: migrationConfig.timeline\n        },\n        outputs: {\n          resourceAllocation: true,\n          costOptimization: true,\n          performanceTargets: true,\n          scalingStrategies: true\n        }\n      }),\n      \n      // Documentation Plan\n      agents.documenter.execute({\n        task: 'create-documentation-plan',\n        outputs: {\n          runbooks: true,\n          disasterRecovery: true,\n          operationalProcedures: true,\n          knowledgeTransfer: true\n        }\n      })\n    ]);\n    \n    // Coordinator creates master plan\n    const masterPlan = await agents.coordinator.execute({\n      task: 'create-master-migration-plan',\n      inputs: {\n        architecture: migrationArchitecture,\n        plans: planningTasks\n      },\n      outputs: {\n        executionTimeline: true,\n        milestones: true,\n        goNoGoCriteria: true,\n        communicationPlan: true\n      }\n    });\n    \n    return {\n      masterPlan,\n      estimatedDuration: masterPlan.timeline.totalDays,\n      resourceRequirements: masterPlan.resources\n    };\n  }\n});\n\n// Phase 3: Pilot Migration\nconst pilotPhase = createStep({\n  id: 'pilot-phase',\n  description: 'Execute pilot migration with subset of systems',\n  dependsOn: ['planning-phase'],\n  execute: async ({ context, previousResults }) => {\n    const { agents, migrationConfig } = context;\n    const { masterPlan } = previousResults['planning-phase'];\n    \n    // Select pilot systems\n    const pilotSystems = await agents.analyst.execute({\n      task: 'select-pilot-systems',\n      inputs: {\n        systemInventory: previousResults['assessment-phase'].assessment.systemInventory,\n        criteria: {\n          representativeWorkloads: true,\n          lowBusinessImpact: true,\n          technicalComplexity: 'medium'\n        }\n      }\n    });\n    \n    // Execute pilot migration\n    const pilotExecution = await agents.coder.execute({\n      task: 'execute-pilot-migration',\n      inputs: {\n        systems: pilotSystems,\n        plan: masterPlan.technicalPlan\n      },\n      monitoring: {\n        realTime: true,\n        metrics: ['performance', 'errors', 'availability']\n      }\n    });\n    \n    // Parallel validation activities\n    const validationResults = await Promise.all([\n      // Functional Testing\n      agents.tester.execute({\n        task: 'pilot-functional-testing',\n        inputs: {\n          systems: pilotSystems,\n          testPlan: masterPlan.testStrategy\n        },\n        coverage: {\n          functional: 100,\n          integration: 95,\n          endToEnd: 90\n        }\n      }),\n      \n      // Performance Analysis\n      agents.optimizer.execute({\n        task: 'pilot-performance-analysis',\n        inputs: {\n          baseline: masterPlan.performanceBaselines,\n          current: pilotExecution.metrics\n        },\n        analysis: {\n          latency: true,\n          throughput: true,\n          resourceUtilization: true,\n          costComparison: true\n        }\n      }),\n      \n      // Security Validation\n      agents.reviewer.execute({\n        task: 'pilot-security-validation',\n        scans: {\n          vulnerability: true,\n          penetrationTesting: true,\n          complianceCheck: true,\n          dataIntegrity: true\n        }\n      })\n    ]);\n    \n    // Rollback Test\n    const rollbackTest = await agents.specialist.execute({\n      task: 'test-rollback-procedures',\n      inputs: {\n        procedures: masterPlan.rollbackPlan,\n        systems: pilotSystems\n      },\n      validation: {\n        dataConsistency: true,\n        serviceAvailability: true,\n        timingRequirements: true\n      }\n    });\n    \n    // Analyze pilot results\n    const pilotAnalysis = await agents.coordinator.execute({\n      task: 'analyze-pilot-results',\n      inputs: {\n        execution: pilotExecution,\n        validation: validationResults,\n        rollbackTest\n      },\n      outputs: {\n        successCriteriaMet: true,\n        issuesIdentified: true,\n        recommendedAdjustments: true,\n        confidenceScore: true\n      }\n    });\n    \n    return {\n      pilotAnalysis,\n      proceedToFullMigration: pilotAnalysis.confidenceScore > 0.85,\n      adjustmentsRequired: pilotAnalysis.recommendedAdjustments\n    };\n  }\n});\n\n// Phase 4: Full Migration Execution\nconst migrationPhase = createStep({\n  id: 'migration-phase',\n  description: 'Execute full-scale migration with parallel workstreams',\n  dependsOn: ['pilot-phase'],\n  execute: async ({ context, previousResults }) => {\n    const { agents, migrationConfig } = context;\n    const { masterPlan } = previousResults['planning-phase'];\n    const { adjustmentsRequired } = previousResults['pilot-phase'];\n    \n    // Apply pilot learnings\n    const updatedPlan = await agents.architect.execute({\n      task: 'update-migration-plan',\n      inputs: {\n        originalPlan: masterPlan,\n        adjustments: adjustmentsRequired\n      }\n    });\n    \n    // Initialize migration waves\n    const migrationWaves = await agents.coordinator.execute({\n      task: 'create-migration-waves',\n      inputs: {\n        systems: previousResults['assessment-phase'].assessment.systemInventory,\n        dependencies: updatedPlan.dependencyMap\n      },\n      strategy: {\n        parallelization: 'maximum-safe',\n        riskMitigation: true,\n        businessContinuity: true\n      }\n    });\n    \n    // Execute migration waves\n    const waveResults = [];\n    for (const wave of migrationWaves.waves) {\n      // Pre-wave preparation\n      const preparation = await Promise.all([\n        agents.coder.execute({\n          task: 'prepare-migration-environment',\n          wave: wave.id,\n          actions: ['backup', 'snapshot', 'healthCheck']\n        }),\n        \n        agents.documenter.execute({\n          task: 'update-runbooks',\n          wave: wave.id,\n          includeRollback: true\n        })\n      ]);\n      \n      // Execute wave with parallel workstreams\n      const waveExecution = await Promise.all([\n        // Data Migration\n        agents.specialist.execute({\n          task: 'migrate-data',\n          systems: wave.dataSystems,\n          strategy: {\n            method: 'parallel-replication',\n            validation: 'continuous',\n            encryption: true\n          }\n        }),\n        \n        // Application Migration\n        agents.coder.execute({\n          task: 'migrate-applications',\n          systems: wave.appSystems,\n          strategy: {\n            method: 'blue-green',\n            canaryPercentage: 10,\n            healthChecks: true\n          }\n        }),\n        \n        // Infrastructure Migration\n        agents.architect.execute({\n          task: 'migrate-infrastructure',\n          systems: wave.infraSystems,\n          strategy: {\n            method: 'lift-and-shift',\n            optimization: 'post-migration',\n            monitoring: true\n          }\n        })\n      ]);\n      \n      // Wave validation\n      const waveValidation = await Promise.all([\n        agents.tester.execute({\n          task: 'validate-wave-migration',\n          wave: wave.id,\n          tests: ['smoke', 'integration', 'performance']\n        }),\n        \n        agents.monitor.execute({\n          task: 'monitor-wave-health',\n          wave: wave.id,\n          duration: '2h',\n          alerts: true\n        })\n      ]);\n      \n      // Decision point\n      const waveDecision = await agents.coordinator.execute({\n        task: 'wave-go-nogo-decision',\n        inputs: {\n          execution: waveExecution,\n          validation: waveValidation\n        },\n        criteria: {\n          errorThreshold: 0.01,\n          performanceDegradation: 0.05,\n          businessImpact: 'minimal'\n        }\n      });\n      \n      if (!waveDecision.proceed) {\n        // Execute rollback if needed\n        await agents.specialist.execute({\n          task: 'execute-wave-rollback',\n          wave: wave.id,\n          reason: waveDecision.issues\n        });\n        \n        return {\n          status: 'rollback-executed',\n          wave: wave.id,\n          issues: waveDecision.issues\n        };\n      }\n      \n      waveResults.push({\n        wave: wave.id,\n        status: 'completed',\n        metrics: waveValidation\n      });\n    }\n    \n    return {\n      migrationStatus: 'completed',\n      waves: waveResults,\n      totalSystemsMigrated: migrationWaves.totalSystems\n    };\n  }\n});\n\n// Phase 5: Validation & Optimization\nconst validationPhase = createStep({\n  id: 'validation-phase',\n  description: 'Comprehensive validation and post-migration optimization',\n  dependsOn: ['migration-phase'],\n  execute: async ({ context, previousResults }) => {\n    const { agents } = context;\n    \n    // Comprehensive validation suite\n    const validationSuite = await Promise.all([\n      // End-to-end testing\n      agents.tester.execute({\n        task: 'e2e-validation',\n        scope: 'full-system',\n        scenarios: {\n          businessCritical: true,\n          edgeCases: true,\n          stressTesting: true,\n          disasterRecovery: true\n        }\n      }),\n      \n      // Performance optimization\n      agents.optimizer.execute({\n        task: 'post-migration-optimization',\n        areas: {\n          queryOptimization: true,\n          caching: true,\n          autoScaling: true,\n          costOptimization: true\n        }\n      }),\n      \n      // Security hardening\n      agents.reviewer.execute({\n        task: 'security-hardening',\n        actions: {\n          vulnerabilityPatching: true,\n          accessControlReview: true,\n          encryptionValidation: true,\n          complianceCertification: true\n        }\n      }),\n      \n      // Data validation\n      agents.analyst.execute({\n        task: 'data-integrity-validation',\n        checks: {\n          completeness: true,\n          accuracy: true,\n          consistency: true,\n          referentialIntegrity: true\n        }\n      })\n    ]);\n    \n    // Business validation\n    const businessValidation = await agents.specialist.execute({\n      task: 'business-process-validation',\n      processes: {\n        criticalWorkflows: true,\n        reportingAccuracy: true,\n        slaCompliance: true,\n        userAcceptance: true\n      }\n    });\n    \n    // Final report generation\n    const validationReport = await agents.documenter.execute({\n      task: 'generate-validation-report',\n      inputs: {\n        technical: validationSuite,\n        business: businessValidation\n      },\n      sections: {\n        executiveSummary: true,\n        detailedFindings: true,\n        recommendations: true,\n        signoffCriteria: true\n      }\n    });\n    \n    return {\n      validationReport,\n      readyForCutover: validationReport.allTestsPassed,\n      optimizationsSuggested: validationReport.recommendations\n    };\n  }\n});\n\n// Phase 6: Cutover & Go-Live\nconst cutoverPhase = createStep({\n  id: 'cutover-phase',\n  description: 'Final cutover and go-live orchestration',\n  dependsOn: ['validation-phase'],\n  execute: async ({ context, previousResults }) => {\n    const { agents, migrationConfig } = context;\n    const { readyForCutover } = previousResults['validation-phase'];\n    \n    if (!readyForCutover) {\n      return {\n        status: 'cutover-postponed',\n        reason: 'validation-criteria-not-met'\n      };\n    }\n    \n    // Cutover preparation\n    const cutoverPrep = await Promise.all([\n      // Communication\n      agents.coordinator.execute({\n        task: 'cutover-communication',\n        audiences: ['executives', 'users', 'support', 'partners'],\n        channels: ['email', 'portal', 'statusPage']\n      }),\n      \n      // Final backups\n      agents.specialist.execute({\n        task: 'final-backup-snapshot',\n        scope: 'all-systems',\n        verification: true\n      }),\n      \n      // Support readiness\n      agents.documenter.execute({\n        task: 'prepare-support-materials',\n        materials: ['faqs', 'troubleshooting', 'escalation']\n      })\n    ]);\n    \n    // Execute cutover\n    const cutoverExecution = await agents.coordinator.execute({\n      task: 'execute-cutover',\n      steps: [\n        { action: 'dns-switch', timing: 'immediate' },\n        { action: 'traffic-routing', timing: 'gradual', duration: '2h' },\n        { action: 'legacy-shutdown', timing: 'post-validation' }\n      ],\n      monitoring: {\n        realTime: true,\n        alerting: true,\n        rollbackReady: true\n      }\n    });\n    \n    // Post-cutover monitoring\n    const monitoring = await agents.monitor.execute({\n      task: 'post-cutover-monitoring',\n      duration: '24h',\n      metrics: {\n        availability: true,\n        performance: true,\n        errors: true,\n        userExperience: true\n      },\n      escalation: {\n        automatic: true,\n        thresholds: migrationConfig.slaThresholds\n      }\n    });\n    \n    // Final optimization\n    const finalOptimization = await agents.optimizer.execute({\n      task: 'post-cutover-optimization',\n      based_on: monitoring.metrics,\n      actions: {\n        autoScaling: true,\n        cacheWarming: true,\n        queryOptimization: true\n      }\n    });\n    \n    // Success criteria evaluation\n    const successEvaluation = await agents.analyst.execute({\n      task: 'evaluate-migration-success',\n      criteria: {\n        technical: monitoring.metrics,\n        business: cutoverExecution.businessMetrics,\n        financial: finalOptimization.costAnalysis\n      }\n    });\n    \n    return {\n      status: 'migration-complete',\n      success: successEvaluation,\n      finalReport: await agents.documenter.execute({\n        task: 'final-migration-report',\n        comprehensive: true\n      })\n    };\n  }\n});\n\n// Main Enterprise Migration Workflow\nexport const enterpriseMigrationWorkflow = createWorkflow({\n  id: 'enterprise-migration-workflow',\n  name: 'Enterprise System Migration',\n  description: 'Complete enterprise-scale system migration with multi-agent orchestration',\n  \n  steps: [\n    assessmentPhase,\n    planningPhase,\n    pilotPhase,\n    migrationPhase,\n    validationPhase,\n    cutoverPhase\n  ],\n  \n  config: {\n    // Workflow configuration\n    timeout: '30d', // 30-day maximum duration\n    retries: {\n      enabled: true,\n      maxAttempts: 3,\n      backoffStrategy: 'exponential'\n    },\n    \n    // Checkpoint management\n    checkpoints: {\n      enabled: true,\n      storage: 'persistent',\n      recovery: 'automatic'\n    },\n    \n    // Monitoring configuration\n    monitoring: {\n      detailed: true,\n      metrics: ['progress', 'errors', 'performance', 'cost'],\n      dashboards: ['executive', 'technical', 'operational']\n    },\n    \n    // Notification configuration\n    notifications: {\n      channels: ['email', 'slack', 'pagerduty'],\n      events: ['phase-complete', 'errors', 'rollback', 'success'],\n      stakeholders: {\n        executive: ['phase-complete', 'success'],\n        technical: ['all'],\n        operations: ['errors', 'rollback']\n      }\n    }\n  },\n  \n  // Error handling\n  onError: async ({ error, step, context }) => {\n    const { agents } = context;\n    \n    // Immediate response\n    await agents.coordinator.execute({\n      task: 'handle-migration-error',\n      error,\n      step,\n      actions: ['assess-impact', 'notify-stakeholders', 'prepare-rollback']\n    });\n    \n    // Decision making\n    const decision = await agents.analyst.execute({\n      task: 'error-recovery-decision',\n      error,\n      impact: error.impact,\n      options: ['retry', 'rollback', 'manual-intervention']\n    });\n    \n    return decision;\n  },\n  \n  // Success handler\n  onSuccess: async ({ results, context }) => {\n    const { agents } = context;\n    \n    // Generate comprehensive reports\n    await Promise.all([\n      agents.documenter.execute({\n        task: 'generate-success-reports',\n        audiences: ['executive', 'technical', 'compliance']\n      }),\n      \n      agents.optimizer.execute({\n        task: 'capture-optimization-opportunities',\n        for: 'future-migrations'\n      }),\n      \n      agents.coordinator.execute({\n        task: 'schedule-post-migration-reviews',\n        intervals: ['1-week', '1-month', '3-months']\n      })\n    ]);\n  }\n});\n\n// Helper function to create migration context\nexport function createMigrationContext(config) {\n  return {\n    migrationConfig: {\n      sourceSystems: config.sourceSystems || [],\n      targetPlatform: config.targetPlatform || 'cloud',\n      timeline: config.timeline || { months: 6 },\n      riskThreshold: config.riskThreshold || 0.7,\n      constraints: config.constraints || {},\n      slaThresholds: config.slaThresholds || {\n        availability: 0.999,\n        latency: 100,\n        errorRate: 0.001\n      }\n    },\n    agents: config.agents, // All 6 agents must be provided\n    metadata: {\n      project: config.projectName,\n      sponsor: config.sponsor,\n      budget: config.budget,\n      compliance: config.complianceRequirements || []\n    }\n  };\n}\n\n// Export for use in other workflows\nexport default enterpriseMigrationWorkflow;","import { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\n\n/**\n * Product Pivot Workflow - Strategic Business Transformation\n * \n * Demonstrates sophisticated multi-agent coordination for major product pivots\n * including market analysis, technical feasibility, risk assessment, and execution\n */\n\n// Input schema for pivot analysis\nconst pivotInputSchema = z.object({\n  currentProduct: z.object({\n    name: z.string(),\n    market: z.string(),\n    revenue: z.number(),\n    userBase: z.number(),\n    techStack: z.array(z.string()),\n    painPoints: z.array(z.string())\n  }),\n  pivotOptions: z.array(z.object({\n    name: z.string(),\n    targetMarket: z.string(),\n    estimatedTAM: z.number(),\n    requiredChanges: z.array(z.string()),\n    timeToMarket: z.number() // months\n  })),\n  constraints: z.object({\n    budget: z.number(),\n    timeline: z.number(), // months\n    teamSize: z.number(),\n    mustRetainFeatures: z.array(z.string()).optional()\n  }),\n  stakeholders: z.array(z.object({\n    role: z.string(),\n    concerns: z.array(z.string()),\n    priority: z.enum(['high', 'medium', 'low'])\n  }))\n});\n\n// Step 1: Market Analysis & Opportunity Assessment\nconst marketAnalysisStep = createStep({\n  id: 'market-analysis',\n  description: 'Comprehensive market analysis and opportunity assessment',\n  execute: async ({ data, agents }) => {\n    const { currentProduct, pivotOptions } = data;\n    \n    // Market Analyst performs deep market research\n    const marketAnalysis = await agents.marketAnalyst.analyze({\n      task: 'comprehensive-market-analysis',\n      data: {\n        currentMarket: {\n          product: currentProduct,\n          competitors: await agents.marketAnalyst.findCompetitors(currentProduct.market),\n          marketTrends: await agents.marketAnalyst.analyzeTrends(currentProduct.market)\n        },\n        pivotOpportunities: await Promise.all(\n          pivotOptions.map(async (option) => ({\n            option,\n            marketSize: await agents.marketAnalyst.calculateTAM(option.targetMarket),\n            competitiveLandscape: await agents.marketAnalyst.analyzeCompetition(option.targetMarket),\n            customerSegments: await agents.marketAnalyst.identifySegments(option.targetMarket),\n            growthProjections: await agents.marketAnalyst.projectGrowth(option, 5) // 5 year projection\n          }))\n        )\n      }\n    });\n\n    // Business Analyst evaluates business viability\n    const businessAnalysis = await agents.businessAnalyst.evaluate({\n      marketData: marketAnalysis,\n      criteria: {\n        revenueProjections: true,\n        customerAcquisitionCost: true,\n        lifetimeValue: true,\n        breakEvenAnalysis: true,\n        resourceRequirements: true\n      }\n    });\n\n    return {\n      marketInsights: marketAnalysis,\n      businessViability: businessAnalysis,\n      rankedOptions: businessAnalysis.rankings,\n      keyFindings: {\n        topOpportunity: businessAnalysis.rankings[0],\n        risks: marketAnalysis.identifiedRisks,\n        opportunities: marketAnalysis.opportunities\n      }\n    };\n  }\n});\n\n// Step 2: Technical Feasibility Assessment\nconst technicalFeasibilityStep = createStep({\n  id: 'technical-feasibility',\n  description: 'Assess technical feasibility and migration requirements',\n  execute: async ({ data, previousSteps, agents }) => {\n    const { currentProduct, constraints } = data;\n    const { rankedOptions } = previousSteps['market-analysis'];\n    \n    // Technical Analyst performs deep technical assessment\n    const technicalAssessment = await agents.technicalAnalyst.assess({\n      currentArchitecture: {\n        stack: currentProduct.techStack,\n        infrastructure: await agents.technicalAnalyst.analyzeInfrastructure(),\n        dependencies: await agents.technicalAnalyst.mapDependencies(),\n        technicalDebt: await agents.technicalAnalyst.assessTechnicalDebt()\n      },\n      pivotRequirements: await Promise.all(\n        rankedOptions.slice(0, 3).map(async (option) => ({\n          option,\n          architectureChanges: await agents.technicalAnalyst.designArchitecture(option),\n          migrationPath: await agents.technicalAnalyst.planMigration(option),\n          reuseableComponents: await agents.technicalAnalyst.identifyReusable(option),\n          newComponents: await agents.technicalAnalyst.identifyNewRequirements(option),\n          estimatedEffort: await agents.technicalAnalyst.estimateEffort(option)\n        }))\n      )\n    });\n\n    // Implementation Specialist creates execution plan\n    const implementationPlan = await agents.implementationSpecialist.createPlan({\n      technicalRequirements: technicalAssessment,\n      constraints,\n      priorities: {\n        minimizeDisruption: true,\n        maintainBackwardsCompatibility: constraints.mustRetainFeatures?.length > 0,\n        phaseApproach: true\n      }\n    });\n\n    return {\n      technicalAnalysis: technicalAssessment,\n      implementationStrategy: implementationPlan,\n      feasibilityScores: technicalAssessment.feasibilityRankings,\n      criticalPath: implementationPlan.criticalPath,\n      resourceNeeds: {\n        additionalSkills: implementationPlan.skillGaps,\n        infrastructure: implementationPlan.infrastructureNeeds,\n        tooling: implementationPlan.requiredTools\n      }\n    };\n  }\n});\n\n// Step 3: Risk Assessment & Mitigation Planning\nconst riskAssessmentStep = createStep({\n  id: 'risk-assessment',\n  description: 'Comprehensive risk assessment and mitigation strategies',\n  execute: async ({ data, previousSteps, agents }) => {\n    const { stakeholders } = data;\n    const marketAnalysis = previousSteps['market-analysis'];\n    const technicalAnalysis = previousSteps['technical-feasibility'];\n    \n    // Risk Analyst performs multi-dimensional risk analysis\n    const riskAnalysis = await agents.riskAnalyst.analyze({\n      dimensions: {\n        technical: {\n          migrationRisks: technicalAnalysis.implementationStrategy.risks,\n          scalabilityRisks: await agents.riskAnalyst.assessScalability(technicalAnalysis),\n          securityRisks: await agents.riskAnalyst.assessSecurity(technicalAnalysis)\n        },\n        business: {\n          marketRisks: marketAnalysis.keyFindings.risks,\n          competitiveRisks: await agents.riskAnalyst.assessCompetitive(marketAnalysis),\n          financialRisks: await agents.riskAnalyst.assessFinancial(marketAnalysis)\n        },\n        operational: {\n          teamRisks: await agents.riskAnalyst.assessTeamCapability(data.constraints),\n          processRisks: await agents.riskAnalyst.assessProcessChanges(),\n          customerRisks: await agents.riskAnalyst.assessCustomerImpact(data.currentProduct)\n        }\n      },\n      stakeholderConcerns: stakeholders\n    });\n\n    // Create comprehensive mitigation strategies\n    const mitigationPlan = await agents.riskAnalyst.createMitigationPlan({\n      identifiedRisks: riskAnalysis,\n      priorities: riskAnalysis.criticalRisks,\n      strategies: {\n        preventive: await agents.riskAnalyst.designPreventiveMeasures(riskAnalysis),\n        detective: await agents.riskAnalyst.designDetectionMechanisms(riskAnalysis),\n        corrective: await agents.riskAnalyst.designCorrectiveActions(riskAnalysis)\n      }\n    });\n\n    // Decision Support Agent synthesizes for decision making\n    const decisionMatrix = await agents.decisionSupportAgent.createMatrix({\n      options: marketAnalysis.rankedOptions.slice(0, 3),\n      criteria: {\n        marketOpportunity: marketAnalysis.businessViability,\n        technicalFeasibility: technicalAnalysis.feasibilityScores,\n        riskProfile: riskAnalysis.riskScores,\n        resourceRequirements: technicalAnalysis.resourceNeeds,\n        timeToMarket: technicalAnalysis.implementationStrategy.timeline\n      },\n      weights: {\n        marketOpportunity: 0.3,\n        technicalFeasibility: 0.25,\n        riskProfile: 0.2,\n        resourceRequirements: 0.15,\n        timeToMarket: 0.1\n      }\n    });\n\n    return {\n      riskProfile: riskAnalysis,\n      mitigationStrategies: mitigationPlan,\n      decisionMatrix,\n      recommendation: decisionMatrix.topRecommendation,\n      confidenceScore: decisionMatrix.confidenceLevel\n    };\n  }\n});\n\n// Step 4: Strategic Decision & Planning\nconst strategicDecisionStep = createStep({\n  id: 'strategic-decision',\n  description: 'Make strategic pivot decision and create execution plan',\n  execute: async ({ data, previousSteps, agents }) => {\n    const marketAnalysis = previousSteps['market-analysis'];\n    const technicalAnalysis = previousSteps['technical-feasibility'];\n    const riskAssessment = previousSteps['risk-assessment'];\n    \n    // Decision Support Agent facilitates decision\n    const pivotDecision = await agents.decisionSupportAgent.facilitateDecision({\n      recommendation: riskAssessment.recommendation,\n      supportingData: {\n        market: marketAnalysis,\n        technical: technicalAnalysis,\n        risk: riskAssessment\n      },\n      decisionCriteria: {\n        mustMeetConstraints: data.constraints,\n        alignWithStrategy: true,\n        stakeholderBuyIn: data.stakeholders\n      }\n    });\n\n    // Create comprehensive execution plan\n    const executionPlan = await agents.implementationSpecialist.createDetailedPlan({\n      decision: pivotDecision,\n      phases: [\n        {\n          name: 'Foundation',\n          duration: 2, // months\n          objectives: ['Core infrastructure', 'Team preparation', 'Initial prototypes'],\n          deliverables: await agents.implementationSpecialist.defineDeliverables('foundation')\n        },\n        {\n          name: 'Migration',\n          duration: 3,\n          objectives: ['Data migration', 'Feature parity', 'Customer pilot'],\n          deliverables: await agents.implementationSpecialist.defineDeliverables('migration')\n        },\n        {\n          name: 'Launch',\n          duration: 1,\n          objectives: ['Full rollout', 'Marketing campaign', 'Support readiness'],\n          deliverables: await agents.implementationSpecialist.defineDeliverables('launch')\n        }\n      ],\n      resources: technicalAnalysis.resourceNeeds,\n      riskMitigation: riskAssessment.mitigationStrategies\n    });\n\n    // Customer migration strategy\n    const migrationStrategy = await agents.businessAnalyst.createMigrationStrategy({\n      customerBase: data.currentProduct.userBase,\n      segments: marketAnalysis.marketInsights.pivotOpportunities[0].customerSegments,\n      approach: {\n        phased: true,\n        optIn: true,\n        incentives: await agents.businessAnalyst.designIncentives(),\n        communication: await agents.businessAnalyst.createCommsPlan()\n      }\n    });\n\n    return {\n      pivotDecision,\n      executionPlan,\n      migrationStrategy,\n      timeline: executionPlan.ganttChart,\n      milestones: executionPlan.keyMilestones,\n      successMetrics: pivotDecision.successCriteria\n    };\n  }\n});\n\n// Step 5: Execution Coordination\nconst executionCoordinationStep = createStep({\n  id: 'execution-coordination',\n  description: 'Coordinate multi-team execution and track progress',\n  execute: async ({ data, previousSteps, agents }) => {\n    const executionPlan = previousSteps['strategic-decision'].executionPlan;\n    const migrationStrategy = previousSteps['strategic-decision'].migrationStrategy;\n    \n    // Implementation Specialist coordinates execution\n    const executionTracking = await agents.implementationSpecialist.coordinate({\n      plan: executionPlan,\n      teams: {\n        engineering: {\n          tasks: executionPlan.phases[0].engineeringTasks,\n          dependencies: await agents.technicalAnalyst.mapDependencies(executionPlan)\n        },\n        product: {\n          tasks: executionPlan.phases[0].productTasks,\n          customerFeedback: await agents.marketAnalyst.gatherFeedback()\n        },\n        marketing: {\n          tasks: migrationStrategy.communication.tasks,\n          campaigns: await agents.businessAnalyst.planCampaigns()\n        }\n      },\n      coordination: {\n        dailyStandups: true,\n        weeklyReviews: true,\n        riskMonitoring: await agents.riskAnalyst.setupMonitoring(),\n        progressTracking: await agents.implementationSpecialist.setupTracking()\n      }\n    });\n\n    // Setup continuous monitoring\n    const monitoringDashboard = await agents.decisionSupportAgent.createDashboard({\n      metrics: {\n        progress: executionTracking.progressMetrics,\n        quality: await agents.technicalAnalyst.defineQualityMetrics(),\n        customer: await agents.marketAnalyst.defineCustomerMetrics(),\n        financial: await agents.businessAnalyst.defineFinancialMetrics()\n      },\n      alerts: {\n        riskThresholds: await agents.riskAnalyst.defineThresholds(),\n        progressDelays: executionTracking.delayTriggers,\n        qualityIssues: executionTracking.qualityTriggers\n      },\n      reporting: {\n        stakeholders: data.stakeholders,\n        frequency: 'weekly',\n        format: 'executive-dashboard'\n      }\n    });\n\n    return {\n      executionStatus: executionTracking,\n      monitoringSetup: monitoringDashboard,\n      currentPhase: executionTracking.currentPhase,\n      blockers: executionTracking.identifiedBlockers,\n      adjustments: executionTracking.recommendedAdjustments\n    };\n  }\n});\n\n// Step 6: Validation & Iteration\nconst validationIterationStep = createStep({\n  id: 'validation-iteration',\n  description: 'Validate progress and iterate based on feedback',\n  execute: async ({ data, previousSteps, agents }) => {\n    const executionStatus = previousSteps['execution-coordination'];\n    const pivotDecision = previousSteps['strategic-decision'].pivotDecision;\n    \n    // Comprehensive validation across all dimensions\n    const validationResults = await Promise.all([\n      // Market validation\n      agents.marketAnalyst.validate({\n        metrics: executionStatus.monitoringSetup.metrics.customer,\n        targets: pivotDecision.successCriteria.market,\n        feedback: await agents.marketAnalyst.collectCustomerFeedback()\n      }),\n      \n      // Technical validation\n      agents.technicalAnalyst.validate({\n        metrics: executionStatus.monitoringSetup.metrics.quality,\n        performance: await agents.technicalAnalyst.runPerformanceTests(),\n        security: await agents.technicalAnalyst.runSecurityAudits()\n      }),\n      \n      // Business validation\n      agents.businessAnalyst.validate({\n        metrics: executionStatus.monitoringSetup.metrics.financial,\n        roi: await agents.businessAnalyst.calculateActualROI(),\n        efficiency: await agents.businessAnalyst.measureEfficiency()\n      }),\n      \n      // Risk validation\n      agents.riskAnalyst.validate({\n        mitigationEffectiveness: await agents.riskAnalyst.assessMitigations(),\n        newRisks: await agents.riskAnalyst.identifyEmergingRisks(),\n        compliance: await agents.riskAnalyst.checkCompliance()\n      })\n    ]);\n\n    // Decision Support Agent synthesizes learnings\n    const iterationPlan = await agents.decisionSupportAgent.createIterationPlan({\n      validationResults,\n      gaps: await agents.decisionSupportAgent.identifyGaps(validationResults),\n      opportunities: await agents.decisionSupportAgent.identifyOpportunities(validationResults),\n      adjustments: {\n        immediate: await agents.implementationSpecialist.planImmediateChanges(validationResults),\n        strategic: await agents.decisionSupportAgent.recommendStrategicAdjustments(validationResults)\n      }\n    });\n\n    // Create comprehensive report\n    const pivotReport = await agents.decisionSupportAgent.generateReport({\n      executiveSummary: {\n        decision: pivotDecision,\n        progress: executionStatus.currentPhase,\n        results: validationResults,\n        recommendations: iterationPlan.adjustments\n      },\n      detailedAnalysis: {\n        market: validationResults[0],\n        technical: validationResults[1],\n        business: validationResults[2],\n        risk: validationResults[3]\n      },\n      nextSteps: iterationPlan,\n      lessonsLearned: await agents.decisionSupportAgent.compileLessons(previousSteps)\n    });\n\n    return {\n      validationSummary: validationResults,\n      iterationPlan,\n      pivotReport,\n      success: validationResults.every(v => v.meetsTargets),\n      nextActions: iterationPlan.prioritizedActions\n    };\n  }\n});\n\n// Create the complete workflow\nexport const productPivotWorkflow = createWorkflow({\n  name: 'product-pivot-workflow',\n  description: 'Orchestrates major product pivot with comprehensive analysis and execution',\n  inputSchema: pivotInputSchema,\n  steps: [\n    marketAnalysisStep,\n    technicalFeasibilityStep,\n    riskAssessmentStep,\n    strategicDecisionStep,\n    executionCoordinationStep,\n    validationIterationStep\n  ],\n  config: {\n    maxRetries: 3,\n    timeout: 7200000, // 2 hours for complete pivot analysis\n    parallel: {\n      enabled: true,\n      maxConcurrency: 4\n    },\n    monitoring: {\n      trackProgress: true,\n      alertOnFailure: true,\n      dashboardEnabled: true\n    }\n  }\n});\n\n// Workflow execution with real-time updates\nexport async function executeProductPivot(pivotData, options = {}) {\n  const workflow = productPivotWorkflow;\n  \n  // Setup real-time monitoring\n  const monitor = {\n    onStepStart: (step) => {\n      console.log(`üöÄ Starting: ${step.description}`);\n      options.onProgress?.({\n        step: step.id,\n        status: 'started',\n        timestamp: new Date()\n      });\n    },\n    onStepComplete: (step, result) => {\n      console.log(`‚úÖ Completed: ${step.description}`);\n      options.onProgress?.({\n        step: step.id,\n        status: 'completed',\n        result: result,\n        timestamp: new Date()\n      });\n    },\n    onError: (step, error) => {\n      console.error(`‚ùå Error in ${step.id}:`, error);\n      options.onError?.({\n        step: step.id,\n        error: error,\n        timestamp: new Date()\n      });\n    }\n  };\n  \n  try {\n    const result = await workflow.execute({\n      data: pivotData,\n      hooks: monitor,\n      context: {\n        urgency: options.urgency || 'normal',\n        stakeholderNotifications: options.notifyStakeholders || false\n      }\n    });\n    \n    // Generate executive summary\n    const summary = {\n      recommendation: result.steps['strategic-decision'].pivotDecision,\n      timeline: result.steps['strategic-decision'].timeline,\n      investment: result.steps['technical-feasibility'].resourceNeeds,\n      risks: result.steps['risk-assessment'].riskProfile.criticalRisks,\n      success: result.steps['validation-iteration'].success,\n      nextSteps: result.steps['validation-iteration'].nextActions\n    };\n    \n    return {\n      success: true,\n      summary,\n      fullReport: result.steps['validation-iteration'].pivotReport,\n      workflowResults: result\n    };\n  } catch (error) {\n    console.error('Product pivot workflow failed:', error);\n    throw error;\n  }\n}\n\n// Helper function for quick pivot assessment\nexport async function quickPivotAssessment(currentProduct, newDirection) {\n  const quickData = {\n    currentProduct,\n    pivotOptions: [{\n      name: newDirection.name,\n      targetMarket: newDirection.market,\n      estimatedTAM: newDirection.tam || 0,\n      requiredChanges: newDirection.changes || [],\n      timeToMarket: newDirection.timeline || 6\n    }],\n    constraints: {\n      budget: newDirection.budget || 1000000,\n      timeline: newDirection.maxTimeline || 12,\n      teamSize: newDirection.teamSize || 10\n    },\n    stakeholders: [{\n      role: 'Executive Team',\n      concerns: ['ROI', 'Market Share', 'Risk'],\n      priority: 'high'\n    }]\n  };\n  \n  return executeProductPivot(quickData, {\n    urgency: 'high',\n    onProgress: (update) => console.log('Progress:', update)\n  });\n}","import { createWorkflow, createStep } from '@mastra/core';\n\n// Security Breach Response Workflow - High-Stakes Crisis Management\n// Coordinates all 6 agents for immediate response, investigation, and recovery\n\n// Step 1: Initial Detection and Alert\nconst detectBreachStep = createStep({\n  id: 'detect-breach',\n  name: 'Detect Security Breach',\n  description: 'Initial breach detection and severity assessment',\n  execute: async ({ context }) => {\n    const { breachIndicators, timestamp, source } = context;\n    \n    // Immediate alert to all agents\n    const alertData = {\n      severity: 'CRITICAL',\n      timestamp,\n      source,\n      indicators: breachIndicators,\n      status: 'ACTIVE_BREACH'\n    };\n    \n    return {\n      alertData,\n      incidentId: `INC-${Date.now()}`,\n      initialAssessment: {\n        type: breachIndicators.type || 'UNKNOWN',\n        scope: breachIndicators.scope || 'INVESTIGATING',\n        impact: breachIndicators.impact || 'ASSESSING'\n      }\n    };\n  }\n});\n\n// Step 2: Crisis Team Assembly\nconst assembleCrisisTeamStep = createStep({\n  id: 'assemble-crisis-team',\n  name: 'Assemble Crisis Response Team',\n  description: 'Activate all agents in crisis mode',\n  execute: async ({ context, prevResult }) => {\n    const { alertData, incidentId } = prevResult;\n    \n    // Activate all 6 agents with specific crisis roles\n    const crisisTeam = {\n      agentCoordinator: {\n        agent: 'Agent Coordinator',\n        role: 'Crisis Commander',\n        responsibilities: ['Overall coordination', 'Decision making', 'Resource allocation'],\n        status: 'ACTIVATED'\n      },\n      researchAnalyst: {\n        agent: 'Research Analyst',\n        role: 'Threat Intelligence Lead',\n        responsibilities: ['Threat analysis', 'Attack vector identification', 'Intelligence gathering'],\n        status: 'ACTIVATED'\n      },\n      codeArchitect: {\n        agent: 'Code Architect',\n        role: 'Technical Response Lead',\n        responsibilities: ['System analysis', 'Vulnerability assessment', 'Technical remediation'],\n        status: 'ACTIVATED'\n      },\n      testingExpert: {\n        agent: 'Testing Expert',\n        role: 'Forensics Specialist',\n        responsibilities: ['Evidence collection', 'Impact analysis', 'System validation'],\n        status: 'ACTIVATED'\n      },\n      docWriter: {\n        agent: 'Documentation Writer',\n        role: 'Communications Lead',\n        responsibilities: ['Stakeholder updates', 'Compliance reporting', 'Public relations'],\n        status: 'ACTIVATED'\n      },\n      reviewSpecialist: {\n        agent: 'Review Specialist',\n        role: 'Compliance Officer',\n        responsibilities: ['Regulatory compliance', 'Legal coordination', 'Audit trail'],\n        status: 'ACTIVATED'\n      }\n    };\n    \n    return {\n      ...prevResult,\n      crisisTeam,\n      activationTime: new Date().toISOString()\n    };\n  }\n});\n\n// Step 3: Parallel Track - Technical Investigation\nconst technicalInvestigationStep = createStep({\n  id: 'technical-investigation',\n  name: 'Technical Investigation Track',\n  description: 'Parallel technical response and investigation',\n  execute: async ({ context, prevResult }) => {\n    const { incidentId, crisisTeam } = prevResult;\n    \n    // Research Analyst: Threat Analysis\n    const threatAnalysis = {\n      attackVector: 'ANALYZING',\n      threatActor: 'IDENTIFYING',\n      methodology: 'INVESTIGATING',\n      indicators: []\n    };\n    \n    // Code Architect: System Analysis\n    const systemAnalysis = {\n      affectedSystems: [],\n      vulnerabilities: [],\n      exploitMethods: [],\n      dataExposure: 'ASSESSING'\n    };\n    \n    // Testing Expert: Forensics\n    const forensics = {\n      evidenceCollected: [],\n      timeline: [],\n      affectedData: [],\n      intrusionPath: 'TRACING'\n    };\n    \n    return {\n      ...prevResult,\n      technicalFindings: {\n        threatAnalysis,\n        systemAnalysis,\n        forensics,\n        status: 'IN_PROGRESS'\n      }\n    };\n  }\n});\n\n// Step 4: Parallel Track - Communication Response\nconst communicationResponseStep = createStep({\n  id: 'communication-response',\n  name: 'Communication Response Track',\n  description: 'Parallel stakeholder and regulatory communication',\n  execute: async ({ context, prevResult }) => {\n    const { incidentId, alertData } = prevResult;\n    \n    // Documentation Writer: Stakeholder Communications\n    const stakeholderComms = {\n      internalNotifications: {\n        executives: 'DRAFTED',\n        employees: 'PENDING',\n        boardMembers: 'SCHEDULED'\n      },\n      externalNotifications: {\n        customers: 'PREPARING',\n        partners: 'QUEUED',\n        publicStatement: 'DRAFTING'\n      }\n    };\n    \n    // Review Specialist: Compliance Reporting\n    const complianceReporting = {\n      regulatoryBodies: {\n        gdpr: alertData.severity === 'CRITICAL' ? 'REQUIRED' : 'MONITORING',\n        hipaa: 'ASSESSING',\n        pci: 'EVALUATING',\n        sox: 'REVIEWING'\n      },\n      notificationDeadlines: {\n        gdpr: '72_HOURS',\n        statePrivacyLaws: '24_HOURS',\n        contractualObligations: 'REVIEWING'\n      },\n      auditTrail: {\n        actions: [],\n        decisions: [],\n        timeline: []\n      }\n    };\n    \n    return {\n      ...prevResult,\n      communicationStatus: {\n        stakeholderComms,\n        complianceReporting,\n        status: 'EXECUTING'\n      }\n    };\n  }\n});\n\n// Step 5: Containment Actions\nconst containmentStep = createStep({\n  id: 'containment',\n  name: 'Execute Containment Measures',\n  description: 'Implement immediate containment to prevent spread',\n  execute: async ({ context, prevResult }) => {\n    const { technicalFindings } = prevResult;\n    \n    const containmentActions = {\n      immediate: {\n        networkIsolation: 'EXECUTING',\n        accountSuspension: 'IN_PROGRESS',\n        serviceShutdown: 'EVALUATING',\n        accessRevocation: 'IMPLEMENTING'\n      },\n      shortTerm: {\n        patchDeployment: 'PREPARING',\n        configurationChanges: 'PLANNING',\n        monitoringEnhancement: 'DEPLOYING',\n        backupValidation: 'VERIFYING'\n      },\n      validation: {\n        containmentEffectiveness: 'MONITORING',\n        lateralMovementCheck: 'SCANNING',\n        persistenceMechanisms: 'INVESTIGATING'\n      }\n    };\n    \n    return {\n      ...prevResult,\n      containmentActions,\n      containmentStartTime: new Date().toISOString()\n    };\n  }\n});\n\n// Step 6: Eradication Process\nconst eradicationStep = createStep({\n  id: 'eradication',\n  name: 'Eradicate Threat',\n  description: 'Remove all traces of the security breach',\n  execute: async ({ context, prevResult }) => {\n    const { technicalFindings, containmentActions } = prevResult;\n    \n    const eradicationPlan = {\n      malwareRemoval: {\n        scanResults: 'EXECUTING',\n        cleanupActions: 'QUEUED',\n        verificationScans: 'SCHEDULED'\n      },\n      vulnerabilityPatching: {\n        criticalPatches: 'DEPLOYING',\n        systemUpdates: 'TESTING',\n        configurationHardening: 'IMPLEMENTING'\n      },\n      accessRemediation: {\n        compromisedAccounts: 'RESETTING',\n        privilegeReview: 'CONDUCTING',\n        mfaEnforcement: 'ENABLING'\n      },\n      dataIntegrity: {\n        corruptionCheck: 'SCANNING',\n        backupRestoration: 'EVALUATING',\n        integrityValidation: 'PENDING'\n      }\n    };\n    \n    return {\n      ...prevResult,\n      eradicationPlan,\n      eradicationStatus: 'IN_PROGRESS'\n    };\n  }\n});\n\n// Step 7: Recovery Operations\nconst recoveryStep = createStep({\n  id: 'recovery',\n  name: 'System Recovery',\n  description: 'Restore normal operations with enhanced security',\n  execute: async ({ context, prevResult }) => {\n    const { eradicationPlan } = prevResult;\n    \n    const recoveryOperations = {\n      systemRestoration: {\n        serviceReactivation: 'PHASED',\n        dataRestoration: 'VALIDATING',\n        functionalityTesting: 'EXECUTING',\n        performanceBaseline: 'MONITORING'\n      },\n      securityEnhancements: {\n        monitoringUpgrade: 'DEPLOYED',\n        detectionRules: 'ENHANCED',\n        responseAutomation: 'CONFIGURED',\n        accessControls: 'STRENGTHENED'\n      },\n      businessContinuity: {\n        operationalStatus: 'RESTORING',\n        customerServices: 'PHASED_ACTIVATION',\n        partnerIntegrations: 'TESTING',\n        revenueImpact: 'ASSESSING'\n      }\n    };\n    \n    return {\n      ...prevResult,\n      recoveryOperations,\n      recoveryStartTime: new Date().toISOString()\n    };\n  }\n});\n\n// Step 8: Customer Notification\nconst customerNotificationStep = createStep({\n  id: 'customer-notification',\n  name: 'Customer Notification Process',\n  description: 'Execute customer notification with regulatory compliance',\n  execute: async ({ context, prevResult }) => {\n    const { communicationStatus, technicalFindings } = prevResult;\n    \n    const notificationPlan = {\n      affectedCustomers: {\n        identification: 'COMPLETED',\n        segmentation: 'BY_IMPACT_LEVEL',\n        totalCount: 'CALCULATING',\n        dataTypes: 'CATALOGING'\n      },\n      notificationChannels: {\n        email: {\n          template: 'APPROVED',\n          scheduling: 'BATCHED',\n          personalization: 'CONFIGURED'\n        },\n        portal: {\n          announcement: 'POSTED',\n          faq: 'PUBLISHED',\n          supportResources: 'AVAILABLE'\n        },\n        directContact: {\n          highValueAccounts: 'CALLING',\n          enterpriseClients: 'SCHEDULED',\n          regulatoryRequired: 'PRIORITIZED'\n        }\n      },\n      supportPreparation: {\n        callCenterBriefing: 'COMPLETED',\n        scriptApproval: 'FINALIZED',\n        resourceAllocation: 'SCALED_UP',\n        escalationPaths: 'DEFINED'\n      },\n      legalCompliance: {\n        notificationContent: 'LEGALLY_REVIEWED',\n        timingCompliance: 'VERIFIED',\n        documentationTrail: 'MAINTAINED',\n        regulatoryFiling: 'SUBMITTED'\n      }\n    };\n    \n    return {\n      ...prevResult,\n      notificationPlan,\n      notificationExecutionTime: new Date().toISOString()\n    };\n  }\n});\n\n// Step 9: Lessons Learned\nconst lessonsLearnedStep = createStep({\n  id: 'lessons-learned',\n  name: 'Post-Incident Analysis',\n  description: 'Comprehensive review and improvement planning',\n  execute: async ({ context, prevResult }) => {\n    const { incidentId, technicalFindings, containmentActions, recoveryOperations } = prevResult;\n    \n    const postIncidentAnalysis = {\n      incidentReview: {\n        timeline: {\n          detectionDelay: 'ANALYZING',\n          responseTime: 'MEASURING',\n          containmentDuration: 'CALCULATING',\n          totalDowntime: 'COMPUTING'\n        },\n        effectiveness: {\n          detectionCapabilities: 'EVALUATING',\n          responseProcesses: 'ASSESSING',\n          communicationFlow: 'REVIEWING',\n          technicalMeasures: 'ANALYZING'\n        }\n      },\n      rootCauseAnalysis: {\n        technicalFactors: [],\n        processFailures: [],\n        humanFactors: [],\n        externalFactors: []\n      },\n      improvements: {\n        immediate: {\n          securityControls: [],\n          monitoringEnhancements: [],\n          responsePlaybooks: [],\n          trainingNeeds: []\n        },\n        strategic: {\n          architectureChanges: [],\n          processReengineering: [],\n          toolingUpgrades: [],\n          complianceEnhancements: []\n        }\n      },\n      metrics: {\n        impactAssessment: {\n          financialImpact: 'CALCULATING',\n          reputationalImpact: 'ASSESSING',\n          operationalImpact: 'MEASURED',\n          customerImpact: 'QUANTIFIED'\n        },\n        performanceMetrics: {\n          mttr: 'CALCULATED',\n          detectionAccuracy: 'MEASURED',\n          containmentSpeed: 'TRACKED',\n          recoveryEfficiency: 'EVALUATED'\n        }\n      }\n    };\n    \n    return {\n      ...prevResult,\n      postIncidentAnalysis,\n      incidentClosed: false,\n      followUpActions: 'SCHEDULED'\n    };\n  }\n});\n\n// Step 10: Final Coordination and Closure\nconst finalCoordinationStep = createStep({\n  id: 'final-coordination',\n  name: 'Final Coordination and Incident Closure',\n  description: 'Ensure all actions complete and incident properly closed',\n  execute: async ({ context, prevResult }) => {\n    const { incidentId, crisisTeam, postIncidentAnalysis } = prevResult;\n    \n    const closureChecklist = {\n      technicalClosure: {\n        allSystemsOperational: 'VERIFIED',\n        securityPostureEnhanced: 'CONFIRMED',\n        monitoringActive: 'VALIDATED',\n        backupsVerified: 'TESTED'\n      },\n      communicationClosure: {\n        stakeholdersNotified: 'COMPLETED',\n        regulatoryCompliance: 'FILED',\n        publicRelations: 'MANAGED',\n        customerSupport: 'ONGOING'\n      },\n      documentationClosure: {\n        incidentReport: 'FINALIZED',\n        technicalPostmortem: 'DOCUMENTED',\n        complianceRecords: 'ARCHIVED',\n        lessonsLearned: 'DISTRIBUTED'\n      },\n      teamDebriefing: {\n        agentPerformance: 'REVIEWED',\n        coordinationEffectiveness: 'ASSESSED',\n        improvementAreas: 'IDENTIFIED',\n        recognitionNeeds: 'NOTED'\n      }\n    };\n    \n    return {\n      incidentId,\n      status: 'CLOSED',\n      closureTime: new Date().toISOString(),\n      closureChecklist,\n      finalMetrics: {\n        totalDuration: 'CALCULATED',\n        businessImpact: 'QUANTIFIED',\n        lessonsImplemented: 'TRACKED',\n        residualRisk: 'ASSESSED'\n      },\n      followUp: {\n        thirtyDayReview: 'SCHEDULED',\n        quarterlyUpdate: 'PLANNED',\n        annualDrillUpdate: 'QUEUED'\n      }\n    };\n  }\n});\n\n// Create the Security Breach Response Workflow\nexport const securityBreachResponseWorkflow = createWorkflow({\n  id: 'security-breach-response',\n  name: 'Security Breach Response Workflow',\n  description: 'High-stakes crisis management workflow coordinating all agents for security incident response',\n  \n  steps: [\n    detectBreachStep,\n    assembleCrisisTeamStep,\n    // Parallel execution tracks\n    {\n      parallel: [\n        technicalInvestigationStep,\n        communicationResponseStep\n      ]\n    },\n    containmentStep,\n    eradicationStep,\n    recoveryStep,\n    customerNotificationStep,\n    lessonsLearnedStep,\n    finalCoordinationStep\n  ],\n  \n  config: {\n    retries: 0, // No retries in crisis mode - must succeed\n    timeout: 86400000, // 24 hours maximum\n    parallel: true,\n    errorHandling: 'ESCALATE',\n    \n    notifications: {\n      onStart: ['security-team', 'executives', 'legal'],\n      onError: ['ciso', 'ceo', 'board'],\n      onComplete: ['all-stakeholders']\n    },\n    \n    compliance: {\n      frameworks: ['GDPR', 'CCPA', 'HIPAA', 'PCI-DSS', 'SOX'],\n      auditLog: true,\n      encryption: true,\n      dataRetention: '7_YEARS'\n    },\n    \n    escalation: {\n      levels: [\n        { threshold: '5_MINUTES', notify: ['security-team'] },\n        { threshold: '15_MINUTES', notify: ['ciso', 'cto'] },\n        { threshold: '30_MINUTES', notify: ['ceo', 'legal'] },\n        { threshold: '1_HOUR', notify: ['board', 'external-counsel'] }\n      ]\n    }\n  }\n});\n\n// Export crisis mode triggers\nexport const crisisTriggers = {\n  dataBreachDetected: (indicators) => ({\n    workflow: 'security-breach-response',\n    priority: 'CRITICAL',\n    context: { breachIndicators: indicators, timestamp: new Date().toISOString() }\n  }),\n  \n  ransomwareDetected: (details) => ({\n    workflow: 'security-breach-response',\n    priority: 'CRITICAL',\n    context: { \n      breachIndicators: { type: 'RANSOMWARE', ...details },\n      timestamp: new Date().toISOString()\n    }\n  }),\n  \n  unauthorizedAccess: (accessDetails) => ({\n    workflow: 'security-breach-response',\n    priority: 'HIGH',\n    context: {\n      breachIndicators: { type: 'UNAUTHORIZED_ACCESS', ...accessDetails },\n      timestamp: new Date().toISOString()\n    }\n  }),\n  \n  dataExfiltration: (exfilDetails) => ({\n    workflow: 'security-breach-response',\n    priority: 'CRITICAL',\n    context: {\n      breachIndicators: { type: 'DATA_EXFILTRATION', ...exfilDetails },\n      timestamp: new Date().toISOString()\n    }\n  })\n};\n\n// Export compliance templates\nexport const complianceTemplates = {\n  gdprNotification: {\n    deadline: '72_HOURS',\n    requiredInfo: ['nature_of_breach', 'data_categories', 'affected_individuals', 'consequences', 'measures_taken'],\n    authorities: ['supervisory_authority', 'data_protection_officer']\n  },\n  \n  ccpaNotification: {\n    deadline: 'WITHOUT_UNREASONABLE_DELAY',\n    requiredInfo: ['breach_date', 'data_types', 'contact_info', 'remediation_steps'],\n    format: 'CLEAR_AND_CONSPICUOUS'\n  },\n  \n  hipaaNotification: {\n    deadline: '60_DAYS',\n    requiredInfo: ['phi_involved', 'breach_circumstances', 'mitigation_steps', 'prevention_measures'],\n    authorities: ['hhs_secretary', 'affected_individuals', 'media_if_500_plus']\n  }\n};\n\nexport default securityBreachResponseWorkflow;","// Complex Multi-Agent Workflows Index\nimport { startupLaunchWorkflow } from './startup-launch-workflow.js';\nimport { incidentResponseWorkflow } from './incident-response-workflow.js';\nimport { aiProductDevelopmentWorkflow, feedbackLoop as feedbackLoopWorkflow } from './ai-product-development-workflow.js';\nimport { enterpriseMigrationWorkflow } from './enterprise-migration-workflow.js';\nimport { productPivotWorkflow } from './product-pivot-workflow.js';\nimport { securityBreachResponseWorkflow } from './security-breach-response-workflow.js';\n\n// Export all complex workflows\nexport const complexWorkflows = {\n  // Startup and Product Development\n  startupLaunch: startupLaunchWorkflow,\n  aiProductDevelopment: aiProductDevelopmentWorkflow,\n  aiProductFeedbackLoop: feedbackLoopWorkflow,\n  productPivot: productPivotWorkflow,\n  \n  // Crisis and Incident Management\n  incidentResponse: incidentResponseWorkflow,\n  securityBreachResponse: securityBreachResponseWorkflow,\n  \n  // Enterprise Operations\n  enterpriseMigration: enterpriseMigrationWorkflow\n};\n\n// Workflow Categories for Easy Discovery\nexport const workflowCategories = {\n  productDevelopment: [\n    'startupLaunch',\n    'aiProductDevelopment',\n    'aiProductFeedbackLoop',\n    'productPivot'\n  ],\n  \n  crisisManagement: [\n    'incidentResponse',\n    'securityBreachResponse'\n  ],\n  \n  enterpriseOperations: [\n    'enterpriseMigration'\n  ]\n};\n\n// Workflow Metadata for UI Display\nexport const workflowMetadata = {\n  startupLaunch: {\n    name: 'Startup Launch Workflow',\n    description: 'Complete startup launch from idea to market with 6-agent coordination',\n    agents: 6,\n    estimatedDuration: '3-6 months',\n    complexity: 'High',\n    category: 'Product Development'\n  },\n  \n  incidentResponse: {\n    name: 'Incident Response Workflow',\n    description: 'Rapid incident response with parallel investigation and mitigation',\n    agents: 6,\n    estimatedDuration: '1-24 hours',\n    complexity: 'Critical',\n    category: 'Crisis Management'\n  },\n  \n  aiProductDevelopment: {\n    name: 'AI Product Development Workflow',\n    description: 'End-to-end AI/ML product development with ethics and compliance',\n    agents: 6,\n    estimatedDuration: '4-8 weeks',\n    complexity: 'Very High',\n    category: 'Product Development'\n  },\n  \n  enterpriseMigration: {\n    name: 'Enterprise Migration Workflow',\n    description: 'Large-scale system migration with phased rollout and validation',\n    agents: 6,\n    estimatedDuration: '30-90 days',\n    complexity: 'Enterprise',\n    category: 'Enterprise Operations'\n  },\n  \n  productPivot: {\n    name: 'Product Pivot Workflow',\n    description: 'Strategic product transformation with market and technical analysis',\n    agents: 6,\n    estimatedDuration: '2-4 weeks',\n    complexity: 'High',\n    category: 'Product Development'\n  },\n  \n  securityBreachResponse: {\n    name: 'Security Breach Response Workflow',\n    description: 'Critical security incident response with compliance and notification',\n    agents: 6,\n    estimatedDuration: '1-72 hours',\n    complexity: 'Critical',\n    category: 'Crisis Management'\n  }\n};\n\n// Helper function to get workflows by complexity\nexport function getWorkflowsByComplexity(complexity) {\n  return Object.entries(workflowMetadata)\n    .filter(([_, metadata]) => metadata.complexity === complexity)\n    .map(([id, _]) => id);\n}\n\n// Helper function to get workflows by category\nexport function getWorkflowsByCategory(category) {\n  return workflowCategories[category] || [];\n}\n\n// Helper function to get workflow info\nexport function getWorkflowInfo(workflowId) {\n  return {\n    workflow: complexWorkflows[workflowId],\n    metadata: workflowMetadata[workflowId]\n  };\n}","/**\n * Swarm Coordinator - Inter-swarm communication and coordination system\n */\n\nimport { EventEmitter } from 'events';\nimport chalk from 'chalk';\n\nexport class SwarmCoordinator extends EventEmitter {\n  constructor() {\n    super();\n    this.swarms = new Map();\n    this.communicationChannels = new Map();\n    this.globalState = {\n      insights: [],\n      sharedMemory: new Map(),\n      consensusProtocols: new Map(),\n      coordinationLocks: new Map()\n    };\n    this.messageQueue = [];\n    this.isActive = false;\n  }\n\n  /**\n   * Register a swarm with the coordinator\n   */\n  async registerSwarm(swarm) {\n    this.swarms.set(swarm.id, {\n      swarm,\n      lastHeartbeat: Date.now(),\n      communicationStats: {\n        messagesSent: 0,\n        messagesReceived: 0,\n        lastCommunication: null\n      }\n    });\n\n    // Create communication channels with existing swarms\n    for (const [existingId, _] of this.swarms) {\n      if (existingId !== swarm.id) {\n        this.createCommunicationChannel(swarm.id, existingId);\n      }\n    }\n\n    this.emit('swarmRegistered', swarm);\n    console.log(chalk.cyan(`üì° Swarm ${swarm.id} registered with coordinator`));\n  }\n\n  /**\n   * Create bidirectional communication channel\n   */\n  createCommunicationChannel(swarm1Id, swarm2Id) {\n    const channelId = this.getChannelId(swarm1Id, swarm2Id);\n    \n    if (!this.communicationChannels.has(channelId)) {\n      this.communicationChannels.set(channelId, {\n        id: channelId,\n        participants: [swarm1Id, swarm2Id],\n        established: Date.now(),\n        messages: [],\n        bandwidth: 1000, // messages per second\n        latency: 10, // ms\n        reliability: 0.99\n      });\n    }\n  }\n\n  /**\n   * Get channel ID for two swarms\n   */\n  getChannelId(swarm1Id, swarm2Id) {\n    return [swarm1Id, swarm2Id].sort().join('-');\n  }\n\n  /**\n   * Start coordination protocols\n   */\n  async startCoordination(swarmMap) {\n    this.isActive = true;\n    console.log(chalk.bold.cyan('üéØ Starting Swarm Coordination Protocols...'));\n\n    // Initialize consensus mechanisms\n    await this.initializeConsensus();\n\n    // Start heartbeat monitoring\n    this.startHeartbeatMonitoring();\n\n    // Start message processing\n    this.startMessageProcessing();\n\n    // Initialize shared memory sync\n    this.initializeSharedMemorySync();\n\n    // Start coordination cycles\n    this.startCoordinationCycles();\n  }\n\n  /**\n   * Initialize consensus mechanisms\n   */\n  async initializeConsensus() {\n    const consensusTypes = ['task-allocation', 'resource-sharing', 'priority-decisions'];\n    \n    for (const type of consensusTypes) {\n      this.globalState.consensusProtocols.set(type, {\n        type,\n        participants: new Set(),\n        proposals: [],\n        decisions: [],\n        algorithm: 'byzantine-fault-tolerant'\n      });\n    }\n  }\n\n  /**\n   * Start heartbeat monitoring\n   */\n  startHeartbeatMonitoring() {\n    setInterval(() => {\n      if (!this.isActive) return;\n\n      const now = Date.now();\n      for (const [swarmId, data] of this.swarms) {\n        const timeSinceLastHeartbeat = now - data.lastHeartbeat;\n        \n        if (timeSinceLastHeartbeat > 5000) {\n          console.log(chalk.yellow(`‚ö†Ô∏è  Swarm ${swarmId} heartbeat delayed`));\n          this.handleSwarmTimeout(swarmId);\n        }\n      }\n    }, 1000);\n  }\n\n  /**\n   * Start message processing\n   */\n  startMessageProcessing() {\n    setInterval(() => {\n      if (!this.isActive || this.messageQueue.length === 0) return;\n\n      const batch = this.messageQueue.splice(0, 10); // Process up to 10 messages\n      \n      for (const message of batch) {\n        this.processMessage(message);\n      }\n    }, 50);\n  }\n\n  /**\n   * Process individual message\n   */\n  async processMessage(message) {\n    const { from, to, type, payload, priority } = message;\n    \n    // Record communication\n    if (this.swarms.has(from)) {\n      this.swarms.get(from).communicationStats.messagesSent++;\n      this.swarms.get(from).communicationStats.lastCommunication = Date.now();\n    }\n    \n    if (this.swarms.has(to)) {\n      this.swarms.get(to).communicationStats.messagesReceived++;\n    }\n\n    // Handle different message types\n    switch (type) {\n      case 'consensus-proposal':\n        await this.handleConsensusProposal(from, payload);\n        break;\n      case 'resource-request':\n        await this.handleResourceRequest(from, to, payload);\n        break;\n      case 'insight-share':\n        await this.handleInsightShare(from, payload);\n        break;\n      case 'coordination-update':\n        await this.handleCoordinationUpdate(from, payload);\n        break;\n      case 'emergency':\n        await this.handleEmergencyMessage(from, payload);\n        break;\n      default:\n        // Store in channel history\n        const channelId = this.getChannelId(from, to);\n        if (this.communicationChannels.has(channelId)) {\n          this.communicationChannels.get(channelId).messages.push(message);\n        }\n    }\n\n    this.emit('messageProcessed', message);\n  }\n\n  /**\n   * Initialize shared memory synchronization\n   */\n  initializeSharedMemorySync() {\n    // Create memory segments\n    const memorySegments = [\n      'global-insights',\n      'resource-pool',\n      'task-registry',\n      'performance-metrics',\n      'error-logs'\n    ];\n\n    for (const segment of memorySegments) {\n      this.globalState.sharedMemory.set(segment, {\n        data: new Map(),\n        lastSync: Date.now(),\n        version: 1,\n        subscribers: new Set()\n      });\n    }\n  }\n\n  /**\n   * Start coordination cycles\n   */\n  startCoordinationCycles() {\n    // Major coordination cycle every 10 seconds\n    setInterval(() => {\n      if (!this.isActive) return;\n      this.executeMajorCoordinationCycle();\n    }, 10000);\n\n    // Minor coordination cycle every 2 seconds\n    setInterval(() => {\n      if (!this.isActive) return;\n      this.executeMinorCoordinationCycle();\n    }, 2000);\n  }\n\n  /**\n   * Execute major coordination cycle\n   */\n  async executeMajorCoordinationCycle() {\n    console.log(chalk.bold.blue('\\nüîÑ Major Coordination Cycle'));\n\n    // Global resource rebalancing\n    await this.rebalanceGlobalResources();\n\n    // Cross-swarm task optimization\n    await this.optimizeCrossSwarmTasks();\n\n    // Consensus decisions\n    await this.processConsensusDecisions();\n\n    // Performance synchronization\n    await this.synchronizePerformanceMetrics();\n  }\n\n  /**\n   * Execute minor coordination cycle\n   */\n  async executeMinorCoordinationCycle() {\n    // Quick health checks\n    this.performHealthChecks();\n\n    // Process urgent messages\n    this.processUrgentMessages();\n\n    // Update shared memory\n    this.updateSharedMemory();\n  }\n\n  /**\n   * Exchange data between swarms\n   */\n  async exchangeData(swarm1Id, swarm2Id, data) {\n    const message = {\n      id: `msg-${Date.now()}-${Math.random()}`,\n      from: swarm1Id,\n      to: swarm2Id,\n      type: 'data-exchange',\n      payload: data,\n      timestamp: Date.now(),\n      priority: 'normal'\n    };\n\n    this.messageQueue.push(message);\n    \n    // Bidirectional acknowledgment\n    const ackMessage = {\n      ...message,\n      from: swarm2Id,\n      to: swarm1Id,\n      type: 'ack'\n    };\n    \n    this.messageQueue.push(ackMessage);\n  }\n\n  /**\n   * Handle consensus proposal\n   */\n  async handleConsensusProposal(swarmId, proposal) {\n    const { type, decision, justification } = proposal;\n    const protocol = this.globalState.consensusProtocols.get(type);\n    \n    if (protocol) {\n      protocol.proposals.push({\n        swarmId,\n        decision,\n        justification,\n        timestamp: Date.now(),\n        votes: new Map()\n      });\n\n      // Request votes from other swarms\n      for (const [otherId, _] of this.swarms) {\n        if (otherId !== swarmId) {\n          this.requestVote(otherId, type, proposal);\n        }\n      }\n    }\n  }\n\n  /**\n   * Request vote from swarm\n   */\n  requestVote(swarmId, consensusType, proposal) {\n    const message = {\n      from: 'coordinator',\n      to: swarmId,\n      type: 'vote-request',\n      payload: { consensusType, proposal },\n      priority: 'high'\n    };\n    \n    this.messageQueue.push(message);\n  }\n\n  /**\n   * Handle resource request\n   */\n  async handleResourceRequest(from, to, request) {\n    const { resourceType, amount, urgency } = request;\n    \n    // Check if target swarm can provide resources\n    const targetSwarm = this.swarms.get(to);\n    if (targetSwarm && targetSwarm.swarm.metrics.efficiency > 50) {\n      // Approve resource transfer\n      const transfer = {\n        from: to,\n        to: from,\n        type: 'resource-transfer',\n        payload: { resourceType, amount: amount * 0.8 }, // Transfer 80% of requested\n        priority: urgency\n      };\n      \n      this.messageQueue.push(transfer);\n      console.log(chalk.green(`‚úÖ Resource transfer approved: ${resourceType} from ${to} to ${from}`));\n    }\n  }\n\n  /**\n   * Handle insight sharing\n   */\n  async handleInsightShare(from, insight) {\n    this.globalState.insights.push({\n      source: from,\n      insight,\n      timestamp: Date.now(),\n      propagated: false\n    });\n\n    // Propagate to relevant swarms\n    const relevantSwarms = this.findRelevantSwarms(insight);\n    for (const swarmId of relevantSwarms) {\n      if (swarmId !== from) {\n        this.propagateInsight(swarmId, insight);\n      }\n    }\n  }\n\n  /**\n   * Find swarms relevant to an insight\n   */\n  findRelevantSwarms(insight) {\n    const relevant = [];\n    \n    for (const [swarmId, data] of this.swarms) {\n      const swarm = data.swarm;\n      // Check if swarm capabilities match insight type\n      const hasRelevantAgents = Array.from(swarm.agents.values()).some(agent =>\n        agent.capabilities.some(cap => insight.tags?.includes(cap))\n      );\n      \n      if (hasRelevantAgents) {\n        relevant.push(swarmId);\n      }\n    }\n    \n    return relevant;\n  }\n\n  /**\n   * Propagate insight to swarm\n   */\n  propagateInsight(swarmId, insight) {\n    const message = {\n      from: 'coordinator',\n      to: swarmId,\n      type: 'insight-propagation',\n      payload: insight,\n      priority: 'normal'\n    };\n    \n    this.messageQueue.push(message);\n  }\n\n  /**\n   * Handle coordination update\n   */\n  async handleCoordinationUpdate(from, update) {\n    // Update coordination state\n    const segment = this.globalState.sharedMemory.get(update.segment);\n    if (segment) {\n      segment.data.set(update.key, update.value);\n      segment.version++;\n      segment.lastSync = Date.now();\n      \n      // Notify subscribers\n      for (const subscriberId of segment.subscribers) {\n        if (subscriberId !== from) {\n          this.notifyMemoryUpdate(subscriberId, update.segment, update.key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle emergency message\n   */\n  async handleEmergencyMessage(from, emergency) {\n    console.log(chalk.red(`üö® EMERGENCY from ${from}: ${emergency.message}`));\n    \n    // Immediate broadcast to all swarms\n    for (const [swarmId, _] of this.swarms) {\n      if (swarmId !== from) {\n        const alert = {\n          from: 'coordinator',\n          to: swarmId,\n          type: 'emergency-broadcast',\n          payload: emergency,\n          priority: 'critical'\n        };\n        \n        // Skip queue for emergencies\n        await this.processMessage(alert);\n      }\n    }\n    \n    // Trigger emergency protocols\n    await this.activateEmergencyProtocols(from, emergency);\n  }\n\n  /**\n   * Activate emergency protocols\n   */\n  async activateEmergencyProtocols(sourceSwarm, emergency) {\n    // Pause non-critical operations\n    this.globalState.coordinationLocks.set('emergency', {\n      active: true,\n      source: sourceSwarm,\n      timestamp: Date.now()\n    });\n\n    // Reallocate resources to handle emergency\n    await this.emergencyResourceReallocation(sourceSwarm, emergency);\n\n    // After 5 seconds, resume normal operations\n    setTimeout(() => {\n      this.globalState.coordinationLocks.delete('emergency');\n      console.log(chalk.green('‚úÖ Emergency protocols deactivated'));\n    }, 5000);\n  }\n\n  /**\n   * Emergency resource reallocation\n   */\n  async emergencyResourceReallocation(targetSwarm, emergency) {\n    // Find swarms with available resources\n    const availableSwarms = Array.from(this.swarms.entries())\n      .filter(([id, data]) => id !== targetSwarm && data.swarm.metrics.efficiency > 70)\n      .sort((a, b) => b[1].swarm.metrics.efficiency - a[1].swarm.metrics.efficiency);\n\n    // Allocate resources from top performers\n    for (const [swarmId, _] of availableSwarms.slice(0, 2)) {\n      const assistance = {\n        from: swarmId,\n        to: targetSwarm,\n        type: 'emergency-assistance',\n        payload: { \n          agents: 2, \n          priority: 'critical',\n          duration: 5000 \n        },\n        priority: 'critical'\n      };\n      \n      this.messageQueue.push(assistance);\n    }\n  }\n\n  /**\n   * Handle swarm timeout\n   */\n  handleSwarmTimeout(swarmId) {\n    const swarmData = this.swarms.get(swarmId);\n    if (!swarmData) return;\n\n    // Mark as potentially failed\n    swarmData.swarm.status = 'unresponsive';\n    \n    // Redistribute critical tasks\n    this.redistributeSwarmTasks(swarmData.swarm);\n    \n    // Alert other swarms\n    for (const [otherId, _] of this.swarms) {\n      if (otherId !== swarmId) {\n        const alert = {\n          from: 'coordinator',\n          to: otherId,\n          type: 'swarm-timeout',\n          payload: { timeoutSwarm: swarmId },\n          priority: 'high'\n        };\n        \n        this.messageQueue.push(alert);\n      }\n    }\n  }\n\n  /**\n   * Redistribute tasks from failed swarm\n   */\n  redistributeSwarmTasks(failedSwarm) {\n    const criticalTasks = failedSwarm.tasks.filter(task => task.priority === 'high');\n    \n    if (criticalTasks.length > 0) {\n      // Find healthy swarms\n      const healthySwarms = Array.from(this.swarms.values())\n        .filter(data => data.swarm.status === 'active' && data.swarm.metrics.efficiency > 60)\n        .map(data => data.swarm);\n      \n      // Distribute tasks round-robin\n      criticalTasks.forEach((task, index) => {\n        const targetSwarm = healthySwarms[index % healthySwarms.length];\n        if (targetSwarm) {\n          targetSwarm.tasks.push(task);\n          console.log(chalk.yellow(`üìã Redistributed task to ${targetSwarm.id}`));\n        }\n      });\n    }\n  }\n\n  /**\n   * Rebalance global resources\n   */\n  async rebalanceGlobalResources() {\n    const resourceMetrics = new Map();\n    \n    // Collect resource usage from all swarms\n    for (const [swarmId, data] of this.swarms) {\n      const swarm = data.swarm;\n      resourceMetrics.set(swarmId, {\n        efficiency: swarm.metrics.efficiency,\n        load: swarm.metrics.tasksAssigned - swarm.metrics.tasksCompleted,\n        health: swarm.metrics.health,\n        agentUtilization: this.calculateAgentUtilization(swarm)\n      });\n    }\n\n    // Identify imbalances\n    const avgEfficiency = Array.from(resourceMetrics.values())\n      .reduce((sum, m) => sum + m.efficiency, 0) / resourceMetrics.size;\n    \n    // Rebalance if needed\n    for (const [swarmId, metrics] of resourceMetrics) {\n      if (metrics.efficiency < avgEfficiency * 0.7) {\n        // This swarm needs help\n        await this.requestResourceAssistance(swarmId, metrics);\n      } else if (metrics.efficiency > avgEfficiency * 1.3) {\n        // This swarm can help others\n        await this.offerResourceAssistance(swarmId, metrics);\n      }\n    }\n  }\n\n  /**\n   * Calculate agent utilization\n   */\n  calculateAgentUtilization(swarm) {\n    const agents = Array.from(swarm.agents.values());\n    const activeAgents = agents.filter(a => a.status === 'working').length;\n    return (activeAgents / agents.length) * 100;\n  }\n\n  /**\n   * Optimize cross-swarm tasks\n   */\n  async optimizeCrossSwarmTasks() {\n    // Identify tasks that could benefit from cross-swarm collaboration\n    const collaborationOpportunities = [];\n    \n    for (const [swarmId, data] of this.swarms) {\n      const swarm = data.swarm;\n      \n      // Find complex tasks\n      const complexTasks = swarm.tasks.filter(task => \n        task.complexity === 'high' || task.requiresCollaboration\n      );\n      \n      for (const task of complexTasks) {\n        const bestPartner = this.findBestCollaborationPartner(swarm, task);\n        if (bestPartner) {\n          collaborationOpportunities.push({\n            task,\n            primarySwarm: swarmId,\n            partnerSwarm: bestPartner.id,\n            estimatedImprovement: 30 // percentage\n          });\n        }\n      }\n    }\n\n    // Execute collaborations\n    for (const collab of collaborationOpportunities) {\n      await this.establishCollaboration(collab);\n    }\n  }\n\n  /**\n   * Find best collaboration partner\n   */\n  findBestCollaborationPartner(swarm, task) {\n    let bestPartner = null;\n    let bestScore = 0;\n    \n    for (const [otherId, data] of this.swarms) {\n      if (otherId === swarm.id) continue;\n      \n      const otherSwarm = data.swarm;\n      const score = this.calculateCollaborationScore(task, otherSwarm);\n      \n      if (score > bestScore) {\n        bestScore = score;\n        bestPartner = otherSwarm;\n      }\n    }\n    \n    return bestScore > 0.7 ? bestPartner : null;\n  }\n\n  /**\n   * Calculate collaboration score\n   */\n  calculateCollaborationScore(task, swarm) {\n    // Check agent capabilities match\n    const requiredCapabilities = task.requiredCapabilities || [];\n    const swarmCapabilities = new Set();\n    \n    for (const agent of swarm.agents.values()) {\n      agent.capabilities.forEach(cap => swarmCapabilities.add(cap));\n    }\n    \n    const matchingCapabilities = requiredCapabilities.filter(cap => \n      swarmCapabilities.has(cap)\n    ).length;\n    \n    const capabilityScore = matchingCapabilities / Math.max(1, requiredCapabilities.length);\n    const efficiencyScore = swarm.metrics.efficiency / 100;\n    const availabilityScore = (100 - this.calculateAgentUtilization(swarm)) / 100;\n    \n    return (capabilityScore * 0.5) + (efficiencyScore * 0.3) + (availabilityScore * 0.2);\n  }\n\n  /**\n   * Establish collaboration\n   */\n  async establishCollaboration(collab) {\n    const message = {\n      from: collab.primarySwarm,\n      to: collab.partnerSwarm,\n      type: 'collaboration-request',\n      payload: {\n        task: collab.task,\n        estimatedDuration: 5000,\n        sharedReward: true\n      },\n      priority: 'high'\n    };\n    \n    this.messageQueue.push(message);\n    \n    console.log(chalk.magenta(\n      `ü§ù Collaboration established: ${collab.primarySwarm} ‚Üî ${collab.partnerSwarm}`\n    ));\n  }\n\n  /**\n   * Process consensus decisions\n   */\n  async processConsensusDecisions() {\n    for (const [type, protocol] of this.globalState.consensusProtocols) {\n      const pendingProposals = protocol.proposals.filter(p => !p.decided);\n      \n      for (const proposal of pendingProposals) {\n        const voteCount = proposal.votes.size;\n        const totalSwarms = this.swarms.size;\n        \n        if (voteCount >= Math.ceil(totalSwarms * 0.66)) {\n          // Consensus reached\n          const decision = this.tallyVotes(proposal);\n          protocol.decisions.push({\n            proposal,\n            decision,\n            timestamp: Date.now(),\n            consensus: true\n          });\n          \n          proposal.decided = true;\n          \n          // Broadcast decision\n          await this.broadcastConsensusDecision(type, decision);\n        }\n      }\n    }\n  }\n\n  /**\n   * Tally votes for proposal\n   */\n  tallyVotes(proposal) {\n    const votes = Array.from(proposal.votes.values());\n    const yesVotes = votes.filter(v => v === 'yes').length;\n    const noVotes = votes.filter(v => v === 'no').length;\n    \n    return {\n      approved: yesVotes > noVotes,\n      yesVotes,\n      noVotes,\n      participation: (votes.length / this.swarms.size) * 100\n    };\n  }\n\n  /**\n   * Broadcast consensus decision\n   */\n  async broadcastConsensusDecision(type, decision) {\n    for (const [swarmId, _] of this.swarms) {\n      const message = {\n        from: 'coordinator',\n        to: swarmId,\n        type: 'consensus-decision',\n        payload: { type, decision },\n        priority: 'high'\n      };\n      \n      this.messageQueue.push(message);\n    }\n    \n    console.log(chalk.green(`‚úÖ Consensus reached on ${type}: ${decision.approved ? 'APPROVED' : 'REJECTED'}`));\n  }\n\n  /**\n   * Synchronize performance metrics\n   */\n  async synchronizePerformanceMetrics() {\n    const globalMetrics = {\n      timestamp: Date.now(),\n      swarmMetrics: new Map(),\n      aggregates: {\n        totalTasks: 0,\n        completedTasks: 0,\n        avgEfficiency: 0,\n        totalAgents: 0,\n        activeAgents: 0\n      }\n    };\n\n    // Collect metrics from all swarms\n    for (const [swarmId, data] of this.swarms) {\n      const swarm = data.swarm;\n      globalMetrics.swarmMetrics.set(swarmId, swarm.metrics);\n      \n      globalMetrics.aggregates.totalTasks += swarm.metrics.tasksAssigned;\n      globalMetrics.aggregates.completedTasks += swarm.metrics.tasksCompleted;\n      globalMetrics.aggregates.totalAgents += swarm.agents.size;\n      globalMetrics.aggregates.activeAgents += Array.from(swarm.agents.values())\n        .filter(a => a.status === 'working').length;\n    }\n\n    globalMetrics.aggregates.avgEfficiency = \n      Array.from(globalMetrics.swarmMetrics.values())\n        .reduce((sum, m) => sum + m.efficiency, 0) / globalMetrics.swarmMetrics.size;\n\n    // Store in shared memory\n    const metricsSegment = this.globalState.sharedMemory.get('performance-metrics');\n    metricsSegment.data.set('global', globalMetrics);\n    \n    // Notify all swarms\n    for (const [swarmId, _] of this.swarms) {\n      this.notifyMemoryUpdate(swarmId, 'performance-metrics', 'global');\n    }\n  }\n\n  /**\n   * Notify memory update\n   */\n  notifyMemoryUpdate(swarmId, segment, key) {\n    const message = {\n      from: 'coordinator',\n      to: swarmId,\n      type: 'memory-update',\n      payload: { segment, key },\n      priority: 'normal'\n    };\n    \n    this.messageQueue.push(message);\n  }\n\n  /**\n   * Perform health checks\n   */\n  performHealthChecks() {\n    const now = Date.now();\n    \n    for (const [swarmId, data] of this.swarms) {\n      const swarm = data.swarm;\n      \n      // Check agent health\n      let unhealthyAgents = 0;\n      for (const agent of swarm.agents.values()) {\n        if (agent.performance < 50 || \n            (agent.status === 'working' && now - agent.lastActivity > 10000)) {\n          unhealthyAgents++;\n        }\n      }\n      \n      // Update swarm health\n      swarm.metrics.health = Math.max(0, 100 - (unhealthyAgents / swarm.agents.size) * 100);\n      \n      // Update heartbeat\n      data.lastHeartbeat = now;\n    }\n  }\n\n  /**\n   * Process urgent messages\n   */\n  processUrgentMessages() {\n    const urgentMessages = this.messageQueue.filter(m => \n      m.priority === 'critical' || m.priority === 'high'\n    );\n    \n    if (urgentMessages.length > 0) {\n      // Remove from main queue\n      this.messageQueue = this.messageQueue.filter(m => \n        m.priority !== 'critical' && m.priority !== 'high'\n      );\n      \n      // Process immediately\n      for (const message of urgentMessages) {\n        this.processMessage(message);\n      }\n    }\n  }\n\n  /**\n   * Update shared memory\n   */\n  updateSharedMemory() {\n    // Increment versions for changed segments\n    for (const [segmentName, segment] of this.globalState.sharedMemory) {\n      if (Date.now() - segment.lastSync > 1000) {\n        segment.version++;\n        segment.lastSync = Date.now();\n      }\n    }\n  }\n\n  /**\n   * Request resource assistance\n   */\n  async requestResourceAssistance(swarmId, metrics) {\n    const request = {\n      from: swarmId,\n      to: 'broadcast',\n      type: 'assistance-request',\n      payload: {\n        currentMetrics: metrics,\n        assistanceType: 'load-balancing',\n        urgency: metrics.efficiency < 50 ? 'high' : 'medium'\n      },\n      priority: 'high'\n    };\n    \n    // Broadcast to all healthy swarms\n    for (const [otherId, _] of this.swarms) {\n      if (otherId !== swarmId) {\n        this.messageQueue.push({ ...request, to: otherId });\n      }\n    }\n  }\n\n  /**\n   * Offer resource assistance\n   */\n  async offerResourceAssistance(swarmId, metrics) {\n    const offer = {\n      from: swarmId,\n      to: 'coordinator',\n      type: 'assistance-offer',\n      payload: {\n        availableCapacity: 100 - metrics.agentUtilization,\n        capabilities: this.getSwarmCapabilities(swarmId),\n        duration: 10000 // 10 seconds\n      },\n      priority: 'normal'\n    };\n    \n    this.messageQueue.push(offer);\n  }\n\n  /**\n   * Get swarm capabilities\n   */\n  getSwarmCapabilities(swarmId) {\n    const swarmData = this.swarms.get(swarmId);\n    if (!swarmData) return [];\n    \n    const capabilities = new Set();\n    for (const agent of swarmData.swarm.agents.values()) {\n      agent.capabilities.forEach(cap => capabilities.add(cap));\n    }\n    \n    return Array.from(capabilities);\n  }\n\n  /**\n   * Collect global insights\n   */\n  async collectGlobalInsights(swarmMap) {\n    const insights = {\n      timestamp: Date.now(),\n      swarmInsights: [],\n      patterns: [],\n      recommendations: []\n    };\n\n    // Collect from each swarm\n    for (const swarm of swarmMap.values()) {\n      const swarmInsight = {\n        swarmId: swarm.id,\n        efficiency: swarm.metrics.efficiency,\n        tasksCompleted: swarm.metrics.tasksCompleted,\n        agentPerformance: this.analyzeAgentPerformance(swarm),\n        bottlenecks: this.identifyBottlenecks(swarm)\n      };\n      \n      insights.swarmInsights.push(swarmInsight);\n    }\n\n    // Identify patterns\n    insights.patterns = this.identifyGlobalPatterns(insights.swarmInsights);\n    \n    // Generate recommendations\n    insights.recommendations = this.generateRecommendations(insights);\n\n    return insights;\n  }\n\n  /**\n   * Analyze agent performance\n   */\n  analyzeAgentPerformance(swarm) {\n    const agentStats = [];\n    \n    for (const agent of swarm.agents.values()) {\n      agentStats.push({\n        agentId: agent.id,\n        type: agent.type,\n        tasksCompleted: agent.tasksCompleted,\n        performance: agent.performance,\n        utilization: agent.status === 'working' ? 100 : 0\n      });\n    }\n    \n    return {\n      topPerformers: agentStats.sort((a, b) => b.tasksCompleted - a.tasksCompleted).slice(0, 3),\n      avgPerformance: agentStats.reduce((sum, a) => sum + a.performance, 0) / agentStats.length\n    };\n  }\n\n  /**\n   * Identify bottlenecks\n   */\n  identifyBottlenecks(swarm) {\n    const bottlenecks = [];\n    \n    // Check task backlog\n    const backlog = swarm.metrics.tasksAssigned - swarm.metrics.tasksCompleted;\n    if (backlog > swarm.agents.size * 2) {\n      bottlenecks.push({\n        type: 'task-backlog',\n        severity: 'high',\n        value: backlog\n      });\n    }\n\n    // Check agent utilization\n    const utilization = this.calculateAgentUtilization(swarm);\n    if (utilization > 90) {\n      bottlenecks.push({\n        type: 'over-utilization',\n        severity: 'medium',\n        value: utilization\n      });\n    }\n\n    return bottlenecks;\n  }\n\n  /**\n   * Identify global patterns\n   */\n  identifyGlobalPatterns(swarmInsights) {\n    const patterns = [];\n    \n    // Performance correlation\n    const efficiencies = swarmInsights.map(s => s.efficiency);\n    const avgEfficiency = efficiencies.reduce((a, b) => a + b, 0) / efficiencies.length;\n    \n    if (Math.max(...efficiencies) - Math.min(...efficiencies) > 30) {\n      patterns.push({\n        type: 'efficiency-imbalance',\n        description: 'Significant efficiency variance across swarms',\n        recommendation: 'Consider load balancing'\n      });\n    }\n\n    // Bottleneck patterns\n    const commonBottlenecks = new Map();\n    swarmInsights.forEach(insight => {\n      insight.bottlenecks.forEach(bottleneck => {\n        const count = commonBottlenecks.get(bottleneck.type) || 0;\n        commonBottlenecks.set(bottleneck.type, count + 1);\n      });\n    });\n\n    for (const [type, count] of commonBottlenecks) {\n      if (count > swarmInsights.length / 2) {\n        patterns.push({\n          type: 'common-bottleneck',\n          description: `${type} affecting ${count} swarms`,\n          recommendation: 'Address systematically'\n        });\n      }\n    }\n\n    return patterns;\n  }\n\n  /**\n   * Generate recommendations\n   */\n  generateRecommendations(insights) {\n    const recommendations = [];\n    \n    // Based on patterns\n    insights.patterns.forEach(pattern => {\n      recommendations.push({\n        priority: 'high',\n        action: pattern.recommendation,\n        rationale: pattern.description\n      });\n    });\n\n    // Based on performance\n    const lowPerformers = insights.swarmInsights.filter(s => s.efficiency < 60);\n    if (lowPerformers.length > 0) {\n      recommendations.push({\n        priority: 'medium',\n        action: 'Scale up low-performing swarms',\n        rationale: `${lowPerformers.length} swarms operating below 60% efficiency`\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Emergency shutdown\n   */\n  async emergencyShutdown(swarmMap) {\n    console.log(chalk.red('üö® Initiating emergency shutdown...'));\n    \n    this.isActive = false;\n    \n    // Save state\n    const emergencyState = {\n      timestamp: Date.now(),\n      swarms: Array.from(swarmMap.entries()),\n      sharedMemory: Array.from(this.globalState.sharedMemory.entries()),\n      pendingMessages: this.messageQueue\n    };\n\n    // Notify all swarms\n    for (const [swarmId, _] of this.swarms) {\n      const message = {\n        from: 'coordinator',\n        to: swarmId,\n        type: 'shutdown',\n        payload: { reason: 'emergency' },\n        priority: 'critical'\n      };\n      \n      await this.processMessage(message);\n    }\n\n    return emergencyState;\n  }\n}","/**\n * Swarm Monitor - Real-time performance monitoring and analytics\n */\n\nimport { EventEmitter } from 'events';\nimport chalk from 'chalk';\n\nexport class SwarmMonitor extends EventEmitter {\n  constructor() {\n    super();\n    this.metrics = new Map();\n    this.alerts = [];\n    this.performanceHistory = [];\n    this.thresholds = {\n      efficiency: { warning: 70, critical: 50 },\n      taskBacklog: { warning: 10, critical: 20 },\n      agentUtilization: { warning: 80, critical: 95 },\n      responseTime: { warning: 1000, critical: 3000 },\n      errorRate: { warning: 5, critical: 10 }\n    };\n    this.dashboardInterval = null;\n    this.isActive = false;\n  }\n\n  /**\n   * Initialize monitoring system\n   */\n  async initialize() {\n    this.isActive = true;\n    console.log(chalk.cyan('üìä Swarm Monitor initialized'));\n    \n    // Initialize metric collectors\n    this.initializeMetricCollectors();\n    \n    // Start real-time dashboard\n    this.startDashboard();\n    \n    // Initialize alert system\n    this.initializeAlertSystem();\n  }\n\n  /**\n   * Initialize metric collectors\n   */\n  initializeMetricCollectors() {\n    const collectors = [\n      'swarm-performance',\n      'agent-metrics',\n      'task-analytics',\n      'resource-usage',\n      'communication-stats',\n      'error-tracking'\n    ];\n\n    for (const collector of collectors) {\n      this.metrics.set(collector, {\n        current: new Map(),\n        history: [],\n        aggregates: {}\n      });\n    }\n  }\n\n  /**\n   * Start real-time dashboard\n   */\n  startDashboard() {\n    // Update dashboard every 5 seconds\n    this.dashboardInterval = setInterval(() => {\n      if (this.isActive) {\n        this.renderDashboard();\n      }\n    }, 5000);\n  }\n\n  /**\n   * Initialize alert system\n   */\n  initializeAlertSystem() {\n    // Check for alerts every second\n    setInterval(() => {\n      if (this.isActive) {\n        this.checkAlerts();\n      }\n    }, 1000);\n  }\n\n  /**\n   * Collect metrics from swarms\n   */\n  collectMetrics(swarms, globalMetrics) {\n    const timestamp = Date.now();\n    const snapshot = {\n      timestamp,\n      swarms: new Map(),\n      global: globalMetrics,\n      analysis: {}\n    };\n\n    // Collect swarm-level metrics\n    for (const [swarmId, swarm] of swarms) {\n      const swarmMetrics = this.collectSwarmMetrics(swarm);\n      snapshot.swarms.set(swarmId, swarmMetrics);\n    }\n\n    // Perform analysis\n    snapshot.analysis = this.analyzeMetrics(snapshot);\n    \n    // Store in history\n    this.performanceHistory.push(snapshot);\n    \n    // Keep only last 100 snapshots\n    if (this.performanceHistory.length > 100) {\n      this.performanceHistory.shift();\n    }\n\n    // Update current metrics\n    this.updateCurrentMetrics(snapshot);\n    \n    // Emit metrics event\n    this.emit('metricsCollected', snapshot);\n  }\n\n  /**\n   * Collect metrics for individual swarm\n   */\n  collectSwarmMetrics(swarm) {\n    const metrics = {\n      id: swarm.id,\n      status: swarm.status,\n      efficiency: swarm.metrics.efficiency,\n      tasksAssigned: swarm.metrics.tasksAssigned,\n      tasksCompleted: swarm.metrics.tasksCompleted,\n      taskBacklog: swarm.metrics.tasksAssigned - swarm.metrics.tasksCompleted,\n      health: swarm.metrics.health,\n      agents: this.collectAgentMetrics(swarm.agents),\n      performance: {\n        throughput: this.calculateThroughput(swarm),\n        responseTime: this.calculateAverageResponseTime(swarm),\n        errorRate: this.calculateErrorRate(swarm)\n      },\n      resources: {\n        cpuUsage: Math.random() * 100, // Simulated\n        memoryUsage: Math.random() * 100, // Simulated\n        networkBandwidth: Math.random() * 1000 // Simulated\n      }\n    };\n\n    return metrics;\n  }\n\n  /**\n   * Collect agent metrics\n   */\n  collectAgentMetrics(agents) {\n    const agentMetrics = {\n      total: agents.size,\n      byStatus: { idle: 0, working: 0, failed: 0 },\n      byType: new Map(),\n      performance: []\n    };\n\n    for (const agent of agents.values()) {\n      // Status counts\n      agentMetrics.byStatus[agent.status]++;\n      \n      // Type counts\n      const typeCount = agentMetrics.byType.get(agent.type) || 0;\n      agentMetrics.byType.set(agent.type, typeCount + 1);\n      \n      // Performance data\n      agentMetrics.performance.push({\n        id: agent.id,\n        type: agent.type,\n        tasksCompleted: agent.tasksCompleted,\n        performance: agent.performance,\n        utilization: agent.status === 'working' ? 100 : 0\n      });\n    }\n\n    // Calculate aggregates\n    agentMetrics.avgPerformance = agentMetrics.performance.length > 0\n      ? agentMetrics.performance.reduce((sum, a) => sum + a.performance, 0) / agentMetrics.performance.length\n      : 0;\n    \n    agentMetrics.utilization = (agentMetrics.byStatus.working / agentMetrics.total) * 100;\n\n    return agentMetrics;\n  }\n\n  /**\n   * Calculate throughput\n   */\n  calculateThroughput(swarm) {\n    // Find previous snapshot\n    const previousSnapshot = this.performanceHistory\n      .slice(-2, -1)[0];\n    \n    if (!previousSnapshot) return 0;\n    \n    const previousSwarmData = previousSnapshot.swarms.get(swarm.id);\n    if (!previousSwarmData) return 0;\n    \n    const timeDiff = Date.now() - previousSnapshot.timestamp;\n    const tasksDiff = swarm.metrics.tasksCompleted - previousSwarmData.tasksCompleted;\n    \n    return (tasksDiff / timeDiff) * 1000; // Tasks per second\n  }\n\n  /**\n   * Calculate average response time\n   */\n  calculateAverageResponseTime(swarm) {\n    // Simulated for demo\n    return 500 + Math.random() * 1000;\n  }\n\n  /**\n   * Calculate error rate\n   */\n  calculateErrorRate(swarm) {\n    // Simulated for demo\n    return Math.random() * 5;\n  }\n\n  /**\n   * Analyze metrics\n   */\n  analyzeMetrics(snapshot) {\n    const analysis = {\n      trends: this.analyzeTrends(),\n      anomalies: this.detectAnomalies(snapshot),\n      predictions: this.generatePredictions(snapshot),\n      recommendations: this.generateMonitoringRecommendations(snapshot)\n    };\n\n    return analysis;\n  }\n\n  /**\n   * Analyze trends\n   */\n  analyzeTrends() {\n    if (this.performanceHistory.length < 5) {\n      return { status: 'insufficient-data' };\n    }\n\n    const recentHistory = this.performanceHistory.slice(-10);\n    const trends = {\n      efficiency: this.calculateTrend(recentHistory, 'efficiency'),\n      throughput: this.calculateTrend(recentHistory, 'throughput'),\n      errorRate: this.calculateTrend(recentHistory, 'errorRate')\n    };\n\n    return trends;\n  }\n\n  /**\n   * Calculate trend for metric\n   */\n  calculateTrend(history, metric) {\n    const values = history.map(snapshot => {\n      const swarmValues = Array.from(snapshot.swarms.values());\n      if (metric === 'efficiency') {\n        return swarmValues.reduce((sum, s) => sum + s.efficiency, 0) / swarmValues.length;\n      } else if (metric === 'throughput') {\n        return swarmValues.reduce((sum, s) => sum + s.performance.throughput, 0);\n      } else if (metric === 'errorRate') {\n        return swarmValues.reduce((sum, s) => sum + s.performance.errorRate, 0) / swarmValues.length;\n      }\n      return 0;\n    });\n\n    // Simple linear regression\n    const n = values.length;\n    const sumX = (n * (n - 1)) / 2;\n    const sumY = values.reduce((a, b) => a + b, 0);\n    const sumXY = values.reduce((sum, y, x) => sum + x * y, 0);\n    const sumX2 = (n * (n - 1) * (2 * n - 1)) / 6;\n    \n    const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n    \n    return {\n      direction: slope > 0.1 ? 'increasing' : slope < -0.1 ? 'decreasing' : 'stable',\n      rate: Math.abs(slope),\n      currentValue: values[values.length - 1]\n    };\n  }\n\n  /**\n   * Detect anomalies\n   */\n  detectAnomalies(snapshot) {\n    const anomalies = [];\n    \n    for (const [swarmId, metrics] of snapshot.swarms) {\n      // Check efficiency\n      if (metrics.efficiency < this.thresholds.efficiency.critical) {\n        anomalies.push({\n          type: 'critical-efficiency',\n          swarmId,\n          value: metrics.efficiency,\n          threshold: this.thresholds.efficiency.critical\n        });\n      }\n      \n      // Check task backlog\n      if (metrics.taskBacklog > this.thresholds.taskBacklog.critical) {\n        anomalies.push({\n          type: 'critical-backlog',\n          swarmId,\n          value: metrics.taskBacklog,\n          threshold: this.thresholds.taskBacklog.critical\n        });\n      }\n      \n      // Check agent utilization\n      if (metrics.agents.utilization > this.thresholds.agentUtilization.critical) {\n        anomalies.push({\n          type: 'critical-utilization',\n          swarmId,\n          value: metrics.agents.utilization,\n          threshold: this.thresholds.agentUtilization.critical\n        });\n      }\n      \n      // Check error rate\n      if (metrics.performance.errorRate > this.thresholds.errorRate.critical) {\n        anomalies.push({\n          type: 'critical-errors',\n          swarmId,\n          value: metrics.performance.errorRate,\n          threshold: this.thresholds.errorRate.critical\n        });\n      }\n    }\n    \n    return anomalies;\n  }\n\n  /**\n   * Generate predictions\n   */\n  generatePredictions(snapshot) {\n    const predictions = {\n      taskCompletionTime: this.predictTaskCompletionTime(snapshot),\n      resourceExhaustion: this.predictResourceExhaustion(snapshot),\n      performanceDegradation: this.predictPerformanceDegradation(snapshot)\n    };\n    \n    return predictions;\n  }\n\n  /**\n   * Predict task completion time\n   */\n  predictTaskCompletionTime(snapshot) {\n    let totalBacklog = 0;\n    let totalThroughput = 0;\n    \n    for (const metrics of snapshot.swarms.values()) {\n      totalBacklog += metrics.taskBacklog;\n      totalThroughput += metrics.performance.throughput;\n    }\n    \n    if (totalThroughput === 0) return Infinity;\n    \n    return {\n      estimatedTime: (totalBacklog / totalThroughput) * 1000, // milliseconds\n      confidence: 0.75\n    };\n  }\n\n  /**\n   * Predict resource exhaustion\n   */\n  predictResourceExhaustion(snapshot) {\n    const predictions = [];\n    \n    for (const [swarmId, metrics] of snapshot.swarms) {\n      const cpuTrend = this.calculateResourceTrend('cpu', swarmId);\n      const memoryTrend = this.calculateResourceTrend('memory', swarmId);\n      \n      if (cpuTrend.rate > 0.5 && metrics.resources.cpuUsage > 80) {\n        predictions.push({\n          swarmId,\n          resource: 'cpu',\n          timeToExhaustion: (100 - metrics.resources.cpuUsage) / cpuTrend.rate * 1000\n        });\n      }\n      \n      if (memoryTrend.rate > 0.5 && metrics.resources.memoryUsage > 80) {\n        predictions.push({\n          swarmId,\n          resource: 'memory',\n          timeToExhaustion: (100 - metrics.resources.memoryUsage) / memoryTrend.rate * 1000\n        });\n      }\n    }\n    \n    return predictions;\n  }\n\n  /**\n   * Calculate resource trend\n   */\n  calculateResourceTrend(resource, swarmId) {\n    // Simplified for demo\n    return {\n      rate: Math.random() * 0.5,\n      direction: 'increasing'\n    };\n  }\n\n  /**\n   * Predict performance degradation\n   */\n  predictPerformanceDegradation(snapshot) {\n    const predictions = [];\n    \n    const trends = this.analyzeTrends();\n    \n    if (trends.efficiency && trends.efficiency.direction === 'decreasing') {\n      predictions.push({\n        metric: 'efficiency',\n        currentTrend: trends.efficiency,\n        riskLevel: trends.efficiency.rate > 0.5 ? 'high' : 'medium',\n        estimatedImpact: trends.efficiency.rate * 10 // percentage\n      });\n    }\n    \n    if (trends.errorRate && trends.errorRate.direction === 'increasing') {\n      predictions.push({\n        metric: 'errorRate',\n        currentTrend: trends.errorRate,\n        riskLevel: trends.errorRate.rate > 0.3 ? 'high' : 'medium',\n        estimatedImpact: trends.errorRate.rate * 5\n      });\n    }\n    \n    return predictions;\n  }\n\n  /**\n   * Generate monitoring recommendations\n   */\n  generateMonitoringRecommendations(snapshot) {\n    const recommendations = [];\n    const analysis = snapshot.analysis;\n    \n    // Based on anomalies\n    if (analysis.anomalies.length > 0) {\n      analysis.anomalies.forEach(anomaly => {\n        recommendations.push({\n          priority: 'high',\n          type: anomaly.type,\n          action: this.getAnomalyRecommendation(anomaly),\n          targetSwarm: anomaly.swarmId\n        });\n      });\n    }\n    \n    // Based on predictions\n    if (analysis.predictions.resourceExhaustion.length > 0) {\n      recommendations.push({\n        priority: 'medium',\n        type: 'resource-scaling',\n        action: 'Consider scaling resources for affected swarms',\n        details: analysis.predictions.resourceExhaustion\n      });\n    }\n    \n    // Based on trends\n    if (analysis.trends.efficiency && analysis.trends.efficiency.direction === 'decreasing') {\n      recommendations.push({\n        priority: 'medium',\n        type: 'efficiency-optimization',\n        action: 'Investigate declining efficiency trend',\n        currentTrend: analysis.trends.efficiency\n      });\n    }\n    \n    return recommendations;\n  }\n\n  /**\n   * Get anomaly recommendation\n   */\n  getAnomalyRecommendation(anomaly) {\n    const recommendations = {\n      'critical-efficiency': 'Redistribute tasks or scale agents',\n      'critical-backlog': 'Increase agent capacity or optimize task processing',\n      'critical-utilization': 'Add more agents or optimize workload distribution',\n      'critical-errors': 'Investigate error sources and implement fixes'\n    };\n    \n    return recommendations[anomaly.type] || 'Investigate anomaly';\n  }\n\n  /**\n   * Update current metrics\n   */\n  updateCurrentMetrics(snapshot) {\n    // Update swarm performance metrics\n    const perfMetrics = this.metrics.get('swarm-performance');\n    for (const [swarmId, metrics] of snapshot.swarms) {\n      perfMetrics.current.set(swarmId, {\n        efficiency: metrics.efficiency,\n        throughput: metrics.performance.throughput,\n        health: metrics.health\n      });\n    }\n    \n    // Update aggregates\n    perfMetrics.aggregates = {\n      avgEfficiency: this.calculateAverage(snapshot.swarms, 'efficiency'),\n      totalThroughput: this.calculateSum(snapshot.swarms, 'performance.throughput'),\n      overallHealth: this.calculateAverage(snapshot.swarms, 'health')\n    };\n  }\n\n  /**\n   * Calculate average\n   */\n  calculateAverage(swarms, path) {\n    let sum = 0;\n    let count = 0;\n    \n    for (const metrics of swarms.values()) {\n      const value = this.getNestedValue(metrics, path);\n      if (value !== undefined) {\n        sum += value;\n        count++;\n      }\n    }\n    \n    return count > 0 ? sum / count : 0;\n  }\n\n  /**\n   * Calculate sum\n   */\n  calculateSum(swarms, path) {\n    let sum = 0;\n    \n    for (const metrics of swarms.values()) {\n      const value = this.getNestedValue(metrics, path);\n      if (value !== undefined) {\n        sum += value;\n      }\n    }\n    \n    return sum;\n  }\n\n  /**\n   * Get nested value from object\n   */\n  getNestedValue(obj, path) {\n    const keys = path.split('.');\n    let value = obj;\n    \n    for (const key of keys) {\n      value = value[key];\n      if (value === undefined) break;\n    }\n    \n    return value;\n  }\n\n  /**\n   * Check for alerts\n   */\n  checkAlerts() {\n    const currentMetrics = this.metrics.get('swarm-performance').current;\n    \n    for (const [swarmId, metrics] of currentMetrics) {\n      // Check efficiency\n      if (metrics.efficiency < this.thresholds.efficiency.warning) {\n        this.createAlert({\n          type: 'efficiency',\n          severity: metrics.efficiency < this.thresholds.efficiency.critical ? 'critical' : 'warning',\n          swarmId,\n          value: metrics.efficiency,\n          threshold: metrics.efficiency < this.thresholds.efficiency.critical \n            ? this.thresholds.efficiency.critical \n            : this.thresholds.efficiency.warning\n        });\n      }\n    }\n    \n    // Process alert queue\n    this.processAlerts();\n  }\n\n  /**\n   * Create alert\n   */\n  createAlert(alert) {\n    alert.timestamp = Date.now();\n    alert.id = `alert-${Date.now()}-${Math.random()}`;\n    \n    // Check if similar alert exists\n    const existingAlert = this.alerts.find(a => \n      a.type === alert.type && \n      a.swarmId === alert.swarmId &&\n      Date.now() - a.timestamp < 60000 // Within last minute\n    );\n    \n    if (!existingAlert) {\n      this.alerts.push(alert);\n      this.emit('alert', alert);\n      \n      // Log alert\n      const color = alert.severity === 'critical' ? chalk.red : chalk.yellow;\n      console.log(color(`\\n‚ö†Ô∏è  ALERT: ${alert.type} - ${alert.swarmId}`));\n      console.log(color(`   Value: ${alert.value}, Threshold: ${alert.threshold}`));\n    }\n  }\n\n  /**\n   * Process alerts\n   */\n  processAlerts() {\n    // Remove old alerts\n    const cutoffTime = Date.now() - 300000; // 5 minutes\n    this.alerts = this.alerts.filter(alert => alert.timestamp > cutoffTime);\n    \n    // Group alerts by severity\n    const criticalAlerts = this.alerts.filter(a => a.severity === 'critical');\n    const warningAlerts = this.alerts.filter(a => a.severity === 'warning');\n    \n    // Take action on critical alerts\n    if (criticalAlerts.length > 3) {\n      this.emit('criticalAlertThreshold', criticalAlerts);\n    }\n  }\n\n  /**\n   * Render dashboard\n   */\n  renderDashboard() {\n    console.log(chalk.bold.cyan('\\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ'));\n    console.log(chalk.bold.cyan('                 SWARM MONITOR DASHBOARD                  '));\n    console.log(chalk.bold.cyan('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ'));\n    \n    const perfMetrics = this.metrics.get('swarm-performance');\n    \n    // Global metrics\n    if (perfMetrics.aggregates.avgEfficiency !== undefined) {\n      console.log(chalk.white('\\nüìä Global Metrics:'));\n      console.log(chalk.white(`   ‚Ä¢ Average Efficiency: ${perfMetrics.aggregates.avgEfficiency.toFixed(1)}%`));\n      console.log(chalk.white(`   ‚Ä¢ Total Throughput: ${perfMetrics.aggregates.totalThroughput.toFixed(2)} tasks/sec`));\n      console.log(chalk.white(`   ‚Ä¢ Overall Health: ${perfMetrics.aggregates.overallHealth.toFixed(1)}%`));\n    }\n    \n    // Swarm status\n    if (perfMetrics.current.size > 0) {\n      console.log(chalk.white('\\nüîπ Swarm Status:'));\n      for (const [swarmId, metrics] of perfMetrics.current) {\n        const statusColor = metrics.efficiency > 80 ? chalk.green : \n                          metrics.efficiency > 60 ? chalk.yellow : chalk.red;\n        console.log(statusColor(`   ‚Ä¢ ${swarmId}: ${metrics.efficiency.toFixed(1)}% efficiency, ${metrics.throughput.toFixed(2)} tasks/sec`));\n      }\n    }\n    \n    // Active alerts\n    if (this.alerts.length > 0) {\n      console.log(chalk.white('\\n‚ö†Ô∏è  Active Alerts:'));\n      const recentAlerts = this.alerts.slice(-3);\n      recentAlerts.forEach(alert => {\n        const alertColor = alert.severity === 'critical' ? chalk.red : chalk.yellow;\n        console.log(alertColor(`   ‚Ä¢ [${alert.severity.toUpperCase()}] ${alert.type} in ${alert.swarmId}`));\n      });\n    }\n    \n    // Trends\n    const trends = this.analyzeTrends();\n    if (trends.efficiency) {\n      console.log(chalk.white('\\nüìà Trends:'));\n      const trendIcon = trends.efficiency.direction === 'increasing' ? '‚Üó' : \n                       trends.efficiency.direction === 'decreasing' ? '‚Üò' : '‚Üí';\n      console.log(chalk.white(`   ‚Ä¢ Efficiency: ${trendIcon} ${trends.efficiency.direction}`));\n      \n      if (trends.throughput) {\n        const throughputIcon = trends.throughput.direction === 'increasing' ? '‚Üó' : \n                             trends.throughput.direction === 'decreasing' ? '‚Üò' : '‚Üí';\n        console.log(chalk.white(`   ‚Ä¢ Throughput: ${throughputIcon} ${trends.throughput.direction}`));\n      }\n    }\n    \n    console.log(chalk.bold.cyan('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\\n'));\n  }\n\n  /**\n   * Generate final report\n   */\n  generateFinalReport(swarms, globalMetrics, insights) {\n    const report = {\n      summary: {\n        totalSwarms: swarms.size,\n        totalAgents: globalMetrics.totalAgents,\n        totalTasksCompleted: globalMetrics.tasksCompleted,\n        totalMessagesExchanged: globalMetrics.messagesExchanged,\n        errorsRecovered: globalMetrics.errorsRecovered,\n        swarmSynchronizations: globalMetrics.swarmSyncs\n      },\n      swarmPerformance: [],\n      insights: insights,\n      recommendations: [],\n      alerts: this.alerts\n    };\n\n    // Collect swarm performance\n    for (const [swarmId, swarm] of swarms) {\n      report.swarmPerformance.push({\n        swarmId,\n        name: swarm.mission.name,\n        efficiency: swarm.metrics.efficiency,\n        tasksCompleted: swarm.metrics.tasksCompleted,\n        agentCount: swarm.agents.size,\n        health: swarm.metrics.health\n      });\n    }\n\n    // Generate final recommendations\n    report.recommendations = this.generateFinalRecommendations(report);\n\n    return report;\n  }\n\n  /**\n   * Generate final recommendations\n   */\n  generateFinalRecommendations(report) {\n    const recommendations = [];\n    \n    // Performance recommendations\n    const avgEfficiency = report.swarmPerformance.reduce((sum, s) => sum + s.efficiency, 0) / report.swarmPerformance.length;\n    \n    if (avgEfficiency < 70) {\n      recommendations.push({\n        category: 'performance',\n        priority: 'high',\n        recommendation: 'Overall system efficiency is below optimal. Consider scaling agents or optimizing task distribution.'\n      });\n    }\n    \n    // Alert-based recommendations\n    const criticalAlerts = report.alerts.filter(a => a.severity === 'critical');\n    if (criticalAlerts.length > 0) {\n      recommendations.push({\n        category: 'stability',\n        priority: 'critical',\n        recommendation: `Address ${criticalAlerts.length} critical alerts to improve system stability.`\n      });\n    }\n    \n    // Insight-based recommendations\n    if (report.insights.patterns) {\n      report.insights.patterns.forEach(pattern => {\n        if (pattern.recommendation) {\n          recommendations.push({\n            category: 'optimization',\n            priority: 'medium',\n            recommendation: pattern.recommendation\n          });\n        }\n      });\n    }\n    \n    return recommendations;\n  }\n\n  /**\n   * Save emergency snapshot\n   */\n  async saveEmergencySnapshot(swarms, metrics) {\n    const snapshot = {\n      timestamp: Date.now(),\n      type: 'emergency',\n      swarms: Array.from(swarms.entries()),\n      globalMetrics: metrics,\n      performanceHistory: this.performanceHistory.slice(-10),\n      activeAlerts: this.alerts\n    };\n    \n    // In a real system, this would save to persistent storage\n    console.log(chalk.yellow('üíæ Emergency snapshot saved'));\n    \n    return snapshot;\n  }\n\n  /**\n   * Shutdown monitor\n   */\n  shutdown() {\n    this.isActive = false;\n    \n    if (this.dashboardInterval) {\n      clearInterval(this.dashboardInterval);\n    }\n    \n    console.log(chalk.cyan('üìä Swarm Monitor shutdown complete'));\n  }\n}","/**\n * Concurrent Swarm Demonstration System\n * Production-ready multi-swarm orchestration with real-time coordination\n */\n\nimport { SwarmCoordinator } from './swarm-coordinator.js';\nimport { SwarmMonitor } from './swarm-monitor.js';\nimport { EventEmitter } from 'events';\nimport chalk from 'chalk';\n\n// Swarm mission definitions\nconst SWARM_MISSIONS = {\n  INFRASTRUCTURE: {\n    id: 'infrastructure-swarm',\n    name: 'Infrastructure Optimization Swarm',\n    objective: 'Optimize system infrastructure and resource allocation',\n    color: chalk.blue,\n    priority: 'high',\n    agents: [\n      { type: 'architect', role: 'System Architecture Designer', capabilities: ['design', 'planning', 'optimization'] },\n      { type: 'optimizer', role: 'Performance Optimizer', capabilities: ['performance', 'bottleneck-analysis', 'tuning'] },\n      { type: 'monitor', role: 'Resource Monitor', capabilities: ['monitoring', 'alerting', 'metrics'] },\n      { type: 'analyst', role: 'Infrastructure Analyst', capabilities: ['analysis', 'reporting', 'prediction'] },\n      { type: 'coordinator', role: 'Resource Coordinator', capabilities: ['scheduling', 'allocation', 'balancing'] },\n      { type: 'specialist', role: 'Security Specialist', capabilities: ['security', 'compliance', 'hardening'] }\n    ]\n  },\n  DEVELOPMENT: {\n    id: 'development-swarm',\n    name: 'Development Acceleration Swarm',\n    objective: 'Accelerate development process and code quality',\n    color: chalk.green,\n    priority: 'high',\n    agents: [\n      { type: 'coder', role: 'Senior Developer', capabilities: ['coding', 'refactoring', 'implementation'] },\n      { type: 'tester', role: 'Quality Assurance', capabilities: ['testing', 'validation', 'automation'] },\n      { type: 'reviewer', role: 'Code Reviewer', capabilities: ['review', 'standards', 'best-practices'] },\n      { type: 'documenter', role: 'Documentation Expert', capabilities: ['documentation', 'api-docs', 'guides'] },\n      { type: 'architect', role: 'Software Architect', capabilities: ['design-patterns', 'architecture', 'scalability'] },\n      { type: 'specialist', role: 'DevOps Specialist', capabilities: ['ci-cd', 'deployment', 'automation'] }\n    ]\n  },\n  ANALYTICS: {\n    id: 'analytics-swarm',\n    name: 'Data Analytics Swarm',\n    objective: 'Analyze patterns and provide intelligent insights',\n    color: chalk.yellow,\n    priority: 'medium',\n    agents: [\n      { type: 'analyst', role: 'Data Analyst', capabilities: ['data-analysis', 'visualization', 'reporting'] },\n      { type: 'researcher', role: 'Pattern Researcher', capabilities: ['pattern-recognition', 'ml', 'prediction'] },\n      { type: 'optimizer', role: 'Algorithm Optimizer', capabilities: ['optimization', 'performance', 'efficiency'] },\n      { type: 'monitor', role: 'Metric Monitor', capabilities: ['monitoring', 'tracking', 'alerting'] },\n      { type: 'coordinator', role: 'Data Coordinator', capabilities: ['data-pipeline', 'etl', 'orchestration'] },\n      { type: 'specialist', role: 'ML Specialist', capabilities: ['machine-learning', 'ai', 'neural-networks'] }\n    ]\n  }\n};\n\nexport class ConcurrentSwarmDemo extends EventEmitter {\n  constructor() {\n    super();\n    this.coordinator = new SwarmCoordinator();\n    this.monitor = new SwarmMonitor();\n    this.swarms = new Map();\n    this.startTime = Date.now();\n    this.isRunning = false;\n    this.metrics = {\n      tasksCompleted: 0,\n      messagesExchanged: 0,\n      errorsRecovered: 0,\n      totalAgents: 0,\n      swarmSyncs: 0\n    };\n  }\n\n  /**\n   * Initialize and launch concurrent swarms\n   */\n  async launch() {\n    console.log(chalk.bold.cyan('\\nüöÄ Launching Concurrent Swarm Demonstration System\\n'));\n    \n    this.isRunning = true;\n    \n    try {\n      // Initialize monitoring\n      await this.monitor.initialize();\n      \n      // Spawn all swarms concurrently\n      const swarmPromises = Object.values(SWARM_MISSIONS).map(mission => \n        this.spawnSwarm(mission)\n      );\n      \n      await Promise.all(swarmPromises);\n      \n      // Start coordination protocols\n      await this.coordinator.startCoordination(this.swarms);\n      \n      // Begin real-time monitoring\n      this.startMonitoring();\n      \n      // Simulate concurrent operations\n      await this.runConcurrentOperations();\n      \n    } catch (error) {\n      console.error(chalk.red('Error in swarm launch:'), error);\n      await this.handleCriticalError(error);\n    }\n  }\n\n  /**\n   * Spawn individual swarm with agents\n   */\n  async spawnSwarm(mission) {\n    console.log(mission.color(`\\nüì° Spawning ${mission.name}...`));\n    \n    const swarm = {\n      id: mission.id,\n      mission,\n      agents: new Map(),\n      status: 'initializing',\n      startTime: Date.now(),\n      tasks: [],\n      metrics: {\n        tasksAssigned: 0,\n        tasksCompleted: 0,\n        efficiency: 100,\n        health: 100\n      }\n    };\n\n    // Create agents for this swarm\n    for (const agentConfig of mission.agents) {\n      const agent = await this.createAgent(agentConfig, swarm);\n      swarm.agents.set(agent.id, agent);\n      this.metrics.totalAgents++;\n    }\n\n    this.swarms.set(swarm.id, swarm);\n    swarm.status = 'active';\n    \n    console.log(mission.color(`‚úÖ ${mission.name} operational with ${swarm.agents.size} agents`));\n    \n    // Register with coordinator\n    await this.coordinator.registerSwarm(swarm);\n    \n    return swarm;\n  }\n\n  /**\n   * Create individual agent\n   */\n  async createAgent(config, swarm) {\n    const agent = {\n      id: `${swarm.id}-${config.type}-${Date.now()}`,\n      type: config.type,\n      role: config.role,\n      capabilities: config.capabilities,\n      swarmId: swarm.id,\n      status: 'idle',\n      currentTask: null,\n      tasksCompleted: 0,\n      performance: 100,\n      lastActivity: Date.now()\n    };\n\n    // Initialize agent with neural patterns\n    agent.neuralState = {\n      learning: true,\n      patterns: [],\n      confidence: 0.8\n    };\n\n    return agent;\n  }\n\n  /**\n   * Run concurrent operations across all swarms\n   */\n  async runConcurrentOperations() {\n    console.log(chalk.bold.magenta('\\nüîÑ Starting Concurrent Operations...\\n'));\n    \n    // Define cross-swarm tasks\n    const operations = [\n      this.executeInfrastructureOptimization(),\n      this.executeDevelopmentAcceleration(),\n      this.executeDataAnalytics(),\n      this.executeSwarmSynchronization(),\n      this.executeResilienceTest()\n    ];\n\n    // Run all operations concurrently\n    await Promise.all(operations);\n    \n    // Final synchronization\n    await this.finalSynchronization();\n  }\n\n  /**\n   * Infrastructure optimization operation\n   */\n  async executeInfrastructureOptimization() {\n    const swarm = this.swarms.get('infrastructure-swarm');\n    if (!swarm) return;\n\n    console.log(chalk.blue('\\nüèóÔ∏è  Infrastructure Optimization in progress...'));\n    \n    const tasks = [\n      { type: 'analyze', target: 'system-resources', priority: 'high' },\n      { type: 'optimize', target: 'memory-allocation', priority: 'high' },\n      { type: 'monitor', target: 'performance-metrics', priority: 'medium' },\n      { type: 'secure', target: 'access-controls', priority: 'high' },\n      { type: 'balance', target: 'load-distribution', priority: 'medium' },\n      { type: 'predict', target: 'resource-needs', priority: 'low' }\n    ];\n\n    await this.distributeTasksToSwarm(swarm, tasks);\n  }\n\n  /**\n   * Development acceleration operation\n   */\n  async executeDevelopmentAcceleration() {\n    const swarm = this.swarms.get('development-swarm');\n    if (!swarm) return;\n\n    console.log(chalk.green('\\nüíª Development Acceleration in progress...'));\n    \n    const tasks = [\n      { type: 'implement', target: 'new-features', priority: 'high' },\n      { type: 'test', target: 'code-coverage', priority: 'high' },\n      { type: 'review', target: 'pull-requests', priority: 'medium' },\n      { type: 'document', target: 'api-endpoints', priority: 'medium' },\n      { type: 'refactor', target: 'legacy-code', priority: 'low' },\n      { type: 'deploy', target: 'staging-environment', priority: 'high' }\n    ];\n\n    await this.distributeTasksToSwarm(swarm, tasks);\n  }\n\n  /**\n   * Data analytics operation\n   */\n  async executeDataAnalytics() {\n    const swarm = this.swarms.get('analytics-swarm');\n    if (!swarm) return;\n\n    console.log(chalk.yellow('\\nüìä Data Analytics in progress...'));\n    \n    const tasks = [\n      { type: 'analyze', target: 'usage-patterns', priority: 'high' },\n      { type: 'predict', target: 'future-trends', priority: 'medium' },\n      { type: 'optimize', target: 'algorithms', priority: 'high' },\n      { type: 'visualize', target: 'dashboards', priority: 'medium' },\n      { type: 'train', target: 'ml-models', priority: 'high' },\n      { type: 'report', target: 'insights', priority: 'low' }\n    ];\n\n    await this.distributeTasksToSwarm(swarm, tasks);\n  }\n\n  /**\n   * Distribute tasks to swarm agents\n   */\n  async distributeTasksToSwarm(swarm, tasks) {\n    const availableAgents = Array.from(swarm.agents.values())\n      .filter(agent => agent.status === 'idle');\n\n    for (let i = 0; i < tasks.length && i < availableAgents.length; i++) {\n      const agent = availableAgents[i];\n      const task = tasks[i];\n      \n      await this.assignTaskToAgent(agent, task, swarm);\n    }\n\n    swarm.metrics.tasksAssigned += tasks.length;\n  }\n\n  /**\n   * Assign task to specific agent\n   */\n  async assignTaskToAgent(agent, task, swarm) {\n    agent.status = 'working';\n    agent.currentTask = task;\n    agent.lastActivity = Date.now();\n\n    // Simulate task execution\n    setTimeout(async () => {\n      await this.completeAgentTask(agent, task, swarm);\n    }, Math.random() * 3000 + 2000);\n  }\n\n  /**\n   * Complete agent task\n   */\n  async completeAgentTask(agent, task, swarm) {\n    agent.status = 'idle';\n    agent.currentTask = null;\n    agent.tasksCompleted++;\n    agent.lastActivity = Date.now();\n    \n    swarm.metrics.tasksCompleted++;\n    this.metrics.tasksCompleted++;\n    \n    // Update neural patterns\n    agent.neuralState.patterns.push({\n      task: task.type,\n      success: true,\n      timestamp: Date.now()\n    });\n    \n    console.log(swarm.mission.color(\n      `‚úì ${agent.role} completed ${task.type} on ${task.target}`\n    ));\n    \n    // Emit completion event\n    this.emit('taskCompleted', { agent, task, swarm });\n  }\n\n  /**\n   * Execute swarm synchronization\n   */\n  async executeSwarmSynchronization() {\n    console.log(chalk.bold.cyan('\\nüîó Synchronizing Swarms...'));\n    \n    const syncOperations = [];\n    \n    // Create sync pairs\n    const swarmArray = Array.from(this.swarms.values());\n    for (let i = 0; i < swarmArray.length; i++) {\n      for (let j = i + 1; j < swarmArray.length; j++) {\n        syncOperations.push(\n          this.syncSwarmPair(swarmArray[i], swarmArray[j])\n        );\n      }\n    }\n    \n    await Promise.all(syncOperations);\n    this.metrics.swarmSyncs += syncOperations.length;\n  }\n\n  /**\n   * Sync two swarms\n   */\n  async syncSwarmPair(swarm1, swarm2) {\n    const sharedData = {\n      timestamp: Date.now(),\n      swarm1Status: swarm1.metrics,\n      swarm2Status: swarm2.metrics,\n      sharedInsights: []\n    };\n    \n    // Exchange insights\n    await this.coordinator.exchangeData(swarm1.id, swarm2.id, sharedData);\n    this.metrics.messagesExchanged += 2;\n    \n    console.log(chalk.cyan(\n      `üîÑ Synced ${swarm1.mission.name} ‚Üî ${swarm2.mission.name}`\n    ));\n  }\n\n  /**\n   * Execute resilience test\n   */\n  async executeResilienceTest() {\n    console.log(chalk.bold.red('\\nüõ°Ô∏è  Testing Resilience Patterns...'));\n    \n    // Simulate random failures\n    const swarmArray = Array.from(this.swarms.values());\n    const targetSwarm = swarmArray[Math.floor(Math.random() * swarmArray.length)];\n    const targetAgent = Array.from(targetSwarm.agents.values())[0];\n    \n    // Simulate agent failure\n    console.log(chalk.red(`‚ö†Ô∏è  Simulating failure in ${targetAgent.role}`));\n    targetAgent.status = 'failed';\n    targetAgent.performance = 0;\n    \n    // Trigger recovery\n    await this.recoverFailedAgent(targetAgent, targetSwarm);\n  }\n\n  /**\n   * Recover failed agent\n   */\n  async recoverFailedAgent(agent, swarm) {\n    console.log(chalk.yellow(`üîß Initiating recovery for ${agent.role}...`));\n    \n    // Redistribute tasks\n    if (agent.currentTask) {\n      const backupAgent = Array.from(swarm.agents.values())\n        .find(a => a.status === 'idle' && a.id !== agent.id);\n      \n      if (backupAgent) {\n        await this.assignTaskToAgent(backupAgent, agent.currentTask, swarm);\n        console.log(chalk.green(`‚úÖ Task redistributed to ${backupAgent.role}`));\n      }\n    }\n    \n    // Recover agent\n    setTimeout(() => {\n      agent.status = 'idle';\n      agent.performance = 100;\n      agent.currentTask = null;\n      this.metrics.errorsRecovered++;\n      console.log(chalk.green(`‚úÖ ${agent.role} recovered successfully`));\n    }, 2000);\n  }\n\n  /**\n   * Start real-time monitoring\n   */\n  startMonitoring() {\n    const monitoringInterval = setInterval(() => {\n      if (!this.isRunning) {\n        clearInterval(monitoringInterval);\n        return;\n      }\n      \n      this.monitor.collectMetrics(this.swarms, this.metrics);\n      this.displayStatus();\n    }, 3000);\n  }\n\n  /**\n   * Display current status\n   */\n  displayStatus() {\n    console.log(chalk.bold.white('\\nüìà System Status:'));\n    console.log(chalk.white(`‚Ä¢ Total Agents: ${this.metrics.totalAgents}`));\n    console.log(chalk.white(`‚Ä¢ Tasks Completed: ${this.metrics.tasksCompleted}`));\n    console.log(chalk.white(`‚Ä¢ Messages Exchanged: ${this.metrics.messagesExchanged}`));\n    console.log(chalk.white(`‚Ä¢ Errors Recovered: ${this.metrics.errorsRecovered}`));\n    console.log(chalk.white(`‚Ä¢ Swarm Syncs: ${this.metrics.swarmSyncs}`));\n    \n    // Display swarm health\n    this.swarms.forEach(swarm => {\n      const efficiency = Math.round(\n        (swarm.metrics.tasksCompleted / Math.max(1, swarm.metrics.tasksAssigned)) * 100\n      );\n      console.log(swarm.mission.color(\n        `‚Ä¢ ${swarm.mission.name}: ${efficiency}% efficiency`\n      ));\n    });\n  }\n\n  /**\n   * Final synchronization\n   */\n  async finalSynchronization() {\n    console.log(chalk.bold.magenta('\\nüéØ Final Synchronization...'));\n    \n    // Collect all insights\n    const allInsights = await this.coordinator.collectGlobalInsights(this.swarms);\n    \n    // Generate final report\n    const report = this.monitor.generateFinalReport(this.swarms, this.metrics, allInsights);\n    \n    console.log(chalk.bold.green('\\n‚ú® Concurrent Swarm Operation Complete!'));\n    console.log(chalk.white(`Total Runtime: ${Math.round((Date.now() - this.startTime) / 1000)}s`));\n    \n    this.isRunning = false;\n    \n    return report;\n  }\n\n  /**\n   * Handle critical errors\n   */\n  async handleCriticalError(error) {\n    console.error(chalk.red('üö® Critical error detected:', error.message));\n    \n    // Attempt graceful shutdown\n    try {\n      await this.coordinator.emergencyShutdown(this.swarms);\n      await this.monitor.saveEmergencySnapshot(this.swarms, this.metrics);\n    } catch (shutdownError) {\n      console.error(chalk.red('Failed to perform graceful shutdown:', shutdownError));\n    }\n    \n    this.isRunning = false;\n  }\n}\n\n// Run demonstration if executed directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  const demo = new ConcurrentSwarmDemo();\n  demo.launch().catch(console.error);\n}","/**\n * Concurrent Swarm Workflow\n * Production-ready multi-swarm orchestration workflow with real-time coordination\n */\n\nimport { createWorkflow, createStep } from '@mastra/core';\nimport { z } from 'zod';\nimport { ConcurrentSwarmDemo } from '../swarm/concurrent-swarm-demo.js';\nimport { SwarmMonitor } from '../swarm/swarm-monitor.js';\n\n// Concurrent Swarm Workflow - Orchestrates multiple specialized swarms\nexport const concurrentSwarmWorkflow = createWorkflow({\n  id: 'concurrent-swarm-orchestration',\n  description: 'Orchestrates concurrent swarms with real-time monitoring and coordination',\n  inputSchema: z.object({\n    missionName: z.string(),\n    objectives: z.array(z.string()),\n    swarmCount: z.number().min(1).max(10).default(3),\n    coordinationMode: z.enum(['parallel', 'sequential', 'adaptive']).default('parallel'),\n    monitoringEnabled: z.boolean().default(true)\n  }),\n  outputSchema: z.object({\n    success: z.boolean(),\n    report: z.object({\n      summary: z.any(),\n      swarmPerformance: z.array(z.any()),\n      insights: z.any(),\n      recommendations: z.array(z.any()),\n      alerts: z.array(z.any())\n    }),\n    metrics: z.object({\n      totalAgents: z.number(),\n      tasksCompleted: z.number(),\n      messagesExchanged: z.number(),\n      errorsRecovered: z.number(),\n      swarmSyncs: z.number(),\n      runtime: z.number()\n    })\n  })\n})\n// Step 1: Initialize concurrent swarm system\n.then(createStep({\n  id: 'initialize-concurrent-system',\n  description: 'Initialize the concurrent swarm demonstration system',\n  inputSchema: z.object({\n    missionName: z.string(),\n    objectives: z.array(z.string()),\n    swarmCount: z.number(),\n    monitoringEnabled: z.boolean()\n  }),\n  outputSchema: z.object({\n    systemId: z.string(),\n    swarmDemo: z.any(),\n    monitor: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('üöÄ Initializing concurrent swarm system:', context.missionName);\n    \n    // Create concurrent swarm demo instance\n    const swarmDemo = new ConcurrentSwarmDemo();\n    const monitor = swarmDemo.monitor;\n    \n    const systemId = `concurrent_${Date.now()}`;\n    \n    return {\n      systemId,\n      swarmDemo,\n      monitor\n    };\n  }\n}))\n// Step 2: Launch concurrent swarms\n.then(createStep({\n  id: 'launch-concurrent-swarms',\n  description: 'Launch multiple specialized swarms concurrently',\n  inputSchema: z.object({\n    systemId: z.string(),\n    swarmDemo: z.any(),\n    objectives: z.array(z.string()),\n    coordinationMode: z.enum(['parallel', 'sequential', 'adaptive'])\n  }),\n  outputSchema: z.object({\n    launchSuccess: z.boolean(),\n    activeSwarms: z.number(),\n    startTime: z.number()\n  }),\n  execute: async ({ context }) => {\n    console.log('üîÑ Launching concurrent swarms in', context.coordinationMode, 'mode');\n    \n    try {\n      // Start the concurrent swarm system\n      // Note: We'll run this in a non-blocking way to allow workflow to continue\n      context.swarmDemo.launch().catch(console.error);\n      \n      // Wait a moment for initialization\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      return {\n        launchSuccess: true,\n        activeSwarms: context.swarmDemo.swarms.size,\n        startTime: context.swarmDemo.startTime\n      };\n    } catch (error) {\n      console.error('Failed to launch swarms:', error);\n      return {\n        launchSuccess: false,\n        activeSwarms: 0,\n        startTime: Date.now()\n      };\n    }\n  }\n}))\n// Step 3: Monitor swarm operations\n.then(createStep({\n  id: 'monitor-swarm-operations',\n  description: 'Monitor concurrent swarm operations in real-time',\n  inputSchema: z.object({\n    swarmDemo: z.any(),\n    monitor: z.any(),\n    monitoringEnabled: z.boolean(),\n    activeSwarms: z.number()\n  }),\n  outputSchema: z.object({\n    monitoringActive: z.boolean(),\n    performanceSnapshot: z.any(),\n    alerts: z.array(z.any())\n  }),\n  execute: async ({ context }) => {\n    if (!context.monitoringEnabled) {\n      return {\n        monitoringActive: false,\n        performanceSnapshot: null,\n        alerts: []\n      };\n    }\n    \n    console.log('üìä Monitoring', context.activeSwarms, 'active swarms');\n    \n    // Collect current metrics\n    context.monitor.collectMetrics(context.swarmDemo.swarms, context.swarmDemo.metrics);\n    \n    // Get performance snapshot\n    const performanceSnapshot = {\n      timestamp: Date.now(),\n      swarmStatus: Array.from(context.swarmDemo.swarms.values()).map(swarm => ({\n        id: swarm.id,\n        name: swarm.mission.name,\n        status: swarm.status,\n        efficiency: swarm.metrics.efficiency,\n        tasksCompleted: swarm.metrics.tasksCompleted,\n        agentCount: swarm.agents.size\n      })),\n      globalMetrics: context.swarmDemo.metrics\n    };\n    \n    return {\n      monitoringActive: true,\n      performanceSnapshot,\n      alerts: context.monitor.alerts\n    };\n  }\n}))\n// Step 4: Coordinate swarm synchronization\n.then(createStep({\n  id: 'coordinate-swarm-sync',\n  description: 'Coordinate synchronization between swarms',\n  inputSchema: z.object({\n    swarmDemo: z.any(),\n    coordinationMode: z.enum(['parallel', 'sequential', 'adaptive'])\n  }),\n  outputSchema: z.object({\n    syncCompleted: z.boolean(),\n    syncOperations: z.number(),\n    sharedInsights: z.array(z.string())\n  }),\n  execute: async ({ context }) => {\n    console.log('üîó Coordinating swarm synchronization');\n    \n    // Wait for some operations to complete\n    await new Promise(resolve => setTimeout(resolve, 5000));\n    \n    // Execute synchronization\n    await context.swarmDemo.executeSwarmSynchronization();\n    \n    // Collect shared insights\n    const sharedInsights = [\n      'Cross-swarm collaboration patterns identified',\n      'Resource optimization opportunities detected',\n      'Performance bottlenecks addressed through coordination',\n      'Task redistribution completed successfully'\n    ];\n    \n    return {\n      syncCompleted: true,\n      syncOperations: context.swarmDemo.metrics.swarmSyncs,\n      sharedInsights\n    };\n  }\n}))\n// Step 5: Generate final report\n.then(createStep({\n  id: 'generate-final-report',\n  description: 'Generate comprehensive report of concurrent swarm operations',\n  inputSchema: z.object({\n    swarmDemo: z.any(),\n    monitor: z.any(),\n    startTime: z.number(),\n    performanceSnapshot: z.any(),\n    sharedInsights: z.array(z.string())\n  }),\n  outputSchema: z.object({\n    success: z.boolean(),\n    report: z.any(),\n    metrics: z.any()\n  }),\n  execute: async ({ context }) => {\n    console.log('üìù Generating final report');\n    \n    // Wait for operations to complete\n    await new Promise(resolve => setTimeout(resolve, 10000));\n    \n    // Ensure swarms are marked as not running\n    context.swarmDemo.isRunning = false;\n    \n    // Collect final insights\n    const allInsights = await context.swarmDemo.coordinator.collectGlobalInsights(context.swarmDemo.swarms);\n    \n    // Generate report\n    const report = context.monitor.generateFinalReport(\n      context.swarmDemo.swarms,\n      context.swarmDemo.metrics,\n      allInsights\n    );\n    \n    // Add shared insights\n    report.insights.sharedInsights = context.sharedInsights;\n    \n    // Calculate runtime\n    const runtime = Math.round((Date.now() - context.startTime) / 1000);\n    \n    const finalMetrics = {\n      ...context.swarmDemo.metrics,\n      runtime\n    };\n    \n    console.log('‚ú® Concurrent swarm operation completed');\n    console.log(`Total Runtime: ${runtime}s`);\n    console.log(`Tasks Completed: ${finalMetrics.tasksCompleted}`);\n    console.log(`Swarm Efficiency: ${report.swarmPerformance.reduce((sum, s) => sum + s.efficiency, 0) / report.swarmPerformance.length}%`);\n    \n    return {\n      success: true,\n      report,\n      metrics: finalMetrics\n    };\n  }\n}));\n\n// Export concurrent swarm workflow\nexport default concurrentSwarmWorkflow;","// Agentic Flow Custom Theme for Mastra UI\nexport const agenticFlowTheme = {\n  // Brand Colors\n  colors: {\n    primary: '#2563EB',      // Agentic Flow Blue\n    secondary: '#7C3AED',    // Agentic Flow Purple  \n    accent: '#10B981',       // Success Green\n    warning: '#F59E0B',      // Warning Amber\n    error: '#EF4444',        // Error Red\n    \n    // Background Colors\n    background: '#0F172A',   // Dark Navy\n    surface: '#1E293B',      // Dark Gray\n    card: '#334155',         // Medium Gray\n    \n    // Text Colors\n    text: {\n      primary: '#F8FAFC',    // White\n      secondary: '#CBD5E1',  // Light Gray\n      muted: '#94A3B8',      // Medium Gray\n    },\n    \n    // Agent Type Colors\n    agents: {\n      coordinator: '#3B82F6', // Blue\n      executor: '#10B981',    // Green  \n      researcher: '#F59E0B',  // Amber\n      architect: '#8B5CF6',   // Purple\n      analyst: '#EF4444',     // Red\n      coder: '#06B6D4',       // Cyan\n      tester: '#84CC16',      // Lime\n      reviewer: '#F97316',    // Orange\n      monitor: '#6366F1',     // Indigo\n      optimizer: '#EC4899',   // Pink\n    }\n  },\n  \n  // Typography\n  typography: {\n    fontFamily: {\n      sans: ['Inter', 'system-ui', 'sans-serif'],\n      mono: ['Fira Code', 'Monaco', 'monospace'],\n    },\n    fontSize: {\n      xs: '0.75rem',\n      sm: '0.875rem', \n      base: '1rem',\n      lg: '1.125rem',\n      xl: '1.25rem',\n      '2xl': '1.5rem',\n      '3xl': '1.875rem',\n      '4xl': '2.25rem',\n    },\n    fontWeight: {\n      normal: '400',\n      medium: '500',\n      semibold: '600',\n      bold: '700',\n    }\n  },\n  \n  // Spacing\n  spacing: {\n    xs: '0.5rem',\n    sm: '0.75rem',\n    md: '1rem',\n    lg: '1.5rem',\n    xl: '2rem',\n    '2xl': '3rem',\n  },\n  \n  // Border Radius\n  borderRadius: {\n    sm: '0.375rem',\n    md: '0.5rem',\n    lg: '0.75rem',\n    xl: '1rem',\n  },\n  \n  // Shadows\n  shadows: {\n    sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n    md: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\n    lg: '0 10px 15px -3px rgb(0 0 0 / 0.1)',\n    xl: '0 20px 25px -5px rgb(0 0 0 / 0.1)',\n  },\n  \n  // Component Styles\n  components: {\n    // Agent Cards\n    agentCard: {\n      background: 'linear-gradient(135deg, #1E293B 0%, #334155 100%)',\n      border: '1px solid #475569',\n      borderRadius: '0.75rem',\n      padding: '1.5rem',\n      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\n    },\n    \n    // Workflow Cards\n    workflowCard: {\n      background: 'linear-gradient(135deg, #312E81 0%, #5B21B6 100%)',\n      border: '1px solid #6366F1',\n      borderRadius: '0.75rem',\n      padding: '1.5rem',\n      boxShadow: '0 10px 15px -3px rgb(0 0 0 / 0.1)',\n    },\n    \n    // Tool Cards\n    toolCard: {\n      background: 'linear-gradient(135deg, #065F46 0%, #047857 100%)',\n      border: '1px solid #10B981',\n      borderRadius: '0.75rem',\n      padding: '1rem',\n      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\n    },\n    \n    // Status Indicators\n    status: {\n      active: '#10B981',\n      inactive: '#6B7280',\n      running: '#3B82F6',\n      completed: '#10B981',\n      failed: '#EF4444',\n      pending: '#F59E0B',\n    }\n  },\n  \n  // Animation\n  animation: {\n    duration: {\n      fast: '150ms',\n      normal: '300ms',\n      slow: '500ms',\n    },\n    easing: {\n      default: 'cubic-bezier(0.4, 0, 0.2, 1)',\n      in: 'cubic-bezier(0.4, 0, 1, 1)',\n      out: 'cubic-bezier(0, 0, 0.2, 1)',\n    }\n  }\n};\n\n// Brand Configuration\nexport const brandConfig = {\n  name: 'Agentic Flow',\n  tagline: 'AI Orchestration Platform',\n  description: 'Multi-agent coordination and workflow automation',\n  version: '2.0.0',\n  \n  // Logo Configuration\n  logo: {\n    text: 'ü§ñ Agentic Flow',\n    icon: 'ü§ñ',\n    colors: {\n      primary: '#2563EB',\n      secondary: '#7C3AED',\n    }\n  },\n  \n  // Navigation\n  navigation: {\n    primary: [\n      { name: 'Dashboard', path: '/', icon: 'üìä' },\n      { name: 'Agents', path: '/agents', icon: 'ü§ñ' },\n      { name: 'Workflows', path: '/workflows', icon: 'üîÑ' },\n      { name: 'Tools', path: '/tools', icon: 'üõ†Ô∏è' },\n      { name: 'Teams', path: '/teams', icon: 'üë•' },\n      { name: 'Monitor', path: '/monitor', icon: 'üìà' },\n    ],\n    secondary: [\n      { name: 'Settings', path: '/settings', icon: '‚öôÔ∏è' },\n      { name: 'Documentation', path: '/docs', icon: 'üìñ' },\n      { name: 'API', path: '/api', icon: 'üîó' },\n    ]\n  },\n  \n  // Feature Highlights\n  features: [\n    {\n      title: 'Multi-Agent Coordination',\n      description: 'Coordinate multiple AI agents for complex tasks',\n      icon: 'ü§ñ',\n      color: '#3B82F6'\n    },\n    {\n      title: 'Visual Workflows',\n      description: 'Design and execute workflows visually',\n      icon: 'üîÑ', \n      color: '#8B5CF6'\n    },\n    {\n      title: 'Real-time Monitoring',\n      description: 'Monitor system health and performance',\n      icon: 'üìä',\n      color: '#10B981'\n    },\n    {\n      title: 'Team Management',\n      description: 'Form and manage agent teams dynamically',\n      icon: 'üë•',\n      color: '#F59E0B'\n    }\n  ],\n  \n  // Integration Points\n  integrations: {\n    claudeFlow: {\n      name: 'Claude Flow',\n      description: 'Advanced Claude agent coordination',\n      icon: 'üß†',\n      color: '#FF6B35'\n    },\n    hiveMind: {\n      name: 'Hive Mind',\n      description: 'Collective intelligence system', \n      icon: 'üêù',\n      color: '#FFD23F'\n    },\n    ruvSwarm: {\n      name: 'RUV Swarm',\n      description: 'Distributed agent swarms',\n      icon: 'üî•',\n      color: '#EE4266'\n    }\n  }\n};\n\nexport default { agenticFlowTheme, brandConfig };","// MCP Setup for Mastra - Following official documentation\n// Based on https://mastra.ai/en/docs/agents/using-tools-and-mcp\n\nimport { Agent } from '@mastra/core';\nimport { createTool } from '@mastra/core';\nimport { z } from 'zod';\n\n// Create MCP-connected agents with proper tool configuration\nexport const createMcpAgents = () => {\n  // Claude Flow MCP Agent\n  const claudeFlowMcpAgent = new Agent({\n    name: 'claude-flow-mcp-agent',\n    description: 'Agent connected to Claude Flow MCP server',\n    model: {\n      provider: 'anthropic',\n      name: 'claude-3-sonnet-20240229',\n    },\n    instructions: `You are an agent with access to Claude Flow MCP server capabilities.\n    You can initialize swarms, spawn agents, orchestrate tasks, train neural patterns,\n    manage memory, and generate performance reports using the Claude Flow infrastructure.`,\n    // Tools will be added dynamically when MCP server is connected\n  });\n\n  // Agentic Flow MCP Agent  \n  const agenticFlowMcpAgent = new Agent({\n    name: 'agentic-flow-mcp-agent',\n    description: 'Agent connected to Agentic Flow MCP server',\n    model: {\n      provider: 'anthropic',\n      name: 'claude-3-sonnet-20240229',\n    },\n    instructions: `You are an agent with access to Agentic Flow MCP server capabilities.\n    You can create teams, coordinate workflows, capture learning experiences,\n    track metrics, and run simulations using the Agentic Flow platform.`,\n    // Tools will be added dynamically when MCP server is connected\n  });\n\n  return {\n    claudeFlowMcpAgent,\n    agenticFlowMcpAgent\n  };\n};\n\n// Create MCP tool wrappers that simulate MCP server functionality\n// These will be replaced with actual MCP connections when servers are running\nexport const createMcpSimulatorTools = () => {\n  // Claude Flow MCP Tools\n  const claudeFlowSwarmInit = createTool({\n    id: 'claude-flow-swarm-init',\n    description: 'Initialize a Claude Flow swarm with specified topology',\n    inputSchema: z.object({\n      topology: z.enum(['hierarchical', 'mesh', 'ring', 'star']),\n      maxAgents: z.number().min(1).max(100).default(8),\n      strategy: z.enum(['auto', 'manual', 'adaptive']).default('auto')\n    }),\n    execute: async ({ context }) => {\n      const { topology, maxAgents, strategy } = context;\n      console.log(`üîµ [MCP Simulator] Claude Flow: Initializing ${topology} swarm with ${maxAgents} agents`);\n      \n      // Simulate MCP server response\n      return {\n        success: true,\n        swarmId: `cf-swarm-${Date.now()}`,\n        topology,\n        maxAgents,\n        strategy,\n        status: 'initialized',\n        message: `Claude Flow swarm initialized with ${topology} topology`\n      };\n    }\n  });\n\n  const claudeFlowAgentSpawn = createTool({\n    id: 'claude-flow-agent-spawn',\n    description: 'Spawn specialized agents in Claude Flow',\n    inputSchema: z.object({\n      type: z.enum(['coordinator', 'researcher', 'coder', 'analyst', 'architect']),\n      capabilities: z.array(z.string()).optional(),\n      swarmId: z.string().optional()\n    }),\n    execute: async ({ context }) => {\n      const { type, capabilities = [], swarmId } = context;\n      console.log(`üîµ [MCP Simulator] Claude Flow: Spawning ${type} agent`);\n      \n      return {\n        success: true,\n        agentId: `cf-agent-${type}-${Date.now()}`,\n        type,\n        capabilities,\n        swarmId,\n        status: 'active',\n        message: `${type} agent spawned successfully`\n      };\n    }\n  });\n\n  const claudeFlowTaskOrchestrate = createTool({\n    id: 'claude-flow-task-orchestrate',\n    description: 'Orchestrate complex tasks with Claude Flow',\n    inputSchema: z.object({\n      task: z.string(),\n      priority: z.enum(['low', 'medium', 'high', 'critical']).default('medium'),\n      dependencies: z.array(z.string()).optional(),\n      strategy: z.enum(['parallel', 'sequential', 'adaptive']).default('adaptive')\n    }),\n    execute: async ({ context }) => {\n      const { task, priority, strategy } = context;\n      console.log(`üîµ [MCP Simulator] Claude Flow: Orchestrating task \"${task}\" with ${priority} priority`);\n      \n      return {\n        success: true,\n        orchestrationId: `cf-orch-${Date.now()}`,\n        task,\n        priority,\n        strategy,\n        status: 'running',\n        estimatedCompletion: '5 minutes',\n        message: 'Task orchestration initiated'\n      };\n    }\n  });\n\n  // Agentic Flow MCP Tools\n  const agenticFlowTeamCreate = createTool({\n    id: 'agentic-flow-team-create',\n    description: 'Create a team in Agentic Flow',\n    inputSchema: z.object({\n      name: z.string(),\n      members: z.array(z.object({\n        role: z.string(),\n        capabilities: z.array(z.string())\n      })),\n      goal: z.string()\n    }),\n    execute: async ({ context }) => {\n      const { name, members, goal } = context;\n      console.log(`üü¢ [MCP Simulator] Agentic Flow: Creating team \"${name}\" with ${members.length} members`);\n      \n      return {\n        success: true,\n        teamId: `af-team-${Date.now()}`,\n        name,\n        members,\n        goal,\n        status: 'active',\n        created: new Date().toISOString(),\n        message: `Team \"${name}\" created successfully`\n      };\n    }\n  });\n\n  const agenticFlowWorkflowExecute = createTool({\n    id: 'agentic-flow-workflow-execute',\n    description: 'Execute a workflow in Agentic Flow',\n    inputSchema: z.object({\n      workflowId: z.string(),\n      input: z.record(z.any()),\n      config: z.object({\n        timeout: z.number().optional(),\n        retries: z.number().optional()\n      }).optional()\n    }),\n    execute: async ({ context }) => {\n      const { workflowId, input } = context;\n      console.log(`üü¢ [MCP Simulator] Agentic Flow: Executing workflow \"${workflowId}\"`);\n      \n      return {\n        success: true,\n        executionId: `af-exec-${Date.now()}`,\n        workflowId,\n        input,\n        status: 'running',\n        startTime: new Date().toISOString(),\n        message: `Workflow \"${workflowId}\" execution started`\n      };\n    }\n  });\n\n  const agenticFlowLearningCapture = createTool({\n    id: 'agentic-flow-learning-capture',\n    description: 'Capture learning experiences in Agentic Flow',\n    inputSchema: z.object({\n      experience: z.object({\n        action: z.string(),\n        outcome: z.string(),\n        context: z.record(z.any())\n      }),\n      category: z.enum(['success', 'failure', 'insight']).default('insight')\n    }),\n    execute: async ({ context }) => {\n      const { experience, category } = context;\n      console.log(`üü¢ [MCP Simulator] Agentic Flow: Capturing ${category} learning experience`);\n      \n      return {\n        success: true,\n        learningId: `af-learn-${Date.now()}`,\n        experience,\n        category,\n        stored: true,\n        timestamp: new Date().toISOString(),\n        message: `Learning experience captured as ${category}`\n      };\n    }\n  });\n\n  // MCP Server Status Tools\n  const mcpServerStatus = createTool({\n    id: 'mcp-server-status',\n    description: 'Check MCP server connection status',\n    inputSchema: z.object({\n      servers: z.array(z.string()).optional()\n    }),\n    execute: async ({ context }) => {\n      const { servers = ['claude-flow', 'agentic-flow'] } = context;\n      console.log(`üîç [MCP Simulator] Checking status of MCP servers:`, servers);\n      \n      return {\n        servers: {\n          'claude-flow': {\n            connected: false,\n            simulator: true,\n            message: 'Using simulator mode - MCP server not running'\n          },\n          'agentic-flow': {\n            connected: false,\n            simulator: true,\n            message: 'Using simulator mode - MCP server not running'\n          }\n        },\n        timestamp: new Date().toISOString()\n      };\n    }\n  });\n\n  return {\n    // Claude Flow tools\n    claudeFlowSwarmInit,\n    claudeFlowAgentSpawn,\n    claudeFlowTaskOrchestrate,\n    // Agentic Flow tools\n    agenticFlowTeamCreate,\n    agenticFlowWorkflowExecute,\n    agenticFlowLearningCapture,\n    // Utility tools\n    mcpServerStatus\n  };\n};\n\n// Create MCP configuration for Mastra\nexport const mcpConfig = {\n  // MCP server definitions (for future real MCP integration)\n  servers: {\n    'claude-flow': {\n      name: 'Claude Flow MCP Server',\n      description: 'Advanced AI orchestration and swarm intelligence',\n      command: 'npx',\n      args: ['claude-flow', 'mcp', 'start'],\n      env: {\n        CLAUDE_FLOW_MODE: 'mcp',\n        CLAUDE_FLOW_PORT: '5001'\n      }\n    },\n    'agentic-flow': {\n      name: 'Agentic Flow MCP Server',\n      description: 'Multi-agent orchestration platform',\n      command: 'node',\n      args: ['../../src/mcp/dist/index.js'],\n      env: {\n        AGENTIC_FLOW_MODE: 'mcp',\n        AGENTIC_FLOW_PORT: '5002'\n      }\n    }\n  },\n  \n  // Tool mappings\n  tools: createMcpSimulatorTools(),\n  \n  // Agent configurations\n  agents: createMcpAgents()\n};\n\n// Helper to check if actual MCP servers are available\nexport const checkMcpServers = async () => {\n  try {\n    // In a real implementation, this would check if MCP servers are running\n    // For now, we'll use the simulator\n    console.log('üîå MCP Integration Status:');\n    console.log('   ‚Ä¢ Claude Flow MCP: Simulator Mode (Port 5001 reserved)');\n    console.log('   ‚Ä¢ Agentic Flow MCP: Simulator Mode (Port 5002 reserved)');\n    console.log('   ‚Ä¢ To connect real MCP servers, start them with:');\n    console.log('     - npx claude-flow mcp start');\n    console.log('     - cd ../../src/mcp && npm start');\n    return false;\n  } catch (error) {\n    console.error('Error checking MCP servers:', error);\n    return false;\n  }\n};\n\nexport default mcpConfig;","// Network Simulator for Mastra\n// Since AgentNetwork is not available in the current version,\n// we'll create a network simulation system that provides similar functionality\n\nimport { createTool } from '@mastra/core';\nimport { z } from 'zod';\n\n// Network Registry\nexport const networkRegistry = new Map();\n\n// Network class that simulates AgentNetwork functionality\nexport class NetworkSimulator {\n  constructor(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.agents = config.agents || [];\n    this.tools = config.tools || [];\n    this.config = config.config || {};\n    this.capabilities = config.capabilities || {};\n    this.metrics = config.metrics || {};\n    this.workflows = config.workflows || [];\n    this.status = 'inactive';\n    this.activeAgents = new Set();\n    this.taskQueue = [];\n    this.completedTasks = 0;\n    \n    // Register network\n    networkRegistry.set(this.name, this);\n  }\n  \n  // Initialize network\n  async initialize() {\n    this.status = 'active';\n    console.log(`üåê Network ${this.name} initialized`);\n    return {\n      name: this.name,\n      status: this.status,\n      agents: this.agents.length,\n      tools: this.tools.length\n    };\n  }\n  \n  // Add agent to network\n  addAgent(agentName) {\n    if (!this.agents.includes(agentName)) {\n      this.agents.push(agentName);\n    }\n    this.activeAgents.add(agentName);\n  }\n  \n  // Remove agent from network\n  removeAgent(agentName) {\n    this.activeAgents.delete(agentName);\n  }\n  \n  // Get network status\n  getStatus() {\n    return {\n      name: this.name,\n      description: this.description,\n      status: this.status,\n      topology: this.config.networkTopology || 'mesh',\n      agents: {\n        total: this.agents.length,\n        active: this.activeAgents.size\n      },\n      tasks: {\n        queued: this.taskQueue.length,\n        completed: this.completedTasks\n      },\n      metrics: this.metrics\n    };\n  }\n  \n  // Queue task for network\n  queueTask(task) {\n    this.taskQueue.push({\n      id: `task-${Date.now()}`,\n      task,\n      status: 'queued',\n      timestamp: new Date().toISOString()\n    });\n  }\n  \n  // Process next task\n  async processNextTask() {\n    if (this.taskQueue.length === 0) return null;\n    \n    const task = this.taskQueue.shift();\n    task.status = 'processing';\n    \n    // Simulate task processing\n    await new Promise(resolve => setTimeout(resolve, 100));\n    \n    task.status = 'completed';\n    this.completedTasks++;\n    \n    return task;\n  }\n}\n\n// Create network management tools\nexport const networkManagementTools = {\n  // List all networks\n  listNetworks: createTool({\n    id: 'list-networks',\n    description: 'List all available agent networks',\n    inputSchema: z.object({\n      includeMetrics: z.boolean().optional()\n    }),\n    execute: async ({ context }) => {\n      const networks = [];\n      for (const [name, network] of networkRegistry) {\n        networks.push({\n          name: network.name,\n          description: network.description,\n          status: network.getStatus()\n        });\n      }\n      return { networks };\n    }\n  }),\n  \n  // Get network status\n  getNetworkStatus: createTool({\n    id: 'get-network-status',\n    description: 'Get status of a specific network',\n    inputSchema: z.object({\n      networkName: z.string()\n    }),\n    execute: async ({ context }) => {\n      const { networkName } = context;\n      const network = networkRegistry.get(networkName);\n      \n      if (!network) {\n        return { error: `Network ${networkName} not found` };\n      }\n      \n      return network.getStatus();\n    }\n  }),\n  \n  // Route task to network\n  routeToNetwork: createTool({\n    id: 'route-to-network',\n    description: 'Route a task to the appropriate network',\n    inputSchema: z.object({\n      task: z.string(),\n      requirements: z.object({\n        needsReasoning: z.boolean().optional(),\n        needsConsensus: z.boolean().optional(),\n        needsScale: z.boolean().optional()\n      }).optional()\n    }),\n    execute: async ({ context }) => {\n      const { task, requirements = {} } = context;\n      \n      let selectedNetwork = 'claude-flow-network'; // default\n      \n      if (requirements.needsScale) {\n        selectedNetwork = 'ruv-swarm-network';\n      } else if (requirements.needsConsensus) {\n        selectedNetwork = 'hive-mind-network';\n      } else if (requirements.needsReasoning) {\n        selectedNetwork = 'claude-flow-network';\n      }\n      \n      const network = networkRegistry.get(selectedNetwork);\n      if (network) {\n        network.queueTask(task);\n      }\n      \n      return {\n        task,\n        routedTo: selectedNetwork,\n        queuePosition: network ? network.taskQueue.length : 0\n      };\n    }\n  })\n};\n\n// Export network simulator\nexport default NetworkSimulator;","// Claude Flow Network - Advanced Reasoning and Coordination\nimport NetworkSimulator from '../network-simulator.js';\n\n// Create Claude Flow Network\nexport const claudeFlowNetwork = new NetworkSimulator({\n  name: 'claude-flow-network',\n  description: 'Advanced AI reasoning and coordination network with hierarchical agent orchestration',\n  \n  // Network agents\n  agents: [\n    'claude-flow-coordinator',\n    'coordinator', \n    'architect',\n    'researcher'\n  ],\n  \n  // Network-specific tools\n  tools: [\n    'claudeFlowCoordinate',\n    'claudeFlowSwarmInit',\n    'claudeFlowAgentSpawn',\n    'claudeFlowTaskOrchestrate'\n  ],\n  \n  // Network configuration\n  config: {\n    maxConcurrentAgents: 10,\n    communicationProtocol: 'hierarchical',\n    consensusThreshold: 0.8,\n    networkTopology: 'hierarchical',\n    \n    // Advanced reasoning configuration\n    reasoning: {\n      maxDepth: 5,\n      branching: true,\n      backtracking: true,\n      pruning: 'adaptive'\n    },\n    \n    // Coordination settings\n    coordination: {\n      strategy: 'centralized',\n      loadBalancing: 'dynamic',\n      failover: true,\n      redundancy: 2\n    }\n  },\n  \n  // Network capabilities\n  capabilities: {\n    reasoning: ['deductive', 'inductive', 'abductive', 'analogical'],\n    coordination: ['task-delegation', 'resource-allocation', 'conflict-resolution'],\n    learning: ['pattern-recognition', 'strategy-adaptation', 'performance-optimization'],\n    scaling: ['horizontal', 'vertical', 'elastic']\n  },\n  \n  // Network metrics\n  metrics: {\n    performance: {\n      latency: 'low',\n      throughput: 'high',\n      accuracy: 0.95\n    },\n    reliability: {\n      uptime: 0.999,\n      errorRate: 0.001,\n      recoveryTime: '< 5s'\n    }\n  },\n  \n  // Network workflows\n  workflows: [\n    'claude-flow-reasoning-workflow',\n    'software-development',\n    'problem-solving',\n    'research-analysis'\n  ]\n});\n\n// Network-specific functions\nexport const claudeFlowNetworkFunctions = {\n  // Initialize network\n  initialize: async () => {\n    console.log('üß† Initializing Claude Flow Network...');\n    return {\n      status: 'active',\n      topology: 'hierarchical',\n      agents: 4,\n      message: 'Claude Flow Network initialized successfully'\n    };\n  },\n  \n  // Get network status\n  getStatus: async () => {\n    return {\n      name: 'claude-flow-network',\n      status: 'active',\n      activeAgents: 4,\n      queuedTasks: 0,\n      completedTasks: 0,\n      performance: {\n        avgResponseTime: '250ms',\n        successRate: '99.5%'\n      }\n    };\n  }\n};\n\nexport default claudeFlowNetwork;","// Hive Mind Network - Collective Intelligence and Consensus\nimport NetworkSimulator from '../network-simulator.js';\n\n// Create Hive Mind Network\nexport const hiveMindNetwork = new NetworkSimulator({\n  name: 'hive-mind-network',\n  description: 'Distributed collective intelligence network with consensus-based decision making',\n  \n  // Network agents\n  agents: [\n    'hive-mind-collective',\n    'executor',\n    'researcher',\n    'coordinator'\n  ],\n  \n  // Network-specific tools\n  tools: [\n    'hiveMindCollective',\n    'createTeam',\n    'monitorSystem'\n  ],\n  \n  // Network configuration\n  config: {\n    maxConcurrentAgents: 50,\n    communicationProtocol: 'mesh',\n    consensusThreshold: 0.75,\n    networkTopology: 'mesh',\n    \n    // Collective intelligence settings\n    collective: {\n      minNodes: 5,\n      maxNodes: 50,\n      votingMechanism: 'weighted',\n      consensusAlgorithm: 'byzantine-fault-tolerant'\n    },\n    \n    // Swarm behavior\n    swarmBehavior: {\n      emergentPatterns: true,\n      selfOrganization: true,\n      adaptiveBehavior: true,\n      collectiveMemory: true\n    }\n  },\n  \n  // Network capabilities\n  capabilities: {\n    intelligence: ['collective-reasoning', 'distributed-processing', 'emergent-behavior'],\n    consensus: ['voting', 'negotiation', 'conflict-resolution', 'agreement-building'],\n    adaptation: ['self-organization', 'pattern-emergence', 'collective-learning'],\n    resilience: ['fault-tolerance', 'redundancy', 'self-healing']\n  },\n  \n  // Communication patterns\n  communicationPatterns: {\n    internal: 'peer-to-peer',\n    external: 'consensus-based',\n    protocols: ['gossip', 'flooding', 'consensus-rounds']\n  },\n  \n  // Network metrics\n  metrics: {\n    collective: {\n      consensusTime: '< 2s',\n      agreementRate: 0.85,\n      diversityIndex: 0.7\n    },\n    performance: {\n      throughput: 'very-high',\n      scalability: 'linear',\n      efficiency: 0.9\n    }\n  },\n  \n  // Network workflows\n  workflows: [\n    'hive-mind-consensus-workflow',\n    'research-analysis',\n    'adaptive-problem-solving',\n    'team-formation'\n  ],\n  \n  // Network events\n  events: {\n    onConsensusReached: async (decision) => {\n      console.log(`üêù Hive Mind: Consensus reached on ${decision.topic}`);\n    },\n    onNodeJoin: async (node) => {\n      console.log(`üêù Hive Mind: Node ${node.id} joined the collective`);\n    },\n    onEmergentPattern: async (pattern) => {\n      console.log(`üêù Hive Mind: Emergent pattern detected: ${pattern.type}`);\n    },\n    onCollectiveInsight: async (insight) => {\n      console.log(`üêù Hive Mind: Collective insight generated: ${insight.summary}`);\n    }\n  },\n  \n  // Network policies\n  policies: {\n    voting: 'reputation-weighted',\n    resourceSharing: 'communal',\n    knowledgeDistribution: 'broadcast',\n    conflictResolution: 'consensus-seeking'\n  }\n});\n\n// Network-specific functions\nexport const hiveMindNetworkFunctions = {\n  // Initialize network\n  initialize: async () => {\n    console.log('üêù Initializing Hive Mind Network...');\n    return {\n      status: 'active',\n      topology: 'mesh',\n      nodes: 10,\n      message: 'Hive Mind Network initialized with collective intelligence'\n    };\n  },\n  \n  // Get collective status\n  getCollectiveStatus: async () => {\n    return {\n      name: 'hive-mind-network',\n      status: 'active',\n      activeNodes: 10,\n      consensusRounds: 0,\n      collectiveInsights: 0,\n      intelligence: {\n        diversityScore: 0.75,\n        coherenceScore: 0.85,\n        adaptabilityScore: 0.9\n      }\n    };\n  },\n  \n  // Build consensus\n  buildConsensus: async (topic, options) => {\n    console.log(`üêù Building consensus on: ${topic}`);\n    return {\n      topic,\n      participants: 10,\n      rounds: 3,\n      consensus: 'achieved',\n      confidence: 0.87,\n      decision: `Collective decision on ${topic}`\n    };\n  },\n  \n  // Generate collective insight\n  generateInsight: async (data) => {\n    console.log('üêù Generating collective insight...');\n    return {\n      insight: 'Emergent pattern detected in data',\n      confidence: 0.82,\n      contributors: 8,\n      timestamp: new Date().toISOString()\n    };\n  }\n};\n\nexport default hiveMindNetwork;","// RUV Swarm Network - Distributed Scaling and Fault Tolerance\nimport NetworkSimulator from '../network-simulator.js';\n\n// Create RUV Swarm Network\nexport const ruvSwarmNetwork = new NetworkSimulator({\n  name: 'ruv-swarm-network',\n  description: 'Highly scalable distributed agent swarm with dynamic resource allocation and fault tolerance',\n  \n  // Network agents\n  agents: [\n    'ruv-swarm-coordinator',\n    'executor',\n    'architect',\n    'coordinator'\n  ],\n  \n  // Network-specific tools\n  tools: [\n    'ruvSwarmDeploy',\n    'executeWorkflow',\n    'monitorSystem'\n  ],\n  \n  // Network configuration\n  config: {\n    maxConcurrentAgents: 100,\n    communicationProtocol: 'dynamic',\n    consensusThreshold: 0.6,\n    networkTopology: 'dynamic-mesh',\n    \n    // Swarm configuration\n    swarm: {\n      initialSize: 20,\n      maxSize: 100,\n      minSize: 5,\n      scalingStrategy: 'elastic',\n      replicationFactor: 3\n    },\n    \n    // Fault tolerance\n    faultTolerance: {\n      redundancy: 3,\n      failoverTime: '< 1s',\n      recoveryStrategy: 'automatic',\n      healthCheckInterval: '5s'\n    },\n    \n    // Resource management\n    resourceManagement: {\n      allocation: 'dynamic',\n      optimization: 'continuous',\n      loadBalancing: 'adaptive',\n      prioritization: 'queue-based'\n    }\n  },\n  \n  // Network capabilities\n  capabilities: {\n    scaling: ['horizontal', 'vertical', 'elastic', 'auto-scaling'],\n    resilience: ['fault-detection', 'auto-recovery', 'load-distribution', 'redundancy'],\n    performance: ['parallel-processing', 'distributed-computing', 'optimization'],\n    adaptation: ['dynamic-topology', 'resource-reallocation', 'pattern-learning']\n  },\n  \n  // Communication patterns\n  communicationPatterns: {\n    internal: 'hybrid',\n    external: 'load-balanced',\n    protocols: ['direct', 'multicast', 'anycast', 'broadcast']\n  },\n  \n  // Network metrics\n  metrics: {\n    scaling: {\n      elasticity: 0.95,\n      responseTime: '< 500ms',\n      efficiency: 0.92\n    },\n    reliability: {\n      availability: 0.9999,\n      mtbf: '720h',\n      mttr: '< 30s'\n    },\n    performance: {\n      throughput: 'extreme',\n      concurrency: 100,\n      latency: 'ultra-low'\n    }\n  },\n  \n  // Network workflows\n  workflows: [\n    'ruv-swarm-scaling-workflow',\n    'crisis-response',\n    'enterprise-integration',\n    'system-optimization'\n  ],\n  \n  // Network events\n  events: {\n    onSwarmScale: async (event) => {\n      console.log(`üî• RUV Swarm: Scaled from ${event.from} to ${event.to} agents`);\n    },\n    onNodeFailure: async (node) => {\n      console.log(`üî• RUV Swarm: Node ${node.id} failed, initiating recovery`);\n    },\n    onLoadBalance: async (metrics) => {\n      console.log(`üî• RUV Swarm: Load balanced across ${metrics.nodes} nodes`);\n    },\n    onOptimization: async (result) => {\n      console.log(`üî• RUV Swarm: Optimization completed, efficiency improved by ${result.improvement}%`);\n    }\n  },\n  \n  // Network policies\n  policies: {\n    scaling: 'predictive',\n    faultHandling: 'proactive',\n    resourceAllocation: 'demand-driven',\n    optimization: 'continuous'\n  }\n});\n\n// Network-specific functions\nexport const ruvSwarmNetworkFunctions = {\n  // Initialize network\n  initialize: async () => {\n    console.log('üî• Initializing RUV Swarm Network...');\n    return {\n      status: 'active',\n      topology: 'dynamic-mesh',\n      swarmSize: 20,\n      message: 'RUV Swarm Network initialized with elastic scaling'\n    };\n  },\n  \n  // Get swarm status\n  getSwarmStatus: async () => {\n    return {\n      name: 'ruv-swarm-network',\n      status: 'active',\n      swarmSize: 20,\n      activeAgents: 18,\n      idleAgents: 2,\n      performance: {\n        throughput: '10k ops/s',\n        latency: '15ms',\n        efficiency: '92%'\n      },\n      health: {\n        healthy: 18,\n        degraded: 1,\n        failed: 1\n      }\n    };\n  },\n  \n  // Deploy swarm\n  deploySwarm: async (size, mission) => {\n    console.log(`üî• Deploying swarm of ${size} agents for: ${mission}`);\n    return {\n      deploymentId: `swarm-${Date.now()}`,\n      size,\n      mission,\n      status: 'deployed',\n      readyAgents: size,\n      deploymentTime: '2.3s'\n    };\n  },\n  \n  // Scale swarm\n  scaleSwarm: async (targetSize) => {\n    console.log(`üî• Scaling swarm to ${targetSize} agents`);\n    return {\n      previousSize: 20,\n      targetSize,\n      actualSize: targetSize,\n      scalingTime: '1.8s',\n      status: 'scaled'\n    };\n  },\n  \n  // Optimize resources\n  optimizeResources: async () => {\n    console.log('üî• Optimizing swarm resources...');\n    return {\n      optimizationRun: Date.now(),\n      improvements: {\n        throughput: '+15%',\n        latency: '-20%',\n        efficiency: '+8%'\n      },\n      reallocated: 5,\n      status: 'optimized'\n    };\n  }\n};\n\nexport default ruvSwarmNetwork;","// Multi-Network Orchestrator - Cross-Network Coordination\nimport NetworkSimulator from '../network-simulator.js';\n\n// Create Multi-Network Orchestrator\nexport const multiNetworkOrchestrator = new NetworkSimulator({\n  name: 'multi-network-orchestrator',\n  description: 'Meta-network that orchestrates and coordinates across all agent networks',\n  \n  // Network agents - includes representatives from all networks\n  agents: [\n    'coordinator',\n    'claude-flow-coordinator',\n    'hive-mind-collective',\n    'ruv-swarm-coordinator',\n    'claude-flow-mcp-agent',\n    'agentic-flow-mcp-agent'\n  ],\n  \n  // Cross-network tools\n  tools: [\n    'claudeFlowCoordinate',\n    'hiveMindCollective',\n    'ruvSwarmDeploy',\n    'executeWorkflow',\n    'monitorSystem',\n    'mcpServerStatus'\n  ],\n  \n  // Network configuration\n  config: {\n    maxConcurrentAgents: 200,\n    communicationProtocol: 'federated',\n    consensusThreshold: 0.7,\n    networkTopology: 'federated-mesh',\n    \n    // Orchestration settings\n    orchestration: {\n      strategy: 'adaptive',\n      coordination: 'hierarchical-consensus',\n      routing: 'capability-based',\n      optimization: 'global'\n    },\n    \n    // Network federation\n    federation: {\n      networks: ['claude-flow', 'hive-mind', 'ruv-swarm'],\n      interoperability: 'full',\n      dataSharing: 'selective',\n      protocolTranslation: true\n    },\n    \n    // Cross-network policies\n    crossNetwork: {\n      taskRouting: 'optimal-match',\n      resourceSharing: 'negotiated',\n      conflictResolution: 'priority-based',\n      loadDistribution: 'balanced'\n    }\n  },\n  \n  // Network capabilities\n  capabilities: {\n    orchestration: ['cross-network-coordination', 'global-optimization', 'federated-learning'],\n    integration: ['protocol-translation', 'data-harmonization', 'capability-mapping'],\n    intelligence: ['meta-reasoning', 'network-selection', 'strategy-synthesis'],\n    management: ['resource-allocation', 'performance-monitoring', 'fault-isolation']\n  },\n  \n  // Communication patterns\n  communicationPatterns: {\n    internal: 'federated',\n    external: 'unified-api',\n    protocols: ['inter-network', 'translation', 'federation']\n  },\n  \n  // Network metrics\n  metrics: {\n    orchestration: {\n      networkUtilization: 0.85,\n      crossNetworkLatency: '< 100ms',\n      coordinationEfficiency: 0.92\n    },\n    integration: {\n      interoperability: 0.95,\n      translationAccuracy: 0.98,\n      dataConsistency: 0.99\n    }\n  },\n  \n  // Network workflows\n  workflows: [\n    'multi-network-orchestration',\n    'mcp-swarm-orchestration',\n    'mcp-multi-server-coordination',\n    'task-routing'\n  ],\n  \n  // Network events\n  events: {\n    onNetworkJoin: async (network) => {\n      console.log(`üåê Orchestrator: Network ${network.name} joined federation`);\n    },\n    onCrossNetworkTask: async (task) => {\n      console.log(`üåê Orchestrator: Routing task ${task.id} across ${task.networks.length} networks`);\n    },\n    onGlobalOptimization: async (result) => {\n      console.log(`üåê Orchestrator: Global optimization achieved ${result.improvement}% improvement`);\n    },\n    onFederationUpdate: async (update) => {\n      console.log(`üåê Orchestrator: Federation updated - ${update.type}`);\n    }\n  },\n  \n  // Network policies\n  policies: {\n    taskDistribution: 'capability-optimal',\n    networkSelection: 'performance-based',\n    resourceAllocation: 'fair-share',\n    prioritization: 'global-impact'\n  }\n});\n\n// Network-specific functions\nexport const multiNetworkOrchestratorFunctions = {\n  // Initialize orchestrator\n  initialize: async () => {\n    console.log('üåê Initializing Multi-Network Orchestrator...');\n    return {\n      status: 'active',\n      topology: 'federated-mesh',\n      networks: 3,\n      totalAgents: 9,\n      message: 'Multi-Network Orchestrator initialized successfully'\n    };\n  },\n  \n  // Get federation status\n  getFederationStatus: async () => {\n    return {\n      name: 'multi-network-orchestrator',\n      status: 'active',\n      networks: {\n        'claude-flow': { status: 'active', agents: 4, load: 0.3 },\n        'hive-mind': { status: 'active', agents: 4, load: 0.5 },\n        'ruv-swarm': { status: 'active', agents: 4, load: 0.7 }\n      },\n      globalMetrics: {\n        totalTasks: 0,\n        crossNetworkTasks: 0,\n        efficiency: 0.92\n      }\n    };\n  },\n  \n  // Route task to optimal network\n  routeTask: async (task, requirements) => {\n    console.log(`üåê Routing task: ${task}`);\n    \n    // Determine optimal network based on requirements\n    let selectedNetwork = 'claude-flow'; // default\n    \n    if (requirements.needsConsensus) {\n      selectedNetwork = 'hive-mind';\n    } else if (requirements.needsScale) {\n      selectedNetwork = 'ruv-swarm';\n    } else if (requirements.needsReasoning) {\n      selectedNetwork = 'claude-flow';\n    }\n    \n    return {\n      task,\n      selectedNetwork,\n      reasoning: `Selected ${selectedNetwork} based on requirements`,\n      estimatedCompletion: '5 minutes',\n      confidence: 0.89\n    };\n  },\n  \n  // Coordinate cross-network operation\n  coordinateCrossNetwork: async (operation, networks) => {\n    console.log(`üåê Coordinating ${operation} across ${networks.length} networks`);\n    return {\n      operation,\n      networks,\n      coordinationId: `coord-${Date.now()}`,\n      status: 'coordinating',\n      phases: [\n        'network-preparation',\n        'resource-allocation',\n        'execution',\n        'synchronization'\n      ]\n    };\n  },\n  \n  // Optimize global resources\n  optimizeGlobal: async () => {\n    console.log('üåê Running global optimization...');\n    return {\n      timestamp: new Date().toISOString(),\n      optimizations: {\n        'claude-flow': { reallocated: 2, efficiency: '+5%' },\n        'hive-mind': { reallocated: 5, efficiency: '+8%' },\n        'ruv-swarm': { reallocated: 10, efficiency: '+12%' }\n      },\n      globalImprovement: '+8.3%',\n      status: 'optimized'\n    };\n  }\n};\n\nexport default multiNetworkOrchestrator;","// Agent Networks Export\nimport claudeFlowNetwork from './claude-flow-network.js';\nimport hiveMindNetwork from './hive-mind-network.js';\nimport ruvSwarmNetwork from './ruv-swarm-network.js';\nimport multiNetworkOrchestrator from './multi-network-orchestrator.js';\n\n// Export all networks\nexport const agentNetworks = {\n  'claude-flow': claudeFlowNetwork,\n  'hive-mind': hiveMindNetwork,\n  'ruv-swarm': ruvSwarmNetwork,\n  'multi-network': multiNetworkOrchestrator\n};\n\n// Export individual networks\nexport {\n  claudeFlowNetwork,\n  hiveMindNetwork,\n  ruvSwarmNetwork,\n  multiNetworkOrchestrator\n};\n\n// Network management functions\nexport const networkManagement = {\n  // Initialize all networks\n  initializeAll: async () => {\n    console.log('üåê Initializing all agent networks...');\n    const results = {};\n    \n    for (const [name, network] of Object.entries(agentNetworks)) {\n      try {\n        results[name] = {\n          status: 'initialized',\n          name: network.name,\n          agents: network.agents.length,\n          tools: network.tools.length\n        };\n        console.log(`‚úÖ ${name} network initialized`);\n      } catch (error) {\n        results[name] = {\n          status: 'failed',\n          error: error.message\n        };\n        console.error(`‚ùå Failed to initialize ${name}:`, error);\n      }\n    }\n    \n    return results;\n  },\n  \n  // Get all network statuses\n  getAllStatuses: async () => {\n    const statuses = {};\n    \n    for (const [name, network] of Object.entries(agentNetworks)) {\n      statuses[name] = {\n        name: network.name,\n        description: network.description,\n        agents: network.agents.length,\n        tools: network.tools.length,\n        topology: network.config.networkTopology,\n        status: 'active'\n      };\n    }\n    \n    return statuses;\n  },\n  \n  // Find optimal network for task\n  findOptimalNetwork: (requirements) => {\n    if (requirements.needsScale || requirements.priority === 'critical') {\n      return agentNetworks['ruv-swarm'];\n    } else if (requirements.needsConsensus || requirements.collaborative) {\n      return agentNetworks['hive-mind'];\n    } else if (requirements.needsReasoning || requirements.complex) {\n      return agentNetworks['claude-flow'];\n    } else if (requirements.crossNetwork || requirements.orchestration) {\n      return agentNetworks['multi-network'];\n    }\n    \n    // Default to Claude Flow for general tasks\n    return agentNetworks['claude-flow'];\n  },\n  \n  // Get network metrics\n  getNetworkMetrics: (networkName) => {\n    const network = agentNetworks[networkName];\n    if (!network) return null;\n    \n    return {\n      name: network.name,\n      metrics: network.metrics,\n      capabilities: network.capabilities,\n      performance: {\n        agentCount: network.agents.length,\n        toolCount: network.tools.length,\n        workflowCount: network.workflows.length\n      }\n    };\n  }\n};\n\nexport default agentNetworks;","import { createTool } from '@mastra/core';\nimport { z } from 'zod';\nimport { swarmAgents } from '../agents/swarm-agents.js';\n\n// Swarm state management\nconst swarmState = new Map();\nconst agentTasks = new Map();\nconst swarmMetrics = new Map();\n\n// Initialize a 5-agent swarm\nexport const initializeFiveAgentSwarm = createTool({\n  id: 'initialize-five-agent-swarm',\n  name: 'Initialize 5-Agent Swarm',\n  description: 'Initialize a coordinated swarm of 5 specialized agents',\n  inputSchema: z.object({\n    swarmName: z.string(),\n    topology: z.enum(['mesh', 'hierarchical', 'ring', 'star']).default('mesh'),\n    coordinatorAgent: z.string().optional()\n  }),\n  execute: async ({ swarmName, topology, coordinatorAgent }) => {\n    const swarmId = `swarm_${swarmName}_${Date.now()}`;\n    \n    // Initialize swarm configuration\n    const swarmConfig = {\n      id: swarmId,\n      name: swarmName,\n      topology,\n      agents: {\n        dataAnalyst: {\n          agent: 'dataAnalystAgent',\n          role: 'Data processing and analysis',\n          status: 'active',\n          taskQueue: [],\n          metrics: {\n            tasksCompleted: 0,\n            successRate: 100,\n            avgResponseTime: 0\n          }\n        },\n        securityExpert: {\n          agent: 'securityExpertAgent',\n          role: 'Security and threat analysis',\n          status: 'active',\n          taskQueue: [],\n          metrics: {\n            threatsDetected: 0,\n            vulnerabilitiesFound: 0,\n            incidentsResolved: 0\n          }\n        },\n        devOpsEngineer: {\n          agent: 'devOpsEngineerAgent',\n          role: 'Infrastructure and deployment',\n          status: 'active',\n          taskQueue: [],\n          metrics: {\n            deploymentsCompleted: 0,\n            automationTasks: 0,\n            systemUptime: 99.9\n          }\n        },\n        researchScientist: {\n          agent: 'researchScientistAgent',\n          role: 'Research and innovation',\n          status: 'active',\n          taskQueue: [],\n          metrics: {\n            experimentsRun: 0,\n            modelsTraineds: 0,\n            breakthroughs: 0\n          }\n        },\n        productManager: {\n          agent: 'productManagerAgent',\n          role: 'Coordination and planning',\n          status: 'active',\n          taskQueue: [],\n          metrics: {\n            featuresDelivered: 0,\n            userSatisfaction: 0,\n            coordinationTasks: 0\n          }\n        }\n      },\n      coordinator: coordinatorAgent || 'productManager',\n      topology,\n      connections: generateTopologyConnections(topology),\n      createdAt: new Date().toISOString(),\n      status: 'active',\n      metrics: {\n        totalTasks: 0,\n        completedTasks: 0,\n        failedTasks: 0,\n        avgCompletionTime: 0,\n        efficiency: 100\n      }\n    };\n    \n    // Store swarm state\n    swarmState.set(swarmId, swarmConfig);\n    \n    // Initialize agent task queues\n    Object.keys(swarmConfig.agents).forEach(agentKey => {\n      agentTasks.set(`${swarmId}_${agentKey}`, []);\n    });\n    \n    // Initialize swarm metrics\n    swarmMetrics.set(swarmId, {\n      startTime: Date.now(),\n      taskHistory: [],\n      performanceHistory: []\n    });\n    \n    return {\n      success: true,\n      swarmId,\n      configuration: {\n        name: swarmName,\n        topology,\n        agentCount: 5,\n        coordinator: swarmConfig.coordinator,\n        agents: Object.keys(swarmConfig.agents)\n      },\n      message: `5-agent swarm '${swarmName}' initialized successfully with ${topology} topology`\n    };\n  }\n});\n\n// Orchestrate task across the swarm\nexport const orchestrateSwarmTask = createTool({\n  id: 'orchestrate-swarm-task',\n  name: 'Orchestrate Swarm Task',\n  description: 'Distribute and coordinate a complex task across the 5-agent swarm',\n  inputSchema: z.object({\n    swarmId: z.string(),\n    task: z.string(),\n    taskType: z.enum(['analysis', 'development', 'security', 'research', 'planning']),\n    priority: z.enum(['low', 'medium', 'high', 'critical']).default('medium'),\n    requiresCollaboration: z.boolean().default(true)\n  }),\n  execute: async ({ swarmId, task, taskType, priority, requiresCollaboration }) => {\n    const swarm = swarmState.get(swarmId);\n    if (!swarm) {\n      return { success: false, error: 'Swarm not found' };\n    }\n    \n    const taskId = `task_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const taskPlan = {\n      id: taskId,\n      description: task,\n      type: taskType,\n      priority,\n      status: 'planning',\n      subtasks: [],\n      assignments: {},\n      createdAt: new Date().toISOString()\n    };\n    \n    // Analyze task and create subtasks based on type\n    const subtasks = analyzeAndDecomposeTask(task, taskType);\n    \n    // Assign subtasks to appropriate agents\n    subtasks.forEach((subtask, index) => {\n      const assignedAgent = selectBestAgent(subtask, swarm.agents, priority);\n      taskPlan.subtasks.push({\n        id: `${taskId}_sub_${index}`,\n        description: subtask.description,\n        type: subtask.type,\n        assignedTo: assignedAgent,\n        status: 'assigned',\n        dependencies: subtask.dependencies || []\n      });\n      taskPlan.assignments[assignedAgent] = taskPlan.assignments[assignedAgent] || [];\n      taskPlan.assignments[assignedAgent].push(`${taskId}_sub_${index}`);\n    });\n    \n    // Update swarm metrics\n    swarm.metrics.totalTasks++;\n    \n    // If collaboration is required, set up communication channels\n    const collaborationPlan = requiresCollaboration ? \n      setupCollaborationChannels(taskPlan, swarm) : null;\n    \n    // Execute task distribution\n    const executionResults = await executeSwarmTask(swarm, taskPlan, collaborationPlan);\n    \n    return {\n      success: true,\n      taskId,\n      taskPlan: {\n        mainTask: task,\n        subtaskCount: subtasks.length,\n        assignments: taskPlan.assignments,\n        estimatedCompletionTime: estimateCompletionTime(subtasks, priority)\n      },\n      collaboration: collaborationPlan,\n      execution: executionResults,\n      message: `Task orchestrated across ${Object.keys(taskPlan.assignments).length} agents`\n    };\n  }\n});\n\n// Monitor swarm performance\nexport const monitorSwarmPerformance = createTool({\n  id: 'monitor-swarm-performance',\n  name: 'Monitor Swarm Performance',\n  description: 'Real-time monitoring of the 5-agent swarm performance',\n  inputSchema: z.object({\n    swarmId: z.string(),\n    includeAgentMetrics: z.boolean().default(true),\n    includeTaskHistory: z.boolean().default(false)\n  }),\n  execute: async ({ swarmId, includeAgentMetrics, includeTaskHistory }) => {\n    const swarm = swarmState.get(swarmId);\n    if (!swarm) {\n      return { success: false, error: 'Swarm not found' };\n    }\n    \n    const metrics = swarmMetrics.get(swarmId);\n    const uptime = Date.now() - metrics.startTime;\n    \n    const performanceReport = {\n      swarmId,\n      name: swarm.name,\n      status: swarm.status,\n      uptime: formatUptime(uptime),\n      topology: swarm.topology,\n      overallMetrics: {\n        ...swarm.metrics,\n        successRate: swarm.metrics.totalTasks > 0 ? \n          ((swarm.metrics.completedTasks / swarm.metrics.totalTasks) * 100).toFixed(2) + '%' : '100%',\n        utilizationRate: calculateUtilizationRate(swarm.agents)\n      }\n    };\n    \n    if (includeAgentMetrics) {\n      performanceReport.agentMetrics = {};\n      Object.entries(swarm.agents).forEach(([agentKey, agentData]) => {\n        performanceReport.agentMetrics[agentKey] = {\n          status: agentData.status,\n          role: agentData.role,\n          queueLength: agentData.taskQueue.length,\n          metrics: agentData.metrics,\n          efficiency: calculateAgentEfficiency(agentData)\n        };\n      });\n    }\n    \n    if (includeTaskHistory && metrics.taskHistory) {\n      performanceReport.recentTasks = metrics.taskHistory.slice(-10);\n    }\n    \n    // Generate performance insights\n    performanceReport.insights = generatePerformanceInsights(swarm, metrics);\n    \n    // Recommendations for optimization\n    performanceReport.recommendations = generateOptimizationRecommendations(swarm, metrics);\n    \n    return {\n      success: true,\n      performance: performanceReport,\n      healthStatus: determineSwarmHealth(swarm),\n      timestamp: new Date().toISOString()\n    };\n  }\n});\n\n// Inter-agent communication\nexport const facilitateAgentCommunication = createTool({\n  id: 'facilitate-agent-communication',\n  name: 'Facilitate Agent Communication',\n  description: 'Enable communication between agents in the swarm',\n  inputSchema: z.object({\n    swarmId: z.string(),\n    fromAgent: z.string(),\n    toAgent: z.string(),\n    message: z.object({\n      type: z.enum(['query', 'response', 'broadcast', 'coordination']),\n      content: z.any(),\n      priority: z.enum(['low', 'medium', 'high']).default('medium')\n    }),\n    awaitResponse: z.boolean().default(false)\n  }),\n  execute: async ({ swarmId, fromAgent, toAgent, message, awaitResponse }) => {\n    const swarm = swarmState.get(swarmId);\n    if (!swarm) {\n      return { success: false, error: 'Swarm not found' };\n    }\n    \n    // Validate agents exist in swarm\n    if (!swarm.agents[fromAgent] || !swarm.agents[toAgent]) {\n      return { success: false, error: 'Invalid agent specified' };\n    }\n    \n    // Check if communication is allowed based on topology\n    const isAllowed = checkCommunicationPath(swarm, fromAgent, toAgent);\n    if (!isAllowed) {\n      return { \n        success: false, \n        error: `Communication not allowed between ${fromAgent} and ${toAgent} in ${swarm.topology} topology` \n      };\n    }\n    \n    const communicationId = `comm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const communication = {\n      id: communicationId,\n      swarmId,\n      from: fromAgent,\n      to: toAgent,\n      message,\n      timestamp: new Date().toISOString(),\n      status: 'sent'\n    };\n    \n    // Process message based on type\n    let response = null;\n    if (message.type === 'broadcast') {\n      // Broadcast to all connected agents\n      response = broadcastToConnectedAgents(swarm, fromAgent, message);\n    } else if (awaitResponse) {\n      // Simulate agent processing and response\n      response = await simulateAgentResponse(toAgent, message, swarm.agents[toAgent]);\n      communication.response = response;\n      communication.status = 'completed';\n    }\n    \n    // Log communication in metrics\n    const metrics = swarmMetrics.get(swarmId);\n    if (metrics) {\n      metrics.communications = metrics.communications || [];\n      metrics.communications.push(communication);\n    }\n    \n    return {\n      success: true,\n      communicationId,\n      from: fromAgent,\n      to: toAgent,\n      messageType: message.type,\n      status: communication.status,\n      response: response,\n      timestamp: communication.timestamp\n    };\n  }\n});\n\n// Swarm task completion\nexport const completeSwarmTask = createTool({\n  id: 'complete-swarm-task',\n  name: 'Complete Swarm Task',\n  description: 'Mark a swarm task as complete and collect results',\n  inputSchema: z.object({\n    swarmId: z.string(),\n    taskId: z.string(),\n    results: z.array(z.object({\n      agentId: z.string(),\n      subtaskId: z.string(),\n      result: z.any(),\n      success: z.boolean()\n    }))\n  }),\n  execute: async ({ swarmId, taskId, results }) => {\n    const swarm = swarmState.get(swarmId);\n    if (!swarm) {\n      return { success: false, error: 'Swarm not found' };\n    }\n    \n    // Aggregate results\n    const aggregatedResults = {\n      taskId,\n      totalSubtasks: results.length,\n      successfulSubtasks: results.filter(r => r.success).length,\n      failedSubtasks: results.filter(r => !r.success).length,\n      resultsByAgent: {},\n      combinedOutput: {}\n    };\n    \n    // Group results by agent\n    results.forEach(result => {\n      if (!aggregatedResults.resultsByAgent[result.agentId]) {\n        aggregatedResults.resultsByAgent[result.agentId] = [];\n      }\n      aggregatedResults.resultsByAgent[result.agentId].push({\n        subtaskId: result.subtaskId,\n        success: result.success,\n        output: result.result\n      });\n    });\n    \n    // Update swarm metrics\n    swarm.metrics.completedTasks++;\n    if (aggregatedResults.failedSubtasks > 0) {\n      swarm.metrics.failedTasks++;\n    }\n    \n    // Update agent metrics\n    Object.entries(aggregatedResults.resultsByAgent).forEach(([agentId, agentResults]) => {\n      const agent = swarm.agents[agentId];\n      if (agent) {\n        agent.metrics.tasksCompleted += agentResults.length;\n        const successCount = agentResults.filter(r => r.success).length;\n        agent.metrics.successRate = \n          ((agent.metrics.successRate * (agent.metrics.tasksCompleted - agentResults.length) + \n            successCount * 100) / agent.metrics.tasksCompleted);\n      }\n    });\n    \n    // Generate task summary\n    const summary = {\n      taskId,\n      completionTime: new Date().toISOString(),\n      success: aggregatedResults.failedSubtasks === 0,\n      successRate: `${((aggregatedResults.successfulSubtasks / aggregatedResults.totalSubtasks) * 100).toFixed(2)}%`,\n      participatingAgents: Object.keys(aggregatedResults.resultsByAgent),\n      insights: generateTaskInsights(results)\n    };\n    \n    // Store in metrics history\n    const metrics = swarmMetrics.get(swarmId);\n    if (metrics) {\n      metrics.taskHistory.push(summary);\n    }\n    \n    return {\n      success: true,\n      taskId,\n      summary,\n      aggregatedResults,\n      swarmEfficiency: calculateSwarmEfficiency(swarm),\n      message: `Task ${taskId} completed with ${summary.successRate} success rate`\n    };\n  }\n});\n\n// Helper functions\nfunction generateTopologyConnections(topology) {\n  const agents = ['dataAnalyst', 'securityExpert', 'devOpsEngineer', 'researchScientist', 'productManager'];\n  const connections = {};\n  \n  switch (topology) {\n    case 'mesh':\n      // Everyone connects to everyone\n      agents.forEach(agent => {\n        connections[agent] = agents.filter(a => a !== agent);\n      });\n      break;\n      \n    case 'star':\n      // All connect to product manager (coordinator)\n      agents.forEach(agent => {\n        if (agent === 'productManager') {\n          connections[agent] = agents.filter(a => a !== agent);\n        } else {\n          connections[agent] = ['productManager'];\n        }\n      });\n      break;\n      \n    case 'ring':\n      // Each connects to next in circle\n      agents.forEach((agent, index) => {\n        connections[agent] = [agents[(index + 1) % agents.length]];\n      });\n      break;\n      \n    case 'hierarchical':\n      // Product Manager -> Research Scientist & DevOps -> Data Analyst & Security Expert\n      connections['productManager'] = ['researchScientist', 'devOpsEngineer'];\n      connections['researchScientist'] = ['productManager', 'dataAnalyst'];\n      connections['devOpsEngineer'] = ['productManager', 'securityExpert'];\n      connections['dataAnalyst'] = ['researchScientist'];\n      connections['securityExpert'] = ['devOpsEngineer'];\n      break;\n  }\n  \n  return connections;\n}\n\nfunction analyzeAndDecomposeTask(task, taskType) {\n  const subtasks = [];\n  \n  switch (taskType) {\n    case 'analysis':\n      subtasks.push(\n        { description: 'Collect and prepare data', type: 'data_prep' },\n        { description: 'Perform statistical analysis', type: 'analysis' },\n        { description: 'Identify patterns and anomalies', type: 'pattern_recognition' },\n        { description: 'Generate insights report', type: 'reporting' }\n      );\n      break;\n      \n    case 'development':\n      subtasks.push(\n        { description: 'Design system architecture', type: 'architecture' },\n        { description: 'Implement core functionality', type: 'coding' },\n        { description: 'Set up CI/CD pipeline', type: 'devops' },\n        { description: 'Perform security audit', type: 'security' },\n        { description: 'Deploy to production', type: 'deployment' }\n      );\n      break;\n      \n    case 'security':\n      subtasks.push(\n        { description: 'Vulnerability scanning', type: 'scanning' },\n        { description: 'Threat analysis', type: 'threat_analysis' },\n        { description: 'Security pattern detection', type: 'pattern_recognition' },\n        { description: 'Generate security report', type: 'reporting' }\n      );\n      break;\n      \n    case 'research':\n      subtasks.push(\n        { description: 'Literature review', type: 'research' },\n        { description: 'Hypothesis formulation', type: 'planning' },\n        { description: 'Experiment design', type: 'research' },\n        { description: 'Data collection and analysis', type: 'analysis' },\n        { description: 'Results validation', type: 'validation' }\n      );\n      break;\n      \n    case 'planning':\n      subtasks.push(\n        { description: 'Requirements gathering', type: 'planning' },\n        { description: 'Feature prioritization', type: 'planning' },\n        { description: 'Resource allocation', type: 'coordination' },\n        { description: 'Timeline creation', type: 'planning' },\n        { description: 'Risk assessment', type: 'analysis' }\n      );\n      break;\n  }\n  \n  return subtasks;\n}\n\nfunction selectBestAgent(subtask, agents, priority) {\n  // Map subtask types to best agents\n  const agentMapping = {\n    'data_prep': 'dataAnalyst',\n    'analysis': 'dataAnalyst',\n    'pattern_recognition': 'dataAnalyst',\n    'architecture': 'devOpsEngineer',\n    'coding': 'devOpsEngineer',\n    'devops': 'devOpsEngineer',\n    'deployment': 'devOpsEngineer',\n    'security': 'securityExpert',\n    'scanning': 'securityExpert',\n    'threat_analysis': 'securityExpert',\n    'research': 'researchScientist',\n    'validation': 'researchScientist',\n    'planning': 'productManager',\n    'coordination': 'productManager',\n    'reporting': 'productManager'\n  };\n  \n  const preferredAgent = agentMapping[subtask.type] || 'productManager';\n  \n  // Check agent availability (queue length)\n  const agent = agents[preferredAgent];\n  if (agent && agent.taskQueue.length < 5) {\n    return preferredAgent;\n  }\n  \n  // Find alternative agent with lowest queue\n  let alternativeAgent = preferredAgent;\n  let minQueue = agent ? agent.taskQueue.length : Infinity;\n  \n  Object.entries(agents).forEach(([agentKey, agentData]) => {\n    if (agentData.taskQueue.length < minQueue) {\n      alternativeAgent = agentKey;\n      minQueue = agentData.taskQueue.length;\n    }\n  });\n  \n  return alternativeAgent;\n}\n\nfunction setupCollaborationChannels(taskPlan, swarm) {\n  const channels = [];\n  \n  // Create collaboration channels based on task dependencies\n  Object.entries(taskPlan.assignments).forEach(([agent1, subtasks1]) => {\n    Object.entries(taskPlan.assignments).forEach(([agent2, subtasks2]) => {\n      if (agent1 !== agent2) {\n        // Check if agents need to collaborate\n        const needsCollaboration = checkCollaborationNeed(subtasks1, subtasks2, taskPlan.subtasks);\n        if (needsCollaboration) {\n          channels.push({\n            agents: [agent1, agent2],\n            type: 'bidirectional',\n            purpose: 'task_coordination'\n          });\n        }\n      }\n    });\n  });\n  \n  return {\n    channels,\n    coordinationProtocol: 'async_message_passing',\n    syncPoints: identifySyncPoints(taskPlan)\n  };\n}\n\nfunction checkCollaborationNeed(subtasks1, subtasks2, allSubtasks) {\n  // Check if any subtask in group1 has dependencies on group2\n  for (const subtaskId1 of subtasks1) {\n    const subtask1 = allSubtasks.find(s => s.id === subtaskId1);\n    if (subtask1 && subtask1.dependencies) {\n      for (const dep of subtask1.dependencies) {\n        if (subtasks2.includes(dep)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nfunction identifySyncPoints(taskPlan) {\n  const syncPoints = [];\n  \n  // Identify points where multiple subtasks need to sync\n  taskPlan.subtasks.forEach(subtask => {\n    if (subtask.dependencies && subtask.dependencies.length > 1) {\n      syncPoints.push({\n        subtaskId: subtask.id,\n        waitFor: subtask.dependencies,\n        type: 'barrier'\n      });\n    }\n  });\n  \n  return syncPoints;\n}\n\nasync function executeSwarmTask(swarm, taskPlan, collaborationPlan) {\n  // Simulate task execution\n  const executionStart = Date.now();\n  \n  // Add tasks to agent queues\n  Object.entries(taskPlan.assignments).forEach(([agentKey, subtaskIds]) => {\n    const agent = swarm.agents[agentKey];\n    if (agent) {\n      agent.taskQueue.push(...subtaskIds);\n    }\n  });\n  \n  // Simulate execution progress\n  const progress = {\n    status: 'executing',\n    startTime: new Date().toISOString(),\n    estimatedCompletion: new Date(Date.now() + 30000).toISOString(), // 30 seconds estimate\n    activeAgents: Object.keys(taskPlan.assignments),\n    progressPercentage: 0\n  };\n  \n  return progress;\n}\n\nfunction estimateCompletionTime(subtasks, priority) {\n  const baseTime = subtasks.length * 5000; // 5 seconds per subtask base\n  const priorityMultiplier = {\n    'critical': 0.5,\n    'high': 0.7,\n    'medium': 1.0,\n    'low': 1.5\n  };\n  \n  return Math.round(baseTime * priorityMultiplier[priority]);\n}\n\nfunction formatUptime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  \n  if (days > 0) return `${days}d ${hours % 24}h`;\n  if (hours > 0) return `${hours}h ${minutes % 60}m`;\n  if (minutes > 0) return `${minutes}m ${seconds % 60}s`;\n  return `${seconds}s`;\n}\n\nfunction calculateUtilizationRate(agents) {\n  let totalCapacity = 0;\n  let totalUsed = 0;\n  \n  Object.values(agents).forEach(agent => {\n    totalCapacity += 10; // Max 10 tasks per agent\n    totalUsed += agent.taskQueue.length;\n  });\n  \n  return `${((totalUsed / totalCapacity) * 100).toFixed(2)}%`;\n}\n\nfunction calculateAgentEfficiency(agentData) {\n  const successRate = agentData.metrics.successRate || 100;\n  const queueEfficiency = Math.max(0, 100 - (agentData.taskQueue.length * 10));\n  return `${((successRate + queueEfficiency) / 2).toFixed(2)}%`;\n}\n\nfunction generatePerformanceInsights(swarm, metrics) {\n  const insights = [];\n  \n  // Check overall performance\n  if (swarm.metrics.successRate && parseFloat(swarm.metrics.successRate) < 90) {\n    insights.push('Success rate below optimal threshold - consider task redistribution');\n  }\n  \n  // Check agent load balance\n  const queueLengths = Object.values(swarm.agents).map(a => a.taskQueue.length);\n  const avgQueue = queueLengths.reduce((a, b) => a + b, 0) / queueLengths.length;\n  const maxQueue = Math.max(...queueLengths);\n  \n  if (maxQueue > avgQueue * 2) {\n    insights.push('Uneven load distribution detected - rebalance tasks');\n  }\n  \n  // Check topology efficiency\n  if (swarm.topology === 'star' && Object.keys(swarm.agents).length > 4) {\n    insights.push('Star topology may bottleneck at coordinator - consider mesh for better distribution');\n  }\n  \n  return insights;\n}\n\nfunction generateOptimizationRecommendations(swarm, metrics) {\n  const recommendations = [];\n  \n  // Agent-specific recommendations\n  Object.entries(swarm.agents).forEach(([agentKey, agentData]) => {\n    if (agentData.metrics.successRate < 80) {\n      recommendations.push(`Consider additional training or resources for ${agentKey}`);\n    }\n    if (agentData.taskQueue.length > 5) {\n      recommendations.push(`${agentKey} is overloaded - redistribute tasks`);\n    }\n  });\n  \n  // Topology recommendations\n  if (swarm.topology === 'ring' && swarm.metrics.totalTasks > 50) {\n    recommendations.push('Ring topology may slow communication - consider switching to mesh');\n  }\n  \n  return recommendations;\n}\n\nfunction determineSwarmHealth(swarm) {\n  let healthScore = 100;\n  \n  // Check agent health\n  Object.values(swarm.agents).forEach(agent => {\n    if (agent.status !== 'active') healthScore -= 20;\n    if (agent.taskQueue.length > 7) healthScore -= 10;\n    if (agent.metrics.successRate < 70) healthScore -= 15;\n  });\n  \n  // Check swarm metrics\n  if (swarm.metrics.failedTasks > swarm.metrics.completedTasks * 0.1) {\n    healthScore -= 20;\n  }\n  \n  if (healthScore >= 90) return 'excellent';\n  if (healthScore >= 70) return 'good';\n  if (healthScore >= 50) return 'fair';\n  return 'poor';\n}\n\nfunction checkCommunicationPath(swarm, fromAgent, toAgent) {\n  const connections = swarm.connections[fromAgent];\n  return connections && connections.includes(toAgent);\n}\n\nfunction broadcastToConnectedAgents(swarm, fromAgent, message) {\n  const connections = swarm.connections[fromAgent] || [];\n  const broadcasts = [];\n  \n  connections.forEach(agent => {\n    broadcasts.push({\n      to: agent,\n      delivered: true,\n      timestamp: new Date().toISOString()\n    });\n  });\n  \n  return {\n    type: 'broadcast',\n    recipients: connections,\n    deliveryStatus: broadcasts\n  };\n}\n\nasync function simulateAgentResponse(agentId, message, agentData) {\n  // Simulate processing delay\n  await new Promise(resolve => setTimeout(resolve, Math.random() * 1000 + 500));\n  \n  // Generate response based on agent type and message\n  const responses = {\n    dataAnalyst: {\n      query: 'Analysis complete. Patterns identified in dataset.',\n      coordination: 'Ready to process data. Awaiting input.',\n    },\n    securityExpert: {\n      query: 'Security scan complete. No vulnerabilities detected.',\n      coordination: 'Security protocols activated. Monitoring enabled.',\n    },\n    devOpsEngineer: {\n      query: 'Infrastructure status: All systems operational.',\n      coordination: 'Deployment pipeline ready. Awaiting triggers.',\n    },\n    researchScientist: {\n      query: 'Research findings compiled. New insights available.',\n      coordination: 'Experiment design complete. Ready for execution.',\n    },\n    productManager: {\n      query: 'Feature prioritization complete. Roadmap updated.',\n      coordination: 'Coordination acknowledged. Resources allocated.',\n    }\n  };\n  \n  return {\n    from: agentId,\n    type: 'response',\n    content: responses[agentId]?.[message.type] || 'Message received and processed.',\n    timestamp: new Date().toISOString(),\n    processingTime: `${Math.random() * 1000 + 500}ms`\n  };\n}\n\nfunction calculateSwarmEfficiency(swarm) {\n  const successRate = swarm.metrics.totalTasks > 0 ?\n    (swarm.metrics.completedTasks / swarm.metrics.totalTasks) * 100 : 100;\n    \n  const utilizationRate = parseFloat(calculateUtilizationRate(swarm.agents));\n  \n  const agentEfficiencies = Object.values(swarm.agents)\n    .map(a => parseFloat(calculateAgentEfficiency(a)))\n    .reduce((a, b) => a + b, 0) / Object.keys(swarm.agents).length;\n    \n  return `${((successRate + utilizationRate + agentEfficiencies) / 3).toFixed(2)}%`;\n}\n\nfunction generateTaskInsights(results) {\n  const insights = [];\n  \n  // Analyze result patterns\n  const successCount = results.filter(r => r.success).length;\n  const failureCount = results.filter(r => !r.success).length;\n  \n  if (failureCount > 0) {\n    const failedAgents = [...new Set(results.filter(r => !r.success).map(r => r.agentId))];\n    insights.push(`Failures detected in agents: ${failedAgents.join(', ')}`);\n  }\n  \n  if (successCount === results.length) {\n    insights.push('All subtasks completed successfully - optimal performance');\n  }\n  \n  // Agent performance patterns\n  const agentPerformance = {};\n  results.forEach(r => {\n    agentPerformance[r.agentId] = agentPerformance[r.agentId] || { success: 0, total: 0 };\n    agentPerformance[r.agentId].total++;\n    if (r.success) agentPerformance[r.agentId].success++;\n  });\n  \n  Object.entries(agentPerformance).forEach(([agent, perf]) => {\n    const rate = (perf.success / perf.total) * 100;\n    if (rate < 80) {\n      insights.push(`${agent} performance below threshold: ${rate.toFixed(2)}%`);\n    }\n  });\n  \n  return insights;\n}\n\n// Export swarm tools\nexport const swarmTools = {\n  initializeFiveAgentSwarm,\n  orchestrateSwarmTask,\n  monitorSwarmPerformance,\n  facilitateAgentCommunication,\n  completeSwarmTask\n};","/**\n * Swarm Monitoring Tools\n * Real-time monitoring and analytics tools for concurrent swarm operations\n */\n\nimport { createTool } from '@mastra/core';\nimport { z } from 'zod';\nimport { SwarmMonitor } from './swarm-monitor.js';\nimport { ConcurrentSwarmDemo } from './concurrent-swarm-demo.js';\n\n// Global monitor instance\nlet globalMonitor = null;\nlet activeSwarmDemo = null;\n\n// Initialize swarm monitor\nexport const initializeSwarmMonitor = createTool({\n  id: 'initialize-swarm-monitor',\n  name: 'Initialize Swarm Monitor',\n  description: 'Initialize real-time monitoring system for concurrent swarms',\n  inputSchema: z.object({\n    enableDashboard: z.boolean().default(true),\n    alertThresholds: z.object({\n      efficiency: z.number().default(70),\n      taskBacklog: z.number().default(10),\n      errorRate: z.number().default(5)\n    }).optional()\n  }),\n  execute: async ({ context }) => {\n    const { enableDashboard, alertThresholds } = context;\n    \n    // Create monitor instance\n    globalMonitor = new SwarmMonitor();\n    \n    // Apply custom thresholds if provided\n    if (alertThresholds) {\n      globalMonitor.thresholds.efficiency.warning = alertThresholds.efficiency;\n      globalMonitor.thresholds.taskBacklog.warning = alertThresholds.taskBacklog;\n      globalMonitor.thresholds.errorRate.warning = alertThresholds.errorRate;\n    }\n    \n    // Initialize monitor\n    await globalMonitor.initialize();\n    \n    return {\n      success: true,\n      monitorId: `monitor_${Date.now()}`,\n      dashboardEnabled: enableDashboard,\n      thresholds: globalMonitor.thresholds,\n      message: 'Swarm monitor initialized successfully'\n    };\n  }\n});\n\n// Launch concurrent swarm demo\nexport const launchConcurrentSwarmDemo = createTool({\n  id: 'launch-concurrent-swarm-demo',\n  name: 'Launch Concurrent Swarm Demo',\n  description: 'Launch a demonstration of multiple concurrent swarms with different missions',\n  inputSchema: z.object({\n    autoMonitor: z.boolean().default(true)\n  }),\n  execute: async ({ context }) => {\n    const { autoMonitor } = context;\n    \n    // Create new swarm demo instance\n    activeSwarmDemo = new ConcurrentSwarmDemo();\n    \n    // Use the demo's monitor if auto-monitoring is enabled\n    if (autoMonitor && !globalMonitor) {\n      globalMonitor = activeSwarmDemo.monitor;\n    }\n    \n    // Launch the demo\n    console.log('üöÄ Launching concurrent swarm demonstration...');\n    \n    // Run in background\n    activeSwarmDemo.launch().catch(error => {\n      console.error('Swarm demo error:', error);\n    });\n    \n    // Wait a moment for initialization\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    return {\n      success: true,\n      demoId: `demo_${Date.now()}`,\n      activeSwarms: activeSwarmDemo.swarms.size,\n      totalAgents: activeSwarmDemo.metrics.totalAgents,\n      message: 'Concurrent swarm demonstration launched successfully'\n    };\n  }\n});\n\n// Get swarm performance metrics\nexport const getSwarmPerformanceMetrics = createTool({\n  id: 'get-swarm-performance-metrics',\n  name: 'Get Swarm Performance Metrics',\n  description: 'Retrieve real-time performance metrics for all active swarms',\n  inputSchema: z.object({\n    includeHistory: z.boolean().default(false),\n    swarmId: z.string().optional()\n  }),\n  execute: async ({ context }) => {\n    const { includeHistory, swarmId } = context;\n    \n    if (!globalMonitor || !activeSwarmDemo) {\n      return {\n        success: false,\n        error: 'No active swarm monitoring session',\n        metrics: null\n      };\n    }\n    \n    // Collect current metrics\n    globalMonitor.collectMetrics(activeSwarmDemo.swarms, activeSwarmDemo.metrics);\n    \n    const performanceMetrics = globalMonitor.metrics.get('swarm-performance');\n    const currentMetrics = {};\n    \n    // Filter by swarmId if provided\n    if (swarmId) {\n      const swarmMetrics = performanceMetrics.current.get(swarmId);\n      if (swarmMetrics) {\n        currentMetrics[swarmId] = swarmMetrics;\n      }\n    } else {\n      // Get all swarm metrics\n      for (const [id, metrics] of performanceMetrics.current) {\n        currentMetrics[id] = metrics;\n      }\n    }\n    \n    const response = {\n      success: true,\n      timestamp: Date.now(),\n      currentMetrics,\n      aggregates: performanceMetrics.aggregates,\n      globalMetrics: activeSwarmDemo.metrics\n    };\n    \n    if (includeHistory) {\n      response.history = globalMonitor.performanceHistory.slice(-10);\n    }\n    \n    return response;\n  }\n});\n\n// Analyze swarm patterns\nexport const analyzeSwarmPatterns = createTool({\n  id: 'analyze-swarm-patterns',\n  name: 'Analyze Swarm Patterns',\n  description: 'Analyze behavioral patterns and performance trends across swarms',\n  inputSchema: z.object({\n    analysisType: z.enum(['efficiency', 'collaboration', 'bottlenecks', 'comprehensive']).default('comprehensive'),\n    timeframe: z.number().default(60000) // Default to last minute\n  }),\n  execute: async ({ context }) => {\n    const { analysisType, timeframe } = context;\n    \n    if (!globalMonitor || !activeSwarmDemo) {\n      return {\n        success: false,\n        error: 'No active swarm monitoring session',\n        analysis: null\n      };\n    }\n    \n    // Get recent history within timeframe\n    const currentTime = Date.now();\n    const recentHistory = globalMonitor.performanceHistory.filter(\n      snapshot => (currentTime - snapshot.timestamp) <= timeframe\n    );\n    \n    const analysis = {\n      analysisType,\n      timeframe,\n      dataPoints: recentHistory.length,\n      patterns: []\n    };\n    \n    // Analyze based on type\n    switch (analysisType) {\n      case 'efficiency':\n        analysis.patterns = analyzeEfficiencyPatterns(recentHistory);\n        break;\n      case 'collaboration':\n        analysis.patterns = analyzeCollaborationPatterns(activeSwarmDemo.swarms);\n        break;\n      case 'bottlenecks':\n        analysis.patterns = analyzeBottlenecks(recentHistory, activeSwarmDemo.swarms);\n        break;\n      case 'comprehensive':\n        analysis.patterns = [\n          ...analyzeEfficiencyPatterns(recentHistory),\n          ...analyzeCollaborationPatterns(activeSwarmDemo.swarms),\n          ...analyzeBottlenecks(recentHistory, activeSwarmDemo.swarms)\n        ];\n        break;\n    }\n    \n    // Add recommendations\n    analysis.recommendations = generatePatternRecommendations(analysis.patterns);\n    \n    return {\n      success: true,\n      analysis,\n      trends: globalMonitor.analyzeTrends()\n    };\n  }\n});\n\n// Get swarm alerts\nexport const getSwarmAlerts = createTool({\n  id: 'get-swarm-alerts',\n  name: 'Get Swarm Alerts',\n  description: 'Retrieve active alerts and warnings from swarm monitoring',\n  inputSchema: z.object({\n    severity: z.enum(['all', 'warning', 'critical']).default('all'),\n    limit: z.number().default(10)\n  }),\n  execute: async ({ context }) => {\n    const { severity, limit } = context;\n    \n    if (!globalMonitor) {\n      return {\n        success: false,\n        error: 'No active swarm monitoring session',\n        alerts: []\n      };\n    }\n    \n    let alerts = globalMonitor.alerts;\n    \n    // Filter by severity\n    if (severity !== 'all') {\n      alerts = alerts.filter(alert => alert.severity === severity);\n    }\n    \n    // Sort by timestamp (most recent first)\n    alerts.sort((a, b) => b.timestamp - a.timestamp);\n    \n    // Apply limit\n    alerts = alerts.slice(0, limit);\n    \n    return {\n      success: true,\n      totalAlerts: globalMonitor.alerts.length,\n      filteredCount: alerts.length,\n      alerts,\n      alertSummary: {\n        critical: globalMonitor.alerts.filter(a => a.severity === 'critical').length,\n        warning: globalMonitor.alerts.filter(a => a.severity === 'warning').length\n      }\n    };\n  }\n});\n\n// Generate swarm performance report\nexport const generateSwarmPerformanceReport = createTool({\n  id: 'generate-swarm-performance-report',\n  name: 'Generate Swarm Performance Report',\n  description: 'Generate comprehensive performance report for concurrent swarms',\n  inputSchema: z.object({\n    format: z.enum(['summary', 'detailed', 'executive']).default('summary'),\n    includeRecommendations: z.boolean().default(true)\n  }),\n  execute: async ({ context }) => {\n    const { format, includeRecommendations } = context;\n    \n    if (!globalMonitor || !activeSwarmDemo) {\n      return {\n        success: false,\n        error: 'No active swarm monitoring session',\n        report: null\n      };\n    }\n    \n    // Collect final insights\n    const insights = await activeSwarmDemo.coordinator.collectGlobalInsights(activeSwarmDemo.swarms);\n    \n    // Generate report\n    const fullReport = globalMonitor.generateFinalReport(\n      activeSwarmDemo.swarms,\n      activeSwarmDemo.metrics,\n      insights\n    );\n    \n    let report = {};\n    \n    switch (format) {\n      case 'summary':\n        report = {\n          summary: fullReport.summary,\n          overallEfficiency: calculateOverallEfficiency(fullReport.swarmPerformance),\n          keyMetrics: {\n            tasksCompleted: fullReport.summary.totalTasksCompleted,\n            swarmSyncs: fullReport.summary.swarmSynchronizations,\n            errorsRecovered: fullReport.summary.errorsRecovered\n          }\n        };\n        break;\n        \n      case 'detailed':\n        report = fullReport;\n        break;\n        \n      case 'executive':\n        report = {\n          executiveSummary: generateExecutiveSummary(fullReport),\n          criticalAlerts: fullReport.alerts.filter(a => a.severity === 'critical').length,\n          performance: {\n            overall: calculateOverallEfficiency(fullReport.swarmPerformance),\n            bySwarm: fullReport.swarmPerformance.map(s => ({\n              name: s.name,\n              efficiency: s.efficiency\n            }))\n          }\n        };\n        break;\n    }\n    \n    if (includeRecommendations) {\n      report.recommendations = fullReport.recommendations;\n    }\n    \n    return {\n      success: true,\n      format,\n      generatedAt: new Date().toISOString(),\n      report\n    };\n  }\n});\n\n// Helper functions\nfunction analyzeEfficiencyPatterns(history) {\n  const patterns = [];\n  \n  if (history.length < 2) return patterns;\n  \n  // Check for declining efficiency\n  const efficiencies = history.map(h => {\n    const swarmEffs = Array.from(h.swarms.values()).map(s => s.efficiency);\n    return swarmEffs.reduce((a, b) => a + b, 0) / swarmEffs.length;\n  });\n  \n  const trend = calculateTrend(efficiencies);\n  if (trend < -0.1) {\n    patterns.push({\n      type: 'declining_efficiency',\n      severity: 'warning',\n      description: 'Overall swarm efficiency is declining',\n      value: `${(trend * 100).toFixed(2)}% per minute`\n    });\n  }\n  \n  return patterns;\n}\n\nfunction analyzeCollaborationPatterns(swarms) {\n  const patterns = [];\n  \n  // Analyze message exchange patterns\n  let totalMessages = 0;\n  swarms.forEach(swarm => {\n    totalMessages += swarm.metrics.tasksCompleted * 2; // Estimated messages per task\n  });\n  \n  if (totalMessages > 1000) {\n    patterns.push({\n      type: 'high_communication',\n      severity: 'info',\n      description: 'High inter-swarm communication detected',\n      value: `${totalMessages} messages exchanged`\n    });\n  }\n  \n  return patterns;\n}\n\nfunction analyzeBottlenecks(history, swarms) {\n  const patterns = [];\n  \n  // Check for task backlog\n  swarms.forEach(swarm => {\n    const backlog = swarm.metrics.tasksAssigned - swarm.metrics.tasksCompleted;\n    if (backlog > 10) {\n      patterns.push({\n        type: 'task_backlog',\n        severity: 'warning',\n        description: `High task backlog in ${swarm.mission.name}`,\n        value: `${backlog} pending tasks`\n      });\n    }\n  });\n  \n  return patterns;\n}\n\nfunction generatePatternRecommendations(patterns) {\n  const recommendations = [];\n  \n  patterns.forEach(pattern => {\n    switch (pattern.type) {\n      case 'declining_efficiency':\n        recommendations.push('Consider scaling agent resources or optimizing task distribution');\n        break;\n      case 'task_backlog':\n        recommendations.push('Increase agent capacity or redistribute tasks to less loaded swarms');\n        break;\n      case 'high_communication':\n        recommendations.push('Optimize communication protocols to reduce message overhead');\n        break;\n    }\n  });\n  \n  return [...new Set(recommendations)]; // Remove duplicates\n}\n\nfunction calculateTrend(values) {\n  if (values.length < 2) return 0;\n  \n  const n = values.length;\n  const sumX = (n * (n - 1)) / 2;\n  const sumY = values.reduce((a, b) => a + b, 0);\n  const sumXY = values.reduce((sum, y, x) => sum + x * y, 0);\n  const sumX2 = (n * (n - 1) * (2 * n - 1)) / 6;\n  \n  return (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n}\n\nfunction calculateOverallEfficiency(swarmPerformance) {\n  if (!swarmPerformance || swarmPerformance.length === 0) return 0;\n  \n  const totalEfficiency = swarmPerformance.reduce((sum, s) => sum + s.efficiency, 0);\n  return (totalEfficiency / swarmPerformance.length).toFixed(2);\n}\n\nfunction generateExecutiveSummary(report) {\n  return `Concurrent swarm operations completed with ${report.swarmPerformance.length} active swarms. ` +\n         `Total of ${report.summary.totalAgents} agents completed ${report.summary.totalTasksCompleted} tasks. ` +\n         `System recovered from ${report.summary.errorsRecovered} errors with ${report.alerts.length} alerts generated.`;\n}\n\n// Export swarm monitoring tools\nexport const swarmMonitoringTools = {\n  initializeSwarmMonitor,\n  launchConcurrentSwarmDemo,\n  getSwarmPerformanceMetrics,\n  analyzeSwarmPatterns,\n  getSwarmAlerts,\n  generateSwarmPerformanceReport\n};","import { Mastra, Agent } from '@mastra/core';\nimport { createTool } from '@mastra/core';\nimport { z } from 'zod';\nimport { claudeFlowAgent } from './agents/claude-flow-agent.js';\nimport { hiveMindAgent } from './agents/hive-mind-agent.js';\nimport { ruvSwarmAgent } from './agents/ruv-swarm-agent.js';\nimport { swarmAgents } from './agents/swarm-agents.js';\nimport { coreWorkflows } from './workflows/core-workflows.js';\nimport { advancedWorkflows } from './workflows/advanced-workflows.js';\nimport { networkWorkflows } from './workflows/network-workflows.js';\nimport { toolWorkflows } from './workflows/tool-workflows.js';\nimport { mcpWorkflows } from './workflows/mcp-workflows.js';\nimport { swarmWorkflows } from './workflows/swarm-demo-workflow.js';\nimport { complexWorkflows } from './workflows/complex-workflows-index.js';\nimport concurrentSwarmWorkflow from './workflows/concurrent-swarm-workflow.js';\nimport { agenticFlowTheme, brandConfig } from './theme.js';\nimport { mcpConfig, checkMcpServers } from './mcp-setup.js';\nimport { mcpServers } from './mcp-servers.js';\nimport { agentNetworks, networkManagement } from './networks/index.js';\nimport { networkManagementTools } from './network-simulator.js';\nimport { allTools as comprehensiveTools } from './tools/index.js';\nimport { swarmTools } from './swarm/swarm-implementation.js';\nimport { swarmMonitoringTools } from './swarm/swarm-monitoring-tools.js';\n\n// Create properly formatted tools for Mastra using createTool\nconst claudeFlowCoordinateTool = createTool({\n  id: 'claudeFlowCoordinate',\n  description: 'Coordinate multiple Claude agents for complex reasoning tasks',\n  inputSchema: z.object({\n    task: z.string().describe('Task for Claude agents to coordinate on'),\n    agentCount: z.number().min(1).max(10).default(3),\n    mode: z.enum(['parallel', 'sequential', 'hierarchical']).default('parallel')\n  }),\n  execute: async ({ context }) => {\n    const { task, agentCount = 3, mode = 'parallel' } = context;\n    const coordinationId = `claude-${Date.now()}`;\n    console.log('üß† Claude Flow coordination started:', coordinationId);\n    return {\n      success: true,\n      coordinationId,\n      message: `Claude Flow coordination started with ${agentCount} agents in ${mode} mode`\n    };\n  }\n});\n\nconst hiveMindCollectiveTool = createTool({\n  id: 'hiveMindCollective',\n  description: 'Create collective intelligence using distributed hive mind reasoning',\n  inputSchema: z.object({\n    problem: z.string().describe('Problem for collective intelligence analysis'),\n    nodes: z.number().min(3).max(50).default(10)\n  }),\n  execute: async ({ context }) => {\n    const { problem, nodes = 10 } = context;\n    const sessionId = `hive-${Date.now()}`;\n    console.log('üêù Hive Mind collective processing started:', sessionId);\n    return {\n      success: true,\n      sessionId,\n      message: `Hive Mind collective started with ${nodes} nodes`\n    };\n  }\n});\n\nconst ruvSwarmDeployTool = createTool({\n  id: 'ruvSwarmDeploy',\n  description: 'Deploy and manage distributed agent swarms',\n  inputSchema: z.object({\n    mission: z.string().describe('Mission for the swarm to accomplish'),\n    swarmSize: z.number().min(5).max(100).default(20)\n  }),\n  execute: async ({ context }) => {\n    const { mission, swarmSize = 20 } = context;\n    const deploymentId = `swarm-${Date.now()}`;\n    console.log('üî• RUV Swarm deployment started:', deploymentId);\n    return {\n      success: true,\n      deploymentId,\n      message: `RUV Swarm deployed with ${swarmSize} agents`\n    };\n  }\n});\n\nconst createTeamTool = createTool({\n  id: 'createTeam',\n  description: 'Create a new team of agents for a specific goal',\n  inputSchema: z.object({\n    teamName: z.string(),\n    goal: z.string(),\n    agentTypes: z.array(z.enum(['coordinator', 'executor', 'researcher', 'architect']))\n  }),\n  execute: async ({ context }) => {\n    const { teamName, goal, agentTypes } = context;\n    const teamId = `team-${Date.now()}`;\n    const team = {\n      teamId,\n      teamName,\n      goal,\n      agentTypes,\n      status: 'active',\n      created: new Date().toISOString(),\n      members: agentTypes.map((type, index) => ({\n        id: `${type}-${teamId}-${index}`,\n        type,\n        role: type,\n        status: 'ready'\n      }))\n    };\n    console.log(`üöÄ Team created: ${teamName} (${teamId})`);\n    return {\n      success: true,\n      team,\n      message: `Team \"${teamName}\" created successfully`\n    };\n  }\n});\n\nconst executeWorkflowTool = createTool({\n  id: 'executeWorkflow',\n  description: 'Execute a workflow with the agentic-flow system',\n  inputSchema: z.object({\n    workflowName: z.enum(['software-development', 'problem-solving']),\n    input: z.record(z.any())\n  }),\n  execute: async ({ context }) => {\n    const { workflowName, input } = context;\n    const executionId = `exec-${Date.now()}`;\n    const execution = {\n      executionId,\n      workflowName,\n      input,\n      status: 'running',\n      startTime: new Date().toISOString()\n    };\n    console.log(`üîÑ Workflow started: ${workflowName} (${executionId})`);\n    return {\n      success: true,\n      execution,\n      message: `Workflow \"${workflowName}\" started successfully`\n    };\n  }\n});\n\nconst monitorSystemTool = createTool({\n  id: 'monitorSystem',\n  description: 'Monitor the health and status of the agentic-flow system',\n  inputSchema: z.object({\n    includeMetrics: z.boolean().default(false).optional()\n  }),\n  execute: async ({ context }) => {\n    const { includeMetrics = false } = context || {};\n    const systemStatus = {\n      timestamp: new Date().toISOString(),\n      status: 'healthy',\n      uptime: Math.floor(process.uptime()),\n      agents: {\n        total: 7,\n        active: 7,\n        types: ['coordinator', 'executor', 'researcher', 'architect',\n                'claude-flow-coordinator', 'hive-mind-collective', 'ruv-swarm-coordinator']\n      },\n      workflows: {\n        registered: 7,\n        available: Object.keys(agenticFlowWorkflows)\n      }\n    };\n    console.log('üè• System health check completed');\n    return systemStatus;\n  }\n});\n\n// Create Mastra instance with proper configuration\nconst mastra = new Mastra({\n  name: 'agentic-flow',\n  version: '1.0.0',\n  description: 'Agentic Flow - AI Orchestration Platform with Mastra Integration',\n  \n  // Configure server\n  server: {\n    port: process.env.MASTRA_PORT ? parseInt(process.env.MASTRA_PORT) : 4111,\n    baseUrl: process.env.MASTRA_BASE_URL || 'http://localhost:4111',\n  },\n  \n  // Disable telemetry and database to avoid issues\n  telemetry: {\n    enabled: false,\n  },\n  \n  logs: {\n    enabled: true,\n    level: 'info',\n  },\n  \n  // Agentic Flow Network Agents\n  agents: {\n    // Core agents\n    coordinator: new Agent({\n      name: 'coordinator',\n      description: 'Coordinates teams and manages complex workflows',\n      model: {\n        provider: 'anthropic',\n        name: 'claude-3-sonnet-20240229',\n      },\n      instructions: `You are a coordinator agent responsible for team formation, goal decomposition, task delegation, cross-team coordination, and strategic decision making.`,\n      tools: {\n        createTeam: createTeamTool,\n        executeWorkflow: executeWorkflowTool,\n        monitorSystem: monitorSystemTool\n      }\n    }),\n    \n    executor: new Agent({\n      name: 'executor',\n      description: 'Executes tasks and implements solutions',\n      model: {\n        provider: 'anthropic',\n        name: 'claude-3-sonnet-20240229',\n      },\n      instructions: `You are an executor agent responsible for task implementation, solution development, progress reporting, quality assurance, and problem resolution.`,\n    }),\n    \n    researcher: new Agent({\n      name: 'researcher',\n      description: 'Gathers information and analyzes data',\n      model: {\n        provider: 'anthropic',\n        name: 'claude-3-sonnet-20240229',\n      },\n      instructions: `You are a research agent specialized in information gathering, data analysis, technology research, market analysis, and trend identification.`,\n    }),\n    \n    architect: new Agent({\n      name: 'architect',\n      description: 'Designs systems and technical architecture',\n      model: {\n        provider: 'anthropic',\n        name: 'claude-3-sonnet-20240229',\n      },\n      instructions: `You are an architecture agent responsible for system design, technical specification, scalability planning, technology selection, and integration design.`,\n    }),\n    \n    // Network-specific branded agents with tools\n    'claude-flow-coordinator': new Agent({\n      name: 'claude-flow-coordinator',\n      description: claudeFlowAgent.description,\n      model: claudeFlowAgent.model,\n      instructions: claudeFlowAgent.instructions,\n      tools: {\n        claudeFlowCoordinate: claudeFlowCoordinateTool\n      }\n    }),\n    'hive-mind-collective': new Agent({\n      name: 'hive-mind-collective',\n      description: hiveMindAgent.description,\n      model: hiveMindAgent.model,\n      instructions: hiveMindAgent.instructions,\n      tools: {\n        hiveMindCollective: hiveMindCollectiveTool\n      }\n    }),\n    'ruv-swarm-coordinator': new Agent({\n      name: 'ruv-swarm-coordinator',\n      description: ruvSwarmAgent.description,\n      model: ruvSwarmAgent.model,\n      instructions: ruvSwarmAgent.instructions,\n      tools: {\n        ruvSwarmDeploy: ruvSwarmDeployTool\n      }\n    }),\n    \n    // MCP-connected agents\n    ...mcpConfig.agents,\n    \n    // 5-Agent Swarm Specialists\n    dataAnalyst: swarmAgents.dataAnalystAgent,\n    securityExpert: swarmAgents.securityExpertAgent,\n    devOpsEngineer: swarmAgents.devOpsEngineerAgent,\n    researchScientist: swarmAgents.researchScientistAgent,\n    productManager: swarmAgents.productManagerAgent,\n    qaEngineer: swarmAgents.qaEngineerAgent\n  },\n  \n  // Agentic Flow Tools - properly formatted\n  tools: {\n    // Core network tools\n    claudeFlowCoordinate: claudeFlowCoordinateTool,\n    hiveMindCollective: hiveMindCollectiveTool,\n    ruvSwarmDeploy: ruvSwarmDeployTool,\n    createTeam: createTeamTool,\n    executeWorkflow: executeWorkflowTool,\n    monitorSystem: monitorSystemTool,\n    \n    // MCP-integrated tools\n    ...mcpConfig.tools,\n    \n    // Network management tools\n    ...networkManagementTools,\n    \n    // Comprehensive Claude Flow & Agentic Flow tools (50 tools)\n    ...comprehensiveTools,\n    \n    // 5-Agent Swarm Management Tools\n    ...swarmTools,\n    \n    // Concurrent Swarm Monitoring Tools\n    ...swarmMonitoringTools\n  },\n  \n  // Agentic Flow Advanced Workflows - all using createWorkflow API\n  workflows: {\n    // Core workflows\n    'software-development': coreWorkflows.softwareDevelopmentWorkflow,\n    'problem-solving': coreWorkflows.problemSolvingWorkflow,\n    \n    // Advanced workflows\n    'research-analysis': advancedWorkflows.researchAnalysisWorkflow,\n    'adaptive-problem-solving': advancedWorkflows.adaptiveProblemSolvingWorkflow,\n    'enterprise-integration': advancedWorkflows.enterpriseIntegrationWorkflow,\n    'ai-model-training': advancedWorkflows.aiModelTrainingWorkflow,\n    'crisis-response': advancedWorkflows.crisisResponseWorkflow,\n    \n    // Network-specific workflows\n    'claude-flow-reasoning': networkWorkflows.claudeFlowReasoningWorkflow,\n    'hive-mind-consensus': networkWorkflows.hiveMindConsensusWorkflow,\n    'ruv-swarm-scaling': networkWorkflows.ruvSwarmScalingWorkflow,\n    'multi-network-orchestration': networkWorkflows.multiNetworkOrchestrationWorkflow,\n    \n    // Tool-integrated workflows\n    'team-formation': toolWorkflows.teamFormationWorkflow,\n    'system-optimization': toolWorkflows.systemOptimizationWorkflow,\n    'task-routing': toolWorkflows.taskRoutingWorkflow,\n    \n    // MCP-integrated workflows\n    'mcp-swarm-orchestration': mcpWorkflows.mcpSwarmOrchestrationWorkflow,\n    'mcp-learning-adaptation': mcpWorkflows.mcpLearningWorkflow,\n    'mcp-multi-server-coordination': mcpWorkflows.mcpMultiServerWorkflow,\n    \n    // 5-Agent Swarm Workflows\n    'five-agent-swarm-demo': swarmWorkflows.swarmDemoWorkflow,\n    'multi-swarm-collaboration': swarmWorkflows.multiSwarmWorkflow,\n    \n    // Concurrent Swarm Orchestration Workflow\n    'concurrent-swarm-orchestration': concurrentSwarmWorkflow,\n    \n    // Complex 6-Agent Workflows\n    'startup-launch': complexWorkflows.startupLaunch,\n    'incident-response': complexWorkflows.incidentResponse,\n    'ai-product-development': complexWorkflows.aiProductDevelopment,\n    'ai-product-feedback': complexWorkflows.aiProductFeedbackLoop,\n    'enterprise-migration': complexWorkflows.enterpriseMigration,\n    'product-pivot': complexWorkflows.productPivot,\n    'security-breach-response': complexWorkflows.securityBreachResponse\n  },\n  \n  // Agentic Flow UI Theme\n  ui: {\n    theme: agenticFlowTheme,\n    branding: brandConfig\n  }\n  \n  // Agent Networks Configuration - temporarily disabled pending proper API\n  // TODO: Investigate proper network API for Mastra\n  // networks: agentNetworks\n  \n  // MCP Servers Configuration - temporarily commented out to debug\n  // mcpServers: mcpServers\n});\n\n// Network status logging\nconst logNetworkStatus = () => {\n  console.log('\\nüöÄ Agentic Flow Mastra Integration Loaded!');\n  console.log('üìä Configuration:');\n  console.log('   ‚Ä¢ 4 Agent Networks');\n  console.log('     - Claude Flow Network: Advanced reasoning & coordination (hierarchical)');\n  console.log('     - Hive Mind Network: Collective intelligence & consensus (mesh)');\n  console.log('     - RUV Swarm Network: Distributed scaling & fault tolerance (dynamic-mesh)');\n  console.log('     - Multi-Network Orchestrator: Cross-network coordination (federated-mesh)');\n  console.log('   ‚Ä¢ 15 AI Agents (4 Core + 3 Network + 2 MCP + 6 Swarm Specialists)');\n  console.log('     - Core: Coordinator, Executor, Researcher, Architect');\n  console.log('     - Networks: Claude Flow üß†, Hive Mind üêù, RUV Swarm üî•');\n  console.log('     - MCP: Claude Flow MCP Agent, Agentic Flow MCP Agent');\n  console.log('     - 6-Agent Swarm: Data Analyst üìä, Security Expert üîí, DevOps Engineer üîß, Research Scientist üî¨, Product Manager üìã, QA Engineer üß™');\n  console.log('   ‚Ä¢ 77 Integration Tools (3 Network + 3 Core + 7 MCP + 3 Network Management + 50 Comprehensive + 5 Swarm + 6 Monitoring)');\n  console.log('     - Network: Claude Flow Coordinate, Hive Mind Collective, RUV Swarm Deploy');\n  console.log('     - Core: Create Team, Execute Workflow, Monitor System');\n  console.log('     - MCP: Swarm Init, Agent Spawn, Task Orchestrate, Team Create, Workflow Execute, Learning Capture, Server Status');\n  console.log('     - Network Management: List Networks, Get Network Status, Route to Network');\n  console.log('     - Swarm Orchestration (10): Init, Spawn, Orchestrate, Status, Scale, Destroy, Optimize, Balance, Sync, Metrics');\n  console.log('     - Learning & Memory (10): Store, Retrieve, Search, Capture, Recognize, Graph, Backup, Restore, Context Save/Restore');\n  console.log('     - Performance Monitoring (10): Report, Bottleneck, Metrics, Trends, Health, Errors, Usage, Cost, Quality, Benchmark');\n  console.log('     - AI/ML Integration (10): Train, Predict, Load/Save Models, Inference, Ensemble, Transfer, Explain, Cognitive, Adaptive');\n  console.log('     - Workflow Automation (10): Create, Execute, Schedule, Pipeline, Automation, Triggers, Batch, Parallel, Template, Export');\n  console.log('     - 5-Agent Swarm (5): Initialize Swarm, Orchestrate Task, Monitor Performance, Agent Communication, Complete Task');\n  console.log('     - Concurrent Swarm Monitoring (6): Initialize Monitor, Launch Demo, Get Metrics, Analyze Patterns, Get Alerts, Generate Report');\n  console.log('   ‚Ä¢ 28 Production Workflows');\n  console.log('     - Core: Software Development, Problem Solving');\n  console.log('     - Advanced: Research Analysis, Adaptive Problem Solving, Enterprise Integration, AI Model Training, Crisis Response');\n  console.log('     - Network: Claude Flow Reasoning, Hive Mind Consensus, RUV Swarm Scaling, Multi-Network Orchestration');\n  console.log('     - Tool-Integrated: Team Formation, System Optimization, Task Routing');\n  console.log('     - MCP-Integrated: Swarm Orchestration, Learning Adaptation, Multi-Server Coordination');\n  console.log('     - 5-Agent Swarm: Swarm Demo, Multi-Swarm Collaboration');\n  console.log('     - Concurrent Swarm: Concurrent Swarm Orchestration (Real-time multi-swarm coordination)');\n  console.log('     - Complex 6-Agent: Startup Launch, Incident Response, AI Product Dev, Enterprise Migration, Product Pivot, Security Breach');\n  console.log('   ‚Ä¢ 3 Network Integrations with MCP Protocol');\n  console.log('   ‚Ä¢ 3 MCP Servers Configured');\n  console.log('     - Claude Flow MCP: Port 5001');\n  console.log('     - Agentic Flow MCP: Port 5002');\n  console.log('     - Mastra Docs MCP: Available');\n  console.log(`   ‚Ä¢ Server URL: http://localhost:${process.env.MASTRA_PORT || 4111}`);\n  console.log('   ‚Ä¢ Custom Agentic Flow Branding and Theme Applied\\n');\n  \n  console.log('üåê Network Status:');\n  console.log('   üß† Claude Flow: Advanced reasoning and coordination');\n  console.log('   üêù Hive Mind: Collective intelligence and consensus');\n  console.log('   üî• RUV Swarm: Distributed scaling and fault tolerance');\n  console.log('');\n  \n  console.log('üîå MCP Integration:');\n  console.log('   ‚Ä¢ Claude Flow MCP: swarm_init, agent_spawn, task_orchestrate');\n  console.log('   ‚Ä¢ Agentic Flow MCP: team_create, workflow_execute, learning_capture');\n  console.log('');\n  \n  console.log('üöÄ Concurrent Swarm Capabilities:');\n  console.log('   ‚Ä¢ Infrastructure Optimization Swarm: 6 specialized agents for system performance');\n  console.log('   ‚Ä¢ Development Acceleration Swarm: 6 agents for rapid development cycles');\n  console.log('   ‚Ä¢ Data Analytics Swarm: 6 agents for pattern recognition and insights');\n  console.log('   ‚Ä¢ Real-time monitoring with performance dashboards and alerts');\n  console.log('   ‚Ä¢ Cross-swarm synchronization and coordination protocols');\n  console.log('   ‚Ä¢ Resilience testing with automatic failure recovery');\n  console.log('');\n};\n\nlogNetworkStatus();\n\n// Check MCP server availability\ncheckMcpServers();\n\n// Initialize networks\nsetTimeout(async () => {\n  console.log('\\nüåê Initializing Agent Networks...');\n  \n  // Initialize all networks\n  for (const [name, network] of Object.entries(agentNetworks)) {\n    try {\n      await network.initialize();\n      console.log(`‚úÖ ${name} network initialized`);\n    } catch (error) {\n      console.error(`‚ùå Failed to initialize ${name}:`, error);\n    }\n  }\n  \n  console.log('\\nüîó Mastra playground available with full agentic-flow integration!');\n  console.log('üí° Tools are now properly configured and should appear in the playground');\n  console.log('üåê MCP Support: Ready for Model Context Protocol integration');\n  console.log('üì° MCP Tools: Using simulator mode - real MCP servers can be connected when available');\n  console.log('üï∏Ô∏è Networks: 4 agent networks initialized and ready for task routing');\n}, 2000);\n\n// Export both named and default for Mastra CLI compatibility\nexport { mastra };\nexport default mastra;","// src/utils/filepath.ts\nvar getFilePath = (options) => {\n  let filename = options.filename;\n  const defaultDocument = options.defaultDocument || \"index.html\";\n  if (filename.endsWith(\"/\")) {\n    filename = filename.concat(defaultDocument);\n  } else if (!filename.match(/\\.[a-zA-Z0-9_-]+$/)) {\n    filename = filename.concat(\"/\" + defaultDocument);\n  }\n  const path = getFilePathWithoutDefaultDocument({\n    root: options.root,\n    filename\n  });\n  return path;\n};\nvar getFilePathWithoutDefaultDocument = (options) => {\n  let root = options.root || \"\";\n  let filename = options.filename;\n  if (/(?:^|[\\/\\\\])\\.\\.(?:$|[\\/\\\\])/.test(filename)) {\n    return;\n  }\n  filename = filename.replace(/^\\.?[\\/\\\\]/, \"\");\n  filename = filename.replace(/\\\\/, \"/\");\n  root = root.replace(/\\/$/, \"\");\n  let path = root ? root + \"/\" + filename : filename;\n  path = path.replace(/^\\.?\\//, \"\");\n  if (root[0] !== \"/\" && path[0] === \"/\") {\n    return;\n  }\n  return path;\n};\nexport {\n  getFilePath,\n  getFilePathWithoutDefaultDocument\n};\n","// src/utils/mime.ts\nvar getMimeType = (filename, mimes = baseMimes) => {\n  const regexp = /\\.([a-zA-Z0-9]+?)$/;\n  const match = filename.match(regexp);\n  if (!match) {\n    return;\n  }\n  let mimeType = mimes[match[1]];\n  if (mimeType && mimeType.startsWith(\"text\")) {\n    mimeType += \"; charset=utf-8\";\n  }\n  return mimeType;\n};\nvar getExtension = (mimeType) => {\n  for (const ext in baseMimes) {\n    if (baseMimes[ext] === mimeType) {\n      return ext;\n    }\n  }\n};\nvar _baseMimes = {\n  aac: \"audio/aac\",\n  avi: \"video/x-msvideo\",\n  avif: \"image/avif\",\n  av1: \"video/av1\",\n  bin: \"application/octet-stream\",\n  bmp: \"image/bmp\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  eot: \"application/vnd.ms-fontobject\",\n  epub: \"application/epub+zip\",\n  gif: \"image/gif\",\n  gz: \"application/gzip\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/x-icon\",\n  ics: \"text/calendar\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"text/javascript\",\n  json: \"application/json\",\n  jsonld: \"application/ld+json\",\n  map: \"application/json\",\n  mid: \"audio/x-midi\",\n  midi: \"audio/x-midi\",\n  mjs: \"text/javascript\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mpeg: \"video/mpeg\",\n  oga: \"audio/ogg\",\n  ogv: \"video/ogg\",\n  ogx: \"application/ogg\",\n  opus: \"audio/opus\",\n  otf: \"font/otf\",\n  pdf: \"application/pdf\",\n  png: \"image/png\",\n  rtf: \"application/rtf\",\n  svg: \"image/svg+xml\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  ts: \"video/mp2t\",\n  ttf: \"font/ttf\",\n  txt: \"text/plain\",\n  wasm: \"application/wasm\",\n  webm: \"video/webm\",\n  weba: \"audio/webm\",\n  webmanifest: \"application/manifest+json\",\n  webp: \"image/webp\",\n  woff: \"font/woff\",\n  woff2: \"font/woff2\",\n  xhtml: \"application/xhtml+xml\",\n  xml: \"application/xml\",\n  zip: \"application/zip\",\n  \"3gp\": \"video/3gpp\",\n  \"3g2\": \"video/3gpp2\",\n  gltf: \"model/gltf+json\",\n  glb: \"model/gltf-binary\"\n};\nvar baseMimes = _baseMimes;\nexport {\n  getExtension,\n  getMimeType,\n  baseMimes as mimes\n};\n","// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n","// src/helper/html/index.ts\nimport { escapeToBuffer, raw, resolveCallbackSync, stringBufferToString } from \"../../utils/html.js\";\nvar html = (strings, ...values) => {\n  const buffer = [\"\"];\n  for (let i = 0, len = strings.length - 1; i < len; i++) {\n    buffer[0] += strings[i];\n    const children = Array.isArray(values[i]) ? values[i].flat(Infinity) : [values[i]];\n    for (let i2 = 0, len2 = children.length; i2 < len2; i2++) {\n      const child = children[i2];\n      if (typeof child === \"string\") {\n        escapeToBuffer(child, buffer);\n      } else if (typeof child === \"number\") {\n        ;\n        buffer[0] += child;\n      } else if (typeof child === \"boolean\" || child === null || child === void 0) {\n        continue;\n      } else if (typeof child === \"object\" && child.isEscaped) {\n        if (child.callbacks) {\n          buffer.unshift(\"\", child);\n        } else {\n          const tmp = child.toString();\n          if (tmp instanceof Promise) {\n            buffer.unshift(\"\", tmp);\n          } else {\n            buffer[0] += tmp;\n          }\n        }\n      } else if (child instanceof Promise) {\n        buffer.unshift(\"\", child);\n      } else {\n        escapeToBuffer(child.toString(), buffer);\n      }\n    }\n  }\n  buffer[0] += strings.at(-1);\n  return buffer.length === 1 ? \"callbacks\" in buffer ? raw(resolveCallbackSync(raw(buffer[0], buffer.callbacks))) : raw(buffer[0]) : stringBufferToString(buffer, buffer.callbacks);\n};\nexport {\n  html,\n  raw\n};\n","// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n","// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n","// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n","// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n","// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n","// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    this.header(\"Location\", String(location));\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n","// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n","// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n","// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n","// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n","// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n","// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n","// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n","// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (!part) {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n","// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n","// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n","// src/http-exception.ts\nvar HTTPException = class extends Error {\n  res;\n  status;\n  constructor(status = 500, options) {\n    super(options?.message, { cause: options?.cause });\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      const newResponse = new Response(this.res.body, {\n        status: this.status,\n        headers: this.res.headers\n      });\n      return newResponse;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n","// src/middleware/body-limit/index.ts\nimport { HTTPException } from \"../../http-exception.js\";\nvar ERROR_MESSAGE = \"Payload Too Large\";\nvar BodyLimitError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"BodyLimitError\";\n  }\n};\nvar bodyLimit = (options) => {\n  const onError = options.onError || (() => {\n    const res = new Response(ERROR_MESSAGE, {\n      status: 413\n    });\n    throw new HTTPException(413, { res });\n  });\n  const maxSize = options.maxSize;\n  return async function bodyLimit2(c, next) {\n    if (!c.req.raw.body) {\n      return next();\n    }\n    if (c.req.raw.headers.has(\"content-length\")) {\n      const contentLength = parseInt(c.req.raw.headers.get(\"content-length\") || \"0\", 10);\n      return contentLength > maxSize ? onError(c) : next();\n    }\n    let size = 0;\n    const rawReader = c.req.raw.body.getReader();\n    const reader = new ReadableStream({\n      async start(controller) {\n        try {\n          for (; ; ) {\n            const { done, value } = await rawReader.read();\n            if (done) {\n              break;\n            }\n            size += value.length;\n            if (size > maxSize) {\n              controller.error(new BodyLimitError(ERROR_MESSAGE));\n              break;\n            }\n            controller.enqueue(value);\n          }\n        } finally {\n          controller.close();\n        }\n      }\n    });\n    const requestInit = { body: reader, duplex: \"half\" };\n    c.req.raw = new Request(c.req.raw, requestInit);\n    await next();\n    if (c.error instanceof BodyLimitError) {\n      c.res = await onError(c);\n    }\n  };\n};\nexport {\n  bodyLimit\n};\n","// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n","// src/utils/color.ts\nfunction getColorEnabled() {\n  const { process, Deno } = globalThis;\n  const isNoColor = typeof Deno?.noColor === \"boolean\" ? Deno.noColor : process !== void 0 ? \"NO_COLOR\" in process?.env : false;\n  return !isNoColor;\n}\nasync function getColorEnabledAsync() {\n  const { navigator } = globalThis;\n  const cfWorkers = \"cloudflare:workers\";\n  const isNoColor = navigator !== void 0 && navigator.userAgent === \"Cloudflare-Workers\" ? await (async () => {\n    try {\n      return \"NO_COLOR\" in ((await import(cfWorkers)).env ?? {});\n    } catch {\n      return false;\n    }\n  })() : !getColorEnabled();\n  return !isNoColor;\n}\nexport {\n  getColorEnabled,\n  getColorEnabledAsync\n};\n","// src/middleware/logger/index.ts\nimport { getColorEnabledAsync } from \"../../utils/color.js\";\nvar humanize = (times) => {\n  const [delimiter, separator] = [\",\", \".\"];\n  const orderTimes = times.map((v) => v.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1\" + delimiter));\n  return orderTimes.join(separator);\n};\nvar time = (start) => {\n  const delta = Date.now() - start;\n  return humanize([delta < 1e3 ? delta + \"ms\" : Math.round(delta / 1e3) + \"s\"]);\n};\nvar colorStatus = async (status) => {\n  const colorEnabled = await getColorEnabledAsync();\n  if (colorEnabled) {\n    switch (status / 100 | 0) {\n      case 5:\n        return `\\x1B[31m${status}\\x1B[0m`;\n      case 4:\n        return `\\x1B[33m${status}\\x1B[0m`;\n      case 3:\n        return `\\x1B[36m${status}\\x1B[0m`;\n      case 2:\n        return `\\x1B[32m${status}\\x1B[0m`;\n    }\n  }\n  return `${status}`;\n};\nasync function log(fn, prefix, method, path, status = 0, elapsed) {\n  const out = prefix === \"<--\" /* Incoming */ ? `${prefix} ${method} ${path}` : `${prefix} ${method} ${path} ${await colorStatus(status)} ${elapsed}`;\n  fn(out);\n}\nvar logger = (fn = console.log) => {\n  return async function logger2(c, next) {\n    const { method, url } = c.req;\n    const path = url.slice(url.indexOf(\"/\", 8));\n    await log(fn, \"<--\" /* Incoming */, method, path);\n    const start = Date.now();\n    await next();\n    await log(fn, \"-->\" /* Outgoing */, method, path, c.res.status, time(start));\n  };\n};\nexport {\n  logger\n};\n","// src/middleware/timeout/index.ts\nimport { HTTPException } from \"../../http-exception.js\";\nvar defaultTimeoutException = new HTTPException(504, {\n  message: \"Gateway Timeout\"\n});\nvar timeout = (duration, exception = defaultTimeoutException) => {\n  return async function timeout2(context, next) {\n    let timer;\n    const timeoutPromise = new Promise((_, reject) => {\n      timer = setTimeout(() => {\n        reject(typeof exception === \"function\" ? exception(context) : exception);\n      }, duration);\n    });\n    try {\n      await Promise.race([next(), timeoutPromise]);\n    } finally {\n      if (timer !== void 0) {\n        clearTimeout(timer);\n      }\n    }\n  };\n};\nexport {\n  timeout\n};\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\nexport { __export };\n","import { __export } from './chunk-MLKGABMK.js';\nimport { A2AError } from '@mastra/core/a2a';\nimport { z } from 'zod';\n\n// src/server/handlers/a2a.ts\nvar a2a_exports = {};\n__export(a2a_exports, {\n  getAgentCardByIdHandler: () => getAgentCardByIdHandler,\n  getAgentExecutionHandler: () => getAgentExecutionHandler,\n  handleTaskCancel: () => handleTaskCancel,\n  handleTaskGet: () => handleTaskGet,\n  handleTaskSend: () => handleTaskSend,\n  handleTaskSendSubscribe: () => handleTaskSendSubscribe\n});\nfunction normalizeError(error, reqId, taskId, logger) {\n  let a2aError;\n  if (error instanceof A2AError) {\n    a2aError = error;\n  } else if (error instanceof Error) {\n    a2aError = A2AError.internalError(error.message, { stack: error.stack });\n  } else {\n    a2aError = A2AError.internalError(\"An unknown error occurred.\", error);\n  }\n  if (taskId && !a2aError.taskId) {\n    a2aError.taskId = taskId;\n  }\n  logger?.error(`Error processing request (Task: ${a2aError.taskId ?? \"N/A\"}, ReqID: ${reqId ?? \"N/A\"}):`, a2aError);\n  return createErrorResponse(reqId, a2aError.toJSONRPCError());\n}\nfunction createErrorResponse(id, error) {\n  return {\n    jsonrpc: \"2.0\",\n    id,\n    // Can be null if request ID was invalid/missing\n    error\n  };\n}\nfunction createSuccessResponse(id, result) {\n  if (!id) {\n    throw A2AError.internalError(\"Cannot create success response for null ID.\");\n  }\n  return {\n    jsonrpc: \"2.0\",\n    id,\n    result\n  };\n}\nfunction convertToCoreMessage(message) {\n  return {\n    role: message.role === \"user\" ? \"user\" : \"assistant\",\n    content: message.parts.map((msg) => convertToCoreMessagePart(msg))\n  };\n}\nfunction convertToCoreMessagePart(part) {\n  switch (part.type) {\n    case \"text\":\n      return {\n        type: \"text\",\n        text: part.text\n      };\n    case \"file\":\n      return {\n        type: \"file\",\n        data: new URL(part.file.uri),\n        mimeType: part.file.mimeType\n      };\n    case \"data\":\n      throw new Error(\"Data parts are not supported in core messages\");\n  }\n}\n\n// src/server/a2a/store.ts\nvar InMemoryTaskStore = class {\n  store = /* @__PURE__ */ new Map();\n  activeCancellations = /* @__PURE__ */ new Set();\n  async load({ agentId, taskId }) {\n    const entry = this.store.get(`${agentId}-${taskId}`);\n    if (!entry) {\n      return null;\n    }\n    return { task: { ...entry.task }, history: [...entry.history] };\n  }\n  async save({ agentId, data }) {\n    const key = `${agentId}-${data.task.id}`;\n    if (!data.task.id) {\n      throw new Error(\"Task ID is required\");\n    }\n    this.store.set(key, {\n      task: { ...data.task },\n      history: [...data.history]\n    });\n  }\n};\n\n// src/server/a2a/tasks.ts\nfunction isTaskStatusUpdate(update) {\n  return \"state\" in update && !(\"parts\" in update);\n}\nfunction isArtifactUpdate(update) {\n  return \"parts\" in update;\n}\nfunction applyUpdateToTaskAndHistory(current, update) {\n  let newTask = structuredClone(current.task);\n  let newHistory = structuredClone(current.history);\n  if (isTaskStatusUpdate(update)) {\n    newTask.status = {\n      ...newTask.status,\n      // Keep existing properties if not overwritten\n      ...update,\n      // Apply updates\n      timestamp: (/* @__PURE__ */ new Date()).toISOString()\n    };\n    if (update.message?.role === \"agent\") {\n      newHistory.push(update.message);\n    }\n  } else if (isArtifactUpdate(update)) {\n    if (!newTask.artifacts) {\n      newTask.artifacts = [];\n    } else {\n      newTask.artifacts = [...newTask.artifacts];\n    }\n    const existingIndex = update.index ?? -1;\n    let replaced = false;\n    if (existingIndex >= 0 && existingIndex < newTask.artifacts.length) {\n      const existingArtifact = newTask.artifacts[existingIndex];\n      if (update.append) {\n        const appendedArtifact = JSON.parse(JSON.stringify(existingArtifact));\n        appendedArtifact.parts.push(...update.parts);\n        if (update.metadata) {\n          appendedArtifact.metadata = {\n            ...appendedArtifact.metadata || {},\n            ...update.metadata\n          };\n        }\n        if (update.lastChunk !== void 0) appendedArtifact.lastChunk = update.lastChunk;\n        if (update.description) appendedArtifact.description = update.description;\n        newTask.artifacts[existingIndex] = appendedArtifact;\n        replaced = true;\n      } else {\n        newTask.artifacts[existingIndex] = { ...update };\n        replaced = true;\n      }\n    } else if (update.name) {\n      const namedIndex = newTask.artifacts.findIndex((a) => a.name === update.name);\n      if (namedIndex >= 0) {\n        newTask.artifacts[namedIndex] = { ...update };\n        replaced = true;\n      }\n    }\n    if (!replaced) {\n      newTask.artifacts.push({ ...update });\n      if (newTask.artifacts.some((a) => a.index !== void 0)) {\n        newTask.artifacts.sort((a, b) => (a.index ?? 0) - (b.index ?? 0));\n      }\n    }\n  }\n  return { task: newTask, history: newHistory };\n}\nasync function loadOrCreateTaskAndHistory({\n  agentId,\n  taskId,\n  taskStore,\n  message,\n  sessionId,\n  metadata,\n  logger\n}) {\n  const data = await taskStore.load({ agentId, taskId });\n  if (!data) {\n    const initialTask = {\n      id: taskId,\n      sessionId,\n      status: {\n        state: \"submitted\",\n        timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n        message: null\n      },\n      artifacts: [],\n      metadata\n    };\n    const initialData = {\n      task: initialTask,\n      history: [message]\n    };\n    logger?.info(`[Task ${taskId}] Created new task and history.`);\n    await taskStore.save({ agentId, data: initialData });\n    return initialData;\n  }\n  logger?.info(`[Task ${taskId}] Loaded existing task and history.`);\n  let updatedData = {\n    task: data.task,\n    history: [...data.history, message]\n  };\n  const { status } = data.task;\n  const finalStates = [\"completed\", \"failed\", \"canceled\"];\n  if (finalStates.includes(status.state)) {\n    logger?.warn(`[Task ${taskId}] Received message for task in final state ${status.state}. Restarting.`);\n    updatedData = applyUpdateToTaskAndHistory(updatedData, {\n      state: \"submitted\",\n      message: null\n    });\n  } else if (status.state === \"input-required\") {\n    logger?.info(`[Task ${taskId}] Changing state from 'input-required' to 'working'.`);\n    updatedData = applyUpdateToTaskAndHistory(updatedData, { state: \"working\" });\n  } else if (status.state === \"working\") {\n    logger?.warn(`[Task ${taskId}] Received message while already 'working'. Proceeding.`);\n  }\n  await taskStore.save({ agentId, data: updatedData });\n  return {\n    task: { ...updatedData.task },\n    history: [...updatedData.history]\n  };\n}\nfunction createTaskContext({\n  task,\n  userMessage,\n  history,\n  activeCancellations\n}) {\n  return {\n    task: structuredClone(task),\n    userMessage,\n    history: structuredClone(history),\n    isCancelled: () => activeCancellations.has(task.id)\n  };\n}\n\n// src/server/handlers/a2a.ts\nvar taskSendParamsSchema = z.object({\n  id: z.string().min(1, \"Invalid or missing task ID (params.id).\"),\n  message: z.object({\n    parts: z.array(\n      z.object({\n        type: z.enum([\"text\"]),\n        text: z.string()\n      })\n    )\n  })\n});\nasync function getAgentCardByIdHandler({\n  mastra,\n  agentId,\n  executionUrl = `/a2a/${agentId}`,\n  provider = {\n    organization: \"Mastra\",\n    url: \"https://mastra.ai\"\n  },\n  version = \"1.0\",\n  runtimeContext\n}) {\n  const agent = mastra.getAgent(agentId);\n  if (!agent) {\n    throw new Error(`Agent with ID ${agentId} not found`);\n  }\n  const [instructions, tools] = await Promise.all([\n    agent.getInstructions({ runtimeContext }),\n    agent.getTools({ runtimeContext })\n  ]);\n  const agentCard = {\n    name: agent.id || agentId,\n    description: instructions,\n    url: executionUrl,\n    provider,\n    version,\n    capabilities: {\n      streaming: true,\n      // All agents support streaming\n      pushNotifications: false,\n      stateTransitionHistory: false\n    },\n    defaultInputModes: [\"text\"],\n    defaultOutputModes: [\"text\"],\n    // Convert agent tools to skills format for A2A protocol\n    skills: Object.entries(tools).map(([toolId, tool]) => ({\n      id: toolId,\n      name: toolId,\n      description: tool.description || `Tool: ${toolId}`,\n      // Optional fields\n      tags: [\"tool\"]\n    }))\n  };\n  return agentCard;\n}\nfunction validateTaskSendParams(params) {\n  try {\n    taskSendParamsSchema.parse(params);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      throw A2AError.invalidParams(error.errors[0].message);\n    }\n    throw error;\n  }\n}\nasync function handleTaskSend({\n  requestId,\n  params,\n  taskStore,\n  agent,\n  agentId,\n  logger,\n  runtimeContext\n}) {\n  validateTaskSendParams(params);\n  const { id: taskId, message, sessionId, metadata } = params;\n  let currentData = await loadOrCreateTaskAndHistory({\n    taskId,\n    taskStore,\n    agentId,\n    message,\n    sessionId,\n    metadata\n  });\n  createTaskContext({\n    task: currentData.task,\n    userMessage: message,\n    history: currentData.history,\n    activeCancellations: taskStore.activeCancellations\n  });\n  try {\n    const { text } = await agent.generate([convertToCoreMessage(message)], {\n      runId: taskId,\n      runtimeContext\n    });\n    currentData = applyUpdateToTaskAndHistory(currentData, {\n      state: \"completed\",\n      message: {\n        role: \"agent\",\n        parts: [\n          {\n            type: \"text\",\n            text\n          }\n        ]\n      }\n    });\n    await taskStore.save({ agentId, data: currentData });\n  } catch (handlerError) {\n    const failureStatusUpdate = {\n      state: \"failed\",\n      message: {\n        role: \"agent\",\n        parts: [\n          {\n            type: \"text\",\n            text: `Handler failed: ${handlerError instanceof Error ? handlerError.message : String(handlerError)}`\n          }\n        ]\n      }\n    };\n    currentData = applyUpdateToTaskAndHistory(currentData, failureStatusUpdate);\n    try {\n      await taskStore.save({ agentId, data: currentData });\n    } catch (saveError) {\n      logger?.error(`Failed to save task ${taskId} after handler error:`, saveError?.message);\n    }\n    return normalizeError(handlerError, requestId, taskId, logger);\n  }\n  return createSuccessResponse(requestId, currentData.task);\n}\nasync function handleTaskGet({\n  requestId,\n  taskStore,\n  agentId,\n  taskId\n}) {\n  const task = await taskStore.load({ agentId, taskId });\n  if (!task) {\n    throw A2AError.taskNotFound(taskId);\n  }\n  return createSuccessResponse(requestId, task);\n}\nasync function* handleTaskSendSubscribe({\n  requestId,\n  params,\n  taskStore,\n  agent,\n  agentId,\n  logger,\n  runtimeContext\n}) {\n  yield createSuccessResponse(requestId, {\n    state: \"working\",\n    message: {\n      role: \"agent\",\n      parts: [{ type: \"text\", text: \"Generating response...\" }]\n    }\n  });\n  let result;\n  try {\n    result = await handleTaskSend({\n      requestId,\n      params,\n      taskStore,\n      agent,\n      agentId,\n      runtimeContext,\n      logger\n    });\n  } catch (err) {\n    if (!(err instanceof A2AError)) {\n      throw err;\n    }\n    result = createErrorResponse(requestId, err.toJSONRPCError());\n  }\n  yield result;\n}\nasync function handleTaskCancel({\n  requestId,\n  taskStore,\n  agentId,\n  taskId,\n  logger\n}) {\n  let data = await taskStore.load({\n    agentId,\n    taskId\n  });\n  if (!data) {\n    throw A2AError.taskNotFound(taskId);\n  }\n  const finalStates = [\"completed\", \"failed\", \"canceled\"];\n  if (finalStates.includes(data.task.status.state)) {\n    logger?.info(`Task ${taskId} already in final state ${data.task.status.state}, cannot cancel.`);\n    return createSuccessResponse(requestId, data.task);\n  }\n  taskStore.activeCancellations.add(taskId);\n  const cancelUpdate = {\n    state: \"canceled\",\n    message: {\n      role: \"agent\",\n      parts: [{ type: \"text\", text: \"Task cancelled by request.\" }]\n    }\n  };\n  data = applyUpdateToTaskAndHistory(data, cancelUpdate);\n  await taskStore.save({ agentId, data });\n  taskStore.activeCancellations.delete(taskId);\n  return createSuccessResponse(requestId, data.task);\n}\nasync function getAgentExecutionHandler({\n  requestId,\n  mastra,\n  agentId,\n  runtimeContext,\n  method,\n  params,\n  taskStore = new InMemoryTaskStore(),\n  logger\n}) {\n  const agent = mastra.getAgent(agentId);\n  let taskId;\n  try {\n    taskId = params.id;\n    switch (method) {\n      case \"tasks/send\": {\n        const result2 = await handleTaskSend({\n          requestId,\n          params,\n          taskStore,\n          agent,\n          agentId,\n          runtimeContext\n        });\n        return result2;\n      }\n      case \"tasks/sendSubscribe\":\n        const result = await handleTaskSendSubscribe({\n          requestId,\n          taskStore,\n          params,\n          agent,\n          agentId,\n          runtimeContext\n        });\n        return result;\n      case \"tasks/get\": {\n        const result2 = await handleTaskGet({\n          requestId,\n          taskStore,\n          agentId,\n          taskId\n        });\n        return result2;\n      }\n      case \"tasks/cancel\": {\n        const result2 = await handleTaskCancel({\n          requestId,\n          taskStore,\n          agentId,\n          taskId\n        });\n        return result2;\n      }\n      default:\n        throw A2AError.methodNotFound(method);\n    }\n  } catch (error) {\n    if (error instanceof A2AError && taskId && !error.taskId) {\n      error.taskId = taskId;\n    }\n    return normalizeError(error, requestId, taskId, logger);\n  }\n}\n\nexport { a2a_exports, getAgentCardByIdHandler, getAgentExecutionHandler, handleTaskCancel, handleTaskGet, handleTaskSend, handleTaskSendSubscribe };\n","// src/utils/stream.ts\nvar StreamingApi = class {\n  writer;\n  encoder;\n  writable;\n  abortSubscribers = [];\n  responseReadable;\n  aborted = false;\n  closed = false;\n  constructor(writable, _readable) {\n    this.writable = writable;\n    this.writer = writable.getWriter();\n    this.encoder = new TextEncoder();\n    const reader = _readable.getReader();\n    this.abortSubscribers.push(async () => {\n      await reader.cancel();\n    });\n    this.responseReadable = new ReadableStream({\n      async pull(controller) {\n        const { done, value } = await reader.read();\n        done ? controller.close() : controller.enqueue(value);\n      },\n      cancel: () => {\n        this.abort();\n      }\n    });\n  }\n  async write(input) {\n    try {\n      if (typeof input === \"string\") {\n        input = this.encoder.encode(input);\n      }\n      await this.writer.write(input);\n    } catch {\n    }\n    return this;\n  }\n  async writeln(input) {\n    await this.write(input + \"\\n\");\n    return this;\n  }\n  sleep(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  async close() {\n    try {\n      await this.writer.close();\n    } catch {\n    }\n    this.closed = true;\n  }\n  async pipe(body) {\n    this.writer.releaseLock();\n    await body.pipeTo(this.writable, { preventClose: true });\n    this.writer = this.writable.getWriter();\n  }\n  onAbort(listener) {\n    this.abortSubscribers.push(listener);\n  }\n  abort() {\n    if (!this.aborted) {\n      this.aborted = true;\n      this.abortSubscribers.forEach((subscriber) => subscriber());\n    }\n  }\n};\nexport {\n  StreamingApi\n};\n","// src/helper/streaming/utils.ts\nvar isOldBunVersion = () => {\n  const version = typeof Bun !== \"undefined\" ? Bun.version : void 0;\n  if (version === void 0) {\n    return false;\n  }\n  const result = version.startsWith(\"1.1\") || version.startsWith(\"1.0\") || version.startsWith(\"0.\");\n  isOldBunVersion = () => result;\n  return result;\n};\nexport {\n  isOldBunVersion\n};\n","// src/helper/streaming/stream.ts\nimport { StreamingApi } from \"../../utils/stream.js\";\nimport { isOldBunVersion } from \"./utils.js\";\nvar contextStash = /* @__PURE__ */ new WeakMap();\nvar stream = (c, cb, onError) => {\n  const { readable, writable } = new TransformStream();\n  const stream2 = new StreamingApi(writable, readable);\n  if (isOldBunVersion()) {\n    c.req.raw.signal.addEventListener(\"abort\", () => {\n      if (!stream2.closed) {\n        stream2.abort();\n      }\n    });\n  }\n  contextStash.set(stream2.responseReadable, c);\n  (async () => {\n    try {\n      await cb(stream2);\n    } catch (e) {\n      if (e === void 0) {\n      } else if (e instanceof Error && onError) {\n        await onError(e, stream2);\n      } else {\n        console.error(e);\n      }\n    } finally {\n      stream2.close();\n    }\n  })();\n  return c.newResponse(stream2.responseReadable);\n};\nexport {\n  stream\n};\n","import { ZodFirstPartyTypeKind } from 'zod';\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/double-indexed-kv.js\nvar DoubleIndexedKV = class {\n  constructor() {\n    this.keyToValue = /* @__PURE__ */ new Map();\n    this.valueToKey = /* @__PURE__ */ new Map();\n  }\n  set(key, value) {\n    this.keyToValue.set(key, value);\n    this.valueToKey.set(value, key);\n  }\n  getByKey(key) {\n    return this.keyToValue.get(key);\n  }\n  getByValue(value) {\n    return this.valueToKey.get(value);\n  }\n  clear() {\n    this.keyToValue.clear();\n    this.valueToKey.clear();\n  }\n};\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/registry.js\nvar Registry = class {\n  constructor(generateIdentifier) {\n    this.generateIdentifier = generateIdentifier;\n    this.kv = new DoubleIndexedKV();\n  }\n  register(value, identifier) {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n    this.kv.set(identifier, value);\n  }\n  clear() {\n    this.kv.clear();\n  }\n  getIdentifier(value) {\n    return this.kv.getByValue(value);\n  }\n  getValue(identifier) {\n    return this.kv.getByKey(identifier);\n  }\n};\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/class-registry.js\nvar ClassRegistry = class extends Registry {\n  constructor() {\n    super((c) => c.name);\n    this.classToAllowedProps = /* @__PURE__ */ new Map();\n  }\n  register(value, options) {\n    if (typeof options === \"object\") {\n      if (options.allowProps) {\n        this.classToAllowedProps.set(value, options.allowProps);\n      }\n      super.register(value, options.identifier);\n    } else {\n      super.register(value, options);\n    }\n  }\n  getAllowedProps(value) {\n    return this.classToAllowedProps.get(value);\n  }\n};\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/util.js\nfunction valuesOfObj(record) {\n  if (\"values\" in Object) {\n    return Object.values(record);\n  }\n  const values = [];\n  for (const key in record) {\n    if (record.hasOwnProperty(key)) {\n      values.push(record[key]);\n    }\n  }\n  return values;\n}\nfunction find(record, predicate) {\n  const values = valuesOfObj(record);\n  if (\"find\" in values) {\n    return values.find(predicate);\n  }\n  const valuesNotNever = values;\n  for (let i = 0; i < valuesNotNever.length; i++) {\n    const value = valuesNotNever[i];\n    if (predicate(value)) {\n      return value;\n    }\n  }\n  return void 0;\n}\nfunction forEach(record, run) {\n  Object.entries(record).forEach(([key, value]) => run(value, key));\n}\nfunction includes(arr, value) {\n  return arr.indexOf(value) !== -1;\n}\nfunction findArr(record, predicate) {\n  for (let i = 0; i < record.length; i++) {\n    const value = record[i];\n    if (predicate(value)) {\n      return value;\n    }\n  }\n  return void 0;\n}\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/custom-transformer-registry.js\nvar CustomTransformerRegistry = class {\n  constructor() {\n    this.transfomers = {};\n  }\n  register(transformer) {\n    this.transfomers[transformer.name] = transformer;\n  }\n  findApplicable(v) {\n    return find(this.transfomers, (transformer) => transformer.isApplicable(v));\n  }\n  findByName(name) {\n    return this.transfomers[name];\n  }\n};\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/is.js\nvar getType = (payload) => Object.prototype.toString.call(payload).slice(8, -1);\nvar isUndefined = (payload) => typeof payload === \"undefined\";\nvar isNull = (payload) => payload === null;\nvar isPlainObject = (payload) => {\n  if (typeof payload !== \"object\" || payload === null)\n    return false;\n  if (payload === Object.prototype)\n    return false;\n  if (Object.getPrototypeOf(payload) === null)\n    return true;\n  return Object.getPrototypeOf(payload) === Object.prototype;\n};\nvar isEmptyObject = (payload) => isPlainObject(payload) && Object.keys(payload).length === 0;\nvar isArray = (payload) => Array.isArray(payload);\nvar isString = (payload) => typeof payload === \"string\";\nvar isNumber = (payload) => typeof payload === \"number\" && !isNaN(payload);\nvar isBoolean = (payload) => typeof payload === \"boolean\";\nvar isRegExp = (payload) => payload instanceof RegExp;\nvar isMap = (payload) => payload instanceof Map;\nvar isSet = (payload) => payload instanceof Set;\nvar isSymbol = (payload) => getType(payload) === \"Symbol\";\nvar isDate = (payload) => payload instanceof Date && !isNaN(payload.valueOf());\nvar isError = (payload) => payload instanceof Error;\nvar isNaNValue = (payload) => typeof payload === \"number\" && isNaN(payload);\nvar isPrimitive = (payload) => isBoolean(payload) || isNull(payload) || isUndefined(payload) || isNumber(payload) || isString(payload) || isSymbol(payload);\nvar isBigint = (payload) => typeof payload === \"bigint\";\nvar isInfinite = (payload) => payload === Infinity || payload === -Infinity;\nvar isTypedArray = (payload) => ArrayBuffer.isView(payload) && !(payload instanceof DataView);\nvar isURL = (payload) => payload instanceof URL;\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/pathstringifier.js\nvar escapeKey = (key) => key.replace(/\\./g, \"\\\\.\");\nvar stringifyPath = (path) => path.map(String).map(escapeKey).join(\".\");\nvar parsePath = (string) => {\n  const result = [];\n  let segment = \"\";\n  for (let i = 0; i < string.length; i++) {\n    let char = string.charAt(i);\n    const isEscapedDot = char === \"\\\\\" && string.charAt(i + 1) === \".\";\n    if (isEscapedDot) {\n      segment += \".\";\n      i++;\n      continue;\n    }\n    const isEndOfSegment = char === \".\";\n    if (isEndOfSegment) {\n      result.push(segment);\n      segment = \"\";\n      continue;\n    }\n    segment += char;\n  }\n  const lastSegment = segment;\n  result.push(lastSegment);\n  return result;\n};\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/transformer.js\nfunction simpleTransformation(isApplicable, annotation, transform, untransform) {\n  return {\n    isApplicable,\n    annotation,\n    transform,\n    untransform\n  };\n}\nvar simpleRules = [\n  simpleTransformation(isUndefined, \"undefined\", () => null, () => void 0),\n  simpleTransformation(isBigint, \"bigint\", (v) => v.toString(), (v) => {\n    if (typeof BigInt !== \"undefined\") {\n      return BigInt(v);\n    }\n    console.error(\"Please add a BigInt polyfill.\");\n    return v;\n  }),\n  simpleTransformation(isDate, \"Date\", (v) => v.toISOString(), (v) => new Date(v)),\n  simpleTransformation(isError, \"Error\", (v, superJson) => {\n    const baseError = {\n      name: v.name,\n      message: v.message\n    };\n    superJson.allowedErrorProps.forEach((prop) => {\n      baseError[prop] = v[prop];\n    });\n    return baseError;\n  }, (v, superJson) => {\n    const e = new Error(v.message);\n    e.name = v.name;\n    e.stack = v.stack;\n    superJson.allowedErrorProps.forEach((prop) => {\n      e[prop] = v[prop];\n    });\n    return e;\n  }),\n  simpleTransformation(isRegExp, \"regexp\", (v) => \"\" + v, (regex) => {\n    const body = regex.slice(1, regex.lastIndexOf(\"/\"));\n    const flags = regex.slice(regex.lastIndexOf(\"/\") + 1);\n    return new RegExp(body, flags);\n  }),\n  simpleTransformation(\n    isSet,\n    \"set\",\n    // (sets only exist in es6+)\n    // eslint-disable-next-line es5/no-es6-methods\n    (v) => [...v.values()],\n    (v) => new Set(v)\n  ),\n  simpleTransformation(isMap, \"map\", (v) => [...v.entries()], (v) => new Map(v)),\n  simpleTransformation((v) => isNaNValue(v) || isInfinite(v), \"number\", (v) => {\n    if (isNaNValue(v)) {\n      return \"NaN\";\n    }\n    if (v > 0) {\n      return \"Infinity\";\n    } else {\n      return \"-Infinity\";\n    }\n  }, Number),\n  simpleTransformation((v) => v === 0 && 1 / v === -Infinity, \"number\", () => {\n    return \"-0\";\n  }, Number),\n  simpleTransformation(isURL, \"URL\", (v) => v.toString(), (v) => new URL(v))\n];\nfunction compositeTransformation(isApplicable, annotation, transform, untransform) {\n  return {\n    isApplicable,\n    annotation,\n    transform,\n    untransform\n  };\n}\nvar symbolRule = compositeTransformation((s, superJson) => {\n  if (isSymbol(s)) {\n    const isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n    return isRegistered;\n  }\n  return false;\n}, (s, superJson) => {\n  const identifier = superJson.symbolRegistry.getIdentifier(s);\n  return [\"symbol\", identifier];\n}, (v) => v.description, (_, a, superJson) => {\n  const value = superJson.symbolRegistry.getValue(a[1]);\n  if (!value) {\n    throw new Error(\"Trying to deserialize unknown symbol\");\n  }\n  return value;\n});\nvar constructorToName = [\n  Int8Array,\n  Uint8Array,\n  Int16Array,\n  Uint16Array,\n  Int32Array,\n  Uint32Array,\n  Float32Array,\n  Float64Array,\n  Uint8ClampedArray\n].reduce((obj, ctor) => {\n  obj[ctor.name] = ctor;\n  return obj;\n}, {});\nvar typedArrayRule = compositeTransformation(isTypedArray, (v) => [\"typed-array\", v.constructor.name], (v) => [...v], (v, a) => {\n  const ctor = constructorToName[a[1]];\n  if (!ctor) {\n    throw new Error(\"Trying to deserialize unknown typed array\");\n  }\n  return new ctor(v);\n});\nfunction isInstanceOfRegisteredClass(potentialClass, superJson) {\n  if (potentialClass?.constructor) {\n    const isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n    return isRegistered;\n  }\n  return false;\n}\nvar classRule = compositeTransformation(isInstanceOfRegisteredClass, (clazz, superJson) => {\n  const identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n  return [\"class\", identifier];\n}, (clazz, superJson) => {\n  const allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n  if (!allowedProps) {\n    return { ...clazz };\n  }\n  const result = {};\n  allowedProps.forEach((prop) => {\n    result[prop] = clazz[prop];\n  });\n  return result;\n}, (v, a, superJson) => {\n  const clazz = superJson.classRegistry.getValue(a[1]);\n  if (!clazz) {\n    throw new Error(`Trying to deserialize unknown class '${a[1]}' - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564`);\n  }\n  return Object.assign(Object.create(clazz.prototype), v);\n});\nvar customRule = compositeTransformation((value, superJson) => {\n  return !!superJson.customTransformerRegistry.findApplicable(value);\n}, (value, superJson) => {\n  const transformer = superJson.customTransformerRegistry.findApplicable(value);\n  return [\"custom\", transformer.name];\n}, (value, superJson) => {\n  const transformer = superJson.customTransformerRegistry.findApplicable(value);\n  return transformer.serialize(value);\n}, (v, a, superJson) => {\n  const transformer = superJson.customTransformerRegistry.findByName(a[1]);\n  if (!transformer) {\n    throw new Error(\"Trying to deserialize unknown custom value\");\n  }\n  return transformer.deserialize(v);\n});\nvar compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\nvar transformValue = (value, superJson) => {\n  const applicableCompositeRule = findArr(compositeRules, (rule) => rule.isApplicable(value, superJson));\n  if (applicableCompositeRule) {\n    return {\n      value: applicableCompositeRule.transform(value, superJson),\n      type: applicableCompositeRule.annotation(value, superJson)\n    };\n  }\n  const applicableSimpleRule = findArr(simpleRules, (rule) => rule.isApplicable(value, superJson));\n  if (applicableSimpleRule) {\n    return {\n      value: applicableSimpleRule.transform(value, superJson),\n      type: applicableSimpleRule.annotation\n    };\n  }\n  return void 0;\n};\nvar simpleRulesByAnnotation = {};\nsimpleRules.forEach((rule) => {\n  simpleRulesByAnnotation[rule.annotation] = rule;\n});\nvar untransformValue = (json, type, superJson) => {\n  if (isArray(type)) {\n    switch (type[0]) {\n      case \"symbol\":\n        return symbolRule.untransform(json, type, superJson);\n      case \"class\":\n        return classRule.untransform(json, type, superJson);\n      case \"custom\":\n        return customRule.untransform(json, type, superJson);\n      case \"typed-array\":\n        return typedArrayRule.untransform(json, type, superJson);\n      default:\n        throw new Error(\"Unknown transformation: \" + type);\n    }\n  } else {\n    const transformation = simpleRulesByAnnotation[type];\n    if (!transformation) {\n      throw new Error(\"Unknown transformation: \" + type);\n    }\n    return transformation.untransform(json, superJson);\n  }\n};\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/accessDeep.js\nvar getNthKey = (value, n) => {\n  if (n > value.size)\n    throw new Error(\"index out of bounds\");\n  const keys = value.keys();\n  while (n > 0) {\n    keys.next();\n    n--;\n  }\n  return keys.next().value;\n};\nfunction validatePath(path) {\n  if (includes(path, \"__proto__\")) {\n    throw new Error(\"__proto__ is not allowed as a property\");\n  }\n  if (includes(path, \"prototype\")) {\n    throw new Error(\"prototype is not allowed as a property\");\n  }\n  if (includes(path, \"constructor\")) {\n    throw new Error(\"constructor is not allowed as a property\");\n  }\n}\nvar getDeep = (object, path) => {\n  validatePath(path);\n  for (let i = 0; i < path.length; i++) {\n    const key = path[i];\n    if (isSet(object)) {\n      object = getNthKey(object, +key);\n    } else if (isMap(object)) {\n      const row = +key;\n      const type = +path[++i] === 0 ? \"key\" : \"value\";\n      const keyOfRow = getNthKey(object, row);\n      switch (type) {\n        case \"key\":\n          object = keyOfRow;\n          break;\n        case \"value\":\n          object = object.get(keyOfRow);\n          break;\n      }\n    } else {\n      object = object[key];\n    }\n  }\n  return object;\n};\nvar setDeep = (object, path, mapper) => {\n  validatePath(path);\n  if (path.length === 0) {\n    return mapper(object);\n  }\n  let parent = object;\n  for (let i = 0; i < path.length - 1; i++) {\n    const key = path[i];\n    if (isArray(parent)) {\n      const index = +key;\n      parent = parent[index];\n    } else if (isPlainObject(parent)) {\n      parent = parent[key];\n    } else if (isSet(parent)) {\n      const row = +key;\n      parent = getNthKey(parent, row);\n    } else if (isMap(parent)) {\n      const isEnd = i === path.length - 2;\n      if (isEnd) {\n        break;\n      }\n      const row = +key;\n      const type = +path[++i] === 0 ? \"key\" : \"value\";\n      const keyOfRow = getNthKey(parent, row);\n      switch (type) {\n        case \"key\":\n          parent = keyOfRow;\n          break;\n        case \"value\":\n          parent = parent.get(keyOfRow);\n          break;\n      }\n    }\n  }\n  const lastKey = path[path.length - 1];\n  if (isArray(parent)) {\n    parent[+lastKey] = mapper(parent[+lastKey]);\n  } else if (isPlainObject(parent)) {\n    parent[lastKey] = mapper(parent[lastKey]);\n  }\n  if (isSet(parent)) {\n    const oldValue = getNthKey(parent, +lastKey);\n    const newValue = mapper(oldValue);\n    if (oldValue !== newValue) {\n      parent.delete(oldValue);\n      parent.add(newValue);\n    }\n  }\n  if (isMap(parent)) {\n    const row = +path[path.length - 2];\n    const keyToRow = getNthKey(parent, row);\n    const type = +lastKey === 0 ? \"key\" : \"value\";\n    switch (type) {\n      case \"key\": {\n        const newKey = mapper(keyToRow);\n        parent.set(newKey, parent.get(keyToRow));\n        if (newKey !== keyToRow) {\n          parent.delete(keyToRow);\n        }\n        break;\n      }\n      case \"value\": {\n        parent.set(keyToRow, mapper(parent.get(keyToRow)));\n        break;\n      }\n    }\n  }\n  return object;\n};\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/plainer.js\nfunction traverse(tree, walker2, origin = []) {\n  if (!tree) {\n    return;\n  }\n  if (!isArray(tree)) {\n    forEach(tree, (subtree, key) => traverse(subtree, walker2, [...origin, ...parsePath(key)]));\n    return;\n  }\n  const [nodeValue, children] = tree;\n  if (children) {\n    forEach(children, (child, key) => {\n      traverse(child, walker2, [...origin, ...parsePath(key)]);\n    });\n  }\n  walker2(nodeValue, origin);\n}\nfunction applyValueAnnotations(plain, annotations, superJson) {\n  traverse(annotations, (type, path) => {\n    plain = setDeep(plain, path, (v) => untransformValue(v, type, superJson));\n  });\n  return plain;\n}\nfunction applyReferentialEqualityAnnotations(plain, annotations) {\n  function apply(identicalPaths, path) {\n    const object = getDeep(plain, parsePath(path));\n    identicalPaths.map(parsePath).forEach((identicalObjectPath) => {\n      plain = setDeep(plain, identicalObjectPath, () => object);\n    });\n  }\n  if (isArray(annotations)) {\n    const [root, other] = annotations;\n    root.forEach((identicalPath) => {\n      plain = setDeep(plain, parsePath(identicalPath), () => plain);\n    });\n    if (other) {\n      forEach(other, apply);\n    }\n  } else {\n    forEach(annotations, apply);\n  }\n  return plain;\n}\nvar isDeep = (object, superJson) => isPlainObject(object) || isArray(object) || isMap(object) || isSet(object) || isInstanceOfRegisteredClass(object, superJson);\nfunction addIdentity(object, path, identities) {\n  const existingSet = identities.get(object);\n  if (existingSet) {\n    existingSet.push(path);\n  } else {\n    identities.set(object, [path]);\n  }\n}\nfunction generateReferentialEqualityAnnotations(identitites, dedupe) {\n  const result = {};\n  let rootEqualityPaths = void 0;\n  identitites.forEach((paths) => {\n    if (paths.length <= 1) {\n      return;\n    }\n    if (!dedupe) {\n      paths = paths.map((path) => path.map(String)).sort((a, b) => a.length - b.length);\n    }\n    const [representativePath, ...identicalPaths] = paths;\n    if (representativePath.length === 0) {\n      rootEqualityPaths = identicalPaths.map(stringifyPath);\n    } else {\n      result[stringifyPath(representativePath)] = identicalPaths.map(stringifyPath);\n    }\n  });\n  if (rootEqualityPaths) {\n    if (isEmptyObject(result)) {\n      return [rootEqualityPaths];\n    } else {\n      return [rootEqualityPaths, result];\n    }\n  } else {\n    return isEmptyObject(result) ? void 0 : result;\n  }\n}\nvar walker = (object, identities, superJson, dedupe, path = [], objectsInThisPath = [], seenObjects = /* @__PURE__ */ new Map()) => {\n  const primitive = isPrimitive(object);\n  if (!primitive) {\n    addIdentity(object, path, identities);\n    const seen = seenObjects.get(object);\n    if (seen) {\n      return dedupe ? {\n        transformedValue: null\n      } : seen;\n    }\n  }\n  if (!isDeep(object, superJson)) {\n    const transformed2 = transformValue(object, superJson);\n    const result2 = transformed2 ? {\n      transformedValue: transformed2.value,\n      annotations: [transformed2.type]\n    } : {\n      transformedValue: object\n    };\n    if (!primitive) {\n      seenObjects.set(object, result2);\n    }\n    return result2;\n  }\n  if (includes(objectsInThisPath, object)) {\n    return {\n      transformedValue: null\n    };\n  }\n  const transformationResult = transformValue(object, superJson);\n  const transformed = transformationResult?.value ?? object;\n  const transformedValue = isArray(transformed) ? [] : {};\n  const innerAnnotations = {};\n  forEach(transformed, (value, index) => {\n    if (index === \"__proto__\" || index === \"constructor\" || index === \"prototype\") {\n      throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);\n    }\n    const recursiveResult = walker(value, identities, superJson, dedupe, [...path, index], [...objectsInThisPath, object], seenObjects);\n    transformedValue[index] = recursiveResult.transformedValue;\n    if (isArray(recursiveResult.annotations)) {\n      innerAnnotations[index] = recursiveResult.annotations;\n    } else if (isPlainObject(recursiveResult.annotations)) {\n      forEach(recursiveResult.annotations, (tree, key) => {\n        innerAnnotations[escapeKey(index) + \".\" + key] = tree;\n      });\n    }\n  });\n  const result = isEmptyObject(innerAnnotations) ? {\n    transformedValue,\n    annotations: !!transformationResult ? [transformationResult.type] : void 0\n  } : {\n    transformedValue,\n    annotations: !!transformationResult ? [transformationResult.type, innerAnnotations] : innerAnnotations\n  };\n  if (!primitive) {\n    seenObjects.set(object, result);\n  }\n  return result;\n};\n\n// ../../node_modules/.pnpm/is-what@4.1.16/node_modules/is-what/dist/index.js\nfunction getType2(payload) {\n  return Object.prototype.toString.call(payload).slice(8, -1);\n}\nfunction isArray2(payload) {\n  return getType2(payload) === \"Array\";\n}\nfunction isPlainObject2(payload) {\n  if (getType2(payload) !== \"Object\")\n    return false;\n  const prototype = Object.getPrototypeOf(payload);\n  return !!prototype && prototype.constructor === Object && prototype === Object.prototype;\n}\n\n// ../../node_modules/.pnpm/copy-anything@3.0.5/node_modules/copy-anything/dist/index.js\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n  const propType = {}.propertyIsEnumerable.call(originalObject, key) ? \"enumerable\" : \"nonenumerable\";\n  if (propType === \"enumerable\")\n    carry[key] = newVal;\n  if (includeNonenumerable && propType === \"nonenumerable\") {\n    Object.defineProperty(carry, key, {\n      value: newVal,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nfunction copy(target, options = {}) {\n  if (isArray2(target)) {\n    return target.map((item) => copy(item, options));\n  }\n  if (!isPlainObject2(target)) {\n    return target;\n  }\n  const props = Object.getOwnPropertyNames(target);\n  const symbols = Object.getOwnPropertySymbols(target);\n  return [...props, ...symbols].reduce((carry, key) => {\n    if (isArray2(options.props) && !options.props.includes(key)) {\n      return carry;\n    }\n    const val = target[key];\n    const newVal = copy(val, options);\n    assignProp(carry, key, newVal, target, options.nonenumerable);\n    return carry;\n  }, {});\n}\n\n// ../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/index.js\nvar SuperJSON = class {\n  /**\n   * @param dedupeReferentialEqualities  If true, SuperJSON will make sure only one instance of referentially equal objects are serialized and the rest are replaced with `null`.\n   */\n  constructor({ dedupe = false } = {}) {\n    this.classRegistry = new ClassRegistry();\n    this.symbolRegistry = new Registry((s) => s.description ?? \"\");\n    this.customTransformerRegistry = new CustomTransformerRegistry();\n    this.allowedErrorProps = [];\n    this.dedupe = dedupe;\n  }\n  serialize(object) {\n    const identities = /* @__PURE__ */ new Map();\n    const output = walker(object, identities, this, this.dedupe);\n    const res = {\n      json: output.transformedValue\n    };\n    if (output.annotations) {\n      res.meta = {\n        ...res.meta,\n        values: output.annotations\n      };\n    }\n    const equalityAnnotations = generateReferentialEqualityAnnotations(identities, this.dedupe);\n    if (equalityAnnotations) {\n      res.meta = {\n        ...res.meta,\n        referentialEqualities: equalityAnnotations\n      };\n    }\n    return res;\n  }\n  deserialize(payload) {\n    const { json, meta } = payload;\n    let result = copy(json);\n    if (meta?.values) {\n      result = applyValueAnnotations(result, meta.values, this);\n    }\n    if (meta?.referentialEqualities) {\n      result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n    }\n    return result;\n  }\n  stringify(object) {\n    return JSON.stringify(this.serialize(object));\n  }\n  parse(string) {\n    return this.deserialize(JSON.parse(string));\n  }\n  registerClass(v, options) {\n    this.classRegistry.register(v, options);\n  }\n  registerSymbol(v, identifier) {\n    this.symbolRegistry.register(v, identifier);\n  }\n  registerCustom(transformer, name) {\n    this.customTransformerRegistry.register({\n      name,\n      ...transformer\n    });\n  }\n  allowErrorProps(...props) {\n    this.allowedErrorProps.push(...props);\n  }\n};\nSuperJSON.defaultInstance = new SuperJSON();\nSuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\nSuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\nSuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\nSuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\nSuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\nSuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\nSuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\nSuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\nvar stringify = SuperJSON.stringify;\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/Options.js\nvar ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nvar defaultOptions = {\n  name: void 0,\n  $refStrategy: \"root\",\n  basePath: [\"#\"],\n  effectStrategy: \"input\",\n  pipeStrategy: \"all\",\n  dateStrategy: \"format:date-time\",\n  mapStrategy: \"entries\",\n  removeAdditionalStrategy: \"passthrough\",\n  allowedAdditionalProperties: true,\n  rejectedAdditionalProperties: false,\n  definitionPath: \"definitions\",\n  target: \"jsonSchema7\",\n  strictUnions: false,\n  definitions: {},\n  errorMessages: false,\n  markdownDescription: false,\n  patternStrategy: \"escape\",\n  applyRegexFlags: false,\n  emailStrategy: \"format:email\",\n  base64Strategy: \"contentEncoding:base64\",\n  nameStrategy: \"ref\",\n  openAiAnyTypeName: \"OpenAiAnyType\"\n};\nvar getDefaultOptions = (options) => typeof options === \"string\" ? {\n  ...defaultOptions,\n  name: options\n} : {\n  ...defaultOptions,\n  ...options\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/Refs.js\nvar getRefs = (options) => {\n  const _options = getDefaultOptions(options);\n  const currentPath = _options.name !== void 0 ? [..._options.basePath, _options.definitionPath, _options.name] : _options.basePath;\n  return {\n    ..._options,\n    flags: { hasReferencedOpenAiAnyType: false },\n    currentPath,\n    propertyPath: void 0,\n    seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n      def._def,\n      {\n        def: def._def,\n        path: [..._options.basePath, _options.definitionPath, name],\n        // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n        jsonSchema: void 0\n      }\n    ]))\n  };\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/errorMessages.js\nfunction addErrorMessage(res, key, errorMessage, refs) {\n  if (!refs?.errorMessages)\n    return;\n  if (errorMessage) {\n    res.errorMessage = {\n      ...res.errorMessage,\n      [key]: errorMessage\n    };\n  }\n}\nfunction setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n  res[key] = value;\n  addErrorMessage(res, key, errorMessage, refs);\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/getRelativePath.js\nvar getRelativePath = (pathA, pathB) => {\n  let i = 0;\n  for (; i < pathA.length && i < pathB.length; i++) {\n    if (pathA[i] !== pathB[i])\n      break;\n  }\n  return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/any.js\nfunction parseAnyDef(refs) {\n  if (refs.target !== \"openAi\") {\n    return {};\n  }\n  const anyDefinitionPath = [\n    ...refs.basePath,\n    refs.definitionPath,\n    refs.openAiAnyTypeName\n  ];\n  refs.flags.hasReferencedOpenAiAnyType = true;\n  return {\n    $ref: refs.$refStrategy === \"relative\" ? getRelativePath(anyDefinitionPath, refs.currentPath) : anyDefinitionPath.join(\"/\")\n  };\n}\nfunction parseArrayDef(def, refs) {\n  const res = {\n    type: \"array\"\n  };\n  if (def.type?._def && def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n    res.items = parseDef(def.type._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"items\"]\n    });\n  }\n  if (def.minLength) {\n    setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n  }\n  if (def.maxLength) {\n    setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n  }\n  if (def.exactLength) {\n    setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n    setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n  }\n  return res;\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js\nfunction parseBigintDef(def, refs) {\n  const res = {\n    type: \"integer\",\n    format: \"int64\"\n  };\n  if (!def.checks)\n    return res;\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case \"min\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n          } else {\n            setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMinimum = true;\n          }\n          setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n        }\n        break;\n      case \"max\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n          } else {\n            setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMaximum = true;\n          }\n          setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n        }\n        break;\n      case \"multipleOf\":\n        setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n        break;\n    }\n  }\n  return res;\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js\nfunction parseBooleanDef() {\n  return {\n    type: \"boolean\"\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js\nfunction parseBrandedDef(_def, refs) {\n  return parseDef(_def.type._def, refs);\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js\nvar parseCatchDef = (def, refs) => {\n  return parseDef(def.innerType._def, refs);\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/date.js\nfunction parseDateDef(def, refs, overrideDateStrategy) {\n  const strategy = overrideDateStrategy ?? refs.dateStrategy;\n  if (Array.isArray(strategy)) {\n    return {\n      anyOf: strategy.map((item, i) => parseDateDef(def, refs, item))\n    };\n  }\n  switch (strategy) {\n    case \"string\":\n    case \"format:date-time\":\n      return {\n        type: \"string\",\n        format: \"date-time\"\n      };\n    case \"format:date\":\n      return {\n        type: \"string\",\n        format: \"date\"\n      };\n    case \"integer\":\n      return integerDateParser(def, refs);\n  }\n}\nvar integerDateParser = (def, refs) => {\n  const res = {\n    type: \"integer\",\n    format: \"unix-time\"\n  };\n  if (refs.target === \"openApi3\") {\n    return res;\n  }\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case \"min\":\n        setResponseValueAndErrors(\n          res,\n          \"minimum\",\n          check.value,\n          // This is in milliseconds\n          check.message,\n          refs\n        );\n        break;\n      case \"max\":\n        setResponseValueAndErrors(\n          res,\n          \"maximum\",\n          check.value,\n          // This is in milliseconds\n          check.message,\n          refs\n        );\n        break;\n    }\n  }\n  return res;\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/default.js\nfunction parseDefaultDef(_def, refs) {\n  return {\n    ...parseDef(_def.innerType._def, refs),\n    default: _def.defaultValue()\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js\nfunction parseEffectsDef(_def, refs) {\n  return refs.effectStrategy === \"input\" ? parseDef(_def.schema._def, refs) : parseAnyDef(refs);\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js\nfunction parseEnumDef(def) {\n  return {\n    type: \"string\",\n    enum: Array.from(def.values)\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js\nvar isJsonSchema7AllOfType = (type) => {\n  if (\"type\" in type && type.type === \"string\")\n    return false;\n  return \"allOf\" in type;\n};\nfunction parseIntersectionDef(def, refs) {\n  const allOf = [\n    parseDef(def.left._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"allOf\", \"0\"]\n    }),\n    parseDef(def.right._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"allOf\", \"1\"]\n    })\n  ].filter((x) => !!x);\n  let unevaluatedProperties = refs.target === \"jsonSchema2019-09\" ? { unevaluatedProperties: false } : void 0;\n  const mergedAllOf = [];\n  allOf.forEach((schema) => {\n    if (isJsonSchema7AllOfType(schema)) {\n      mergedAllOf.push(...schema.allOf);\n      if (schema.unevaluatedProperties === void 0) {\n        unevaluatedProperties = void 0;\n      }\n    } else {\n      let nestedSchema = schema;\n      if (\"additionalProperties\" in schema && schema.additionalProperties === false) {\n        const { additionalProperties, ...rest } = schema;\n        nestedSchema = rest;\n      } else {\n        unevaluatedProperties = void 0;\n      }\n      mergedAllOf.push(nestedSchema);\n    }\n  });\n  return mergedAllOf.length ? {\n    allOf: mergedAllOf,\n    ...unevaluatedProperties\n  } : void 0;\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js\nfunction parseLiteralDef(def, refs) {\n  const parsedType = typeof def.value;\n  if (parsedType !== \"bigint\" && parsedType !== \"number\" && parsedType !== \"boolean\" && parsedType !== \"string\") {\n    return {\n      type: Array.isArray(def.value) ? \"array\" : \"object\"\n    };\n  }\n  if (refs.target === \"openApi3\") {\n    return {\n      type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n      enum: [def.value]\n    };\n  }\n  return {\n    type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n    const: def.value\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/string.js\nvar emojiRegex = void 0;\nvar zodPatterns = {\n  /**\n   * `c` was changed to `[cC]` to replicate /i flag\n   */\n  cuid: /^[cC][^\\s-]{8,}$/,\n  cuid2: /^[0-9a-z]+$/,\n  ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n  /**\n   * `a-z` was added to replicate /i flag\n   */\n  email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n  /**\n   * Constructed a valid Unicode RegExp\n   *\n   * Lazily instantiate since this type of regex isn't supported\n   * in all envs (e.g. React Native).\n   *\n   * See:\n   * https://github.com/colinhacks/zod/issues/2433\n   * Fix in Zod:\n   * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n   */\n  emoji: () => {\n    if (emojiRegex === void 0) {\n      emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n    }\n    return emojiRegex;\n  },\n  /**\n   * Unused\n   */\n  uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n  /**\n   * Unused\n   */\n  ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n  ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n  /**\n   * Unused\n   */\n  ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n  ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n  base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n  base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n  nanoid: /^[a-zA-Z0-9_-]{21}$/,\n  jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/\n};\nfunction parseStringDef(def, refs) {\n  const res = {\n    type: \"string\"\n  };\n  if (def.checks) {\n    for (const check of def.checks) {\n      switch (check.kind) {\n        case \"min\":\n          setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\" ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n          break;\n        case \"max\":\n          setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\" ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n          break;\n        case \"email\":\n          switch (refs.emailStrategy) {\n            case \"format:email\":\n              addFormat(res, \"email\", check.message, refs);\n              break;\n            case \"format:idn-email\":\n              addFormat(res, \"idn-email\", check.message, refs);\n              break;\n            case \"pattern:zod\":\n              addPattern(res, zodPatterns.email, check.message, refs);\n              break;\n          }\n          break;\n        case \"url\":\n          addFormat(res, \"uri\", check.message, refs);\n          break;\n        case \"uuid\":\n          addFormat(res, \"uuid\", check.message, refs);\n          break;\n        case \"regex\":\n          addPattern(res, check.regex, check.message, refs);\n          break;\n        case \"cuid\":\n          addPattern(res, zodPatterns.cuid, check.message, refs);\n          break;\n        case \"cuid2\":\n          addPattern(res, zodPatterns.cuid2, check.message, refs);\n          break;\n        case \"startsWith\":\n          addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n          break;\n        case \"endsWith\":\n          addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n          break;\n        case \"datetime\":\n          addFormat(res, \"date-time\", check.message, refs);\n          break;\n        case \"date\":\n          addFormat(res, \"date\", check.message, refs);\n          break;\n        case \"time\":\n          addFormat(res, \"time\", check.message, refs);\n          break;\n        case \"duration\":\n          addFormat(res, \"duration\", check.message, refs);\n          break;\n        case \"length\":\n          setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\" ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n          setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\" ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n          break;\n        case \"includes\": {\n          addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n          break;\n        }\n        case \"ip\": {\n          if (check.version !== \"v6\") {\n            addFormat(res, \"ipv4\", check.message, refs);\n          }\n          if (check.version !== \"v4\") {\n            addFormat(res, \"ipv6\", check.message, refs);\n          }\n          break;\n        }\n        case \"base64url\":\n          addPattern(res, zodPatterns.base64url, check.message, refs);\n          break;\n        case \"jwt\":\n          addPattern(res, zodPatterns.jwt, check.message, refs);\n          break;\n        case \"cidr\": {\n          if (check.version !== \"v6\") {\n            addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n          }\n          if (check.version !== \"v4\") {\n            addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n          }\n          break;\n        }\n        case \"emoji\":\n          addPattern(res, zodPatterns.emoji(), check.message, refs);\n          break;\n        case \"ulid\": {\n          addPattern(res, zodPatterns.ulid, check.message, refs);\n          break;\n        }\n        case \"base64\": {\n          switch (refs.base64Strategy) {\n            case \"format:binary\": {\n              addFormat(res, \"binary\", check.message, refs);\n              break;\n            }\n            case \"contentEncoding:base64\": {\n              setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n              break;\n            }\n            case \"pattern:zod\": {\n              addPattern(res, zodPatterns.base64, check.message, refs);\n              break;\n            }\n          }\n          break;\n        }\n        case \"nanoid\": {\n          addPattern(res, zodPatterns.nanoid, check.message, refs);\n        }\n      }\n    }\n  }\n  return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n  return refs.patternStrategy === \"escape\" ? escapeNonAlphaNumeric(literal) : literal;\n}\nvar ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n  let result = \"\";\n  for (let i = 0; i < source.length; i++) {\n    if (!ALPHA_NUMERIC.has(source[i])) {\n      result += \"\\\\\";\n    }\n    result += source[i];\n  }\n  return result;\n}\nfunction addFormat(schema, value, message, refs) {\n  if (schema.format || schema.anyOf?.some((x) => x.format)) {\n    if (!schema.anyOf) {\n      schema.anyOf = [];\n    }\n    if (schema.format) {\n      schema.anyOf.push({\n        format: schema.format,\n        ...schema.errorMessage && refs.errorMessages && {\n          errorMessage: { format: schema.errorMessage.format }\n        }\n      });\n      delete schema.format;\n      if (schema.errorMessage) {\n        delete schema.errorMessage.format;\n        if (Object.keys(schema.errorMessage).length === 0) {\n          delete schema.errorMessage;\n        }\n      }\n    }\n    schema.anyOf.push({\n      format: value,\n      ...message && refs.errorMessages && { errorMessage: { format: message } }\n    });\n  } else {\n    setResponseValueAndErrors(schema, \"format\", value, message, refs);\n  }\n}\nfunction addPattern(schema, regex, message, refs) {\n  if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n    if (!schema.allOf) {\n      schema.allOf = [];\n    }\n    if (schema.pattern) {\n      schema.allOf.push({\n        pattern: schema.pattern,\n        ...schema.errorMessage && refs.errorMessages && {\n          errorMessage: { pattern: schema.errorMessage.pattern }\n        }\n      });\n      delete schema.pattern;\n      if (schema.errorMessage) {\n        delete schema.errorMessage.pattern;\n        if (Object.keys(schema.errorMessage).length === 0) {\n          delete schema.errorMessage;\n        }\n      }\n    }\n    schema.allOf.push({\n      pattern: stringifyRegExpWithFlags(regex, refs),\n      ...message && refs.errorMessages && { errorMessage: { pattern: message } }\n    });\n  } else {\n    setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n  }\n}\nfunction stringifyRegExpWithFlags(regex, refs) {\n  if (!refs.applyRegexFlags || !regex.flags) {\n    return regex.source;\n  }\n  const flags = {\n    i: regex.flags.includes(\"i\"),\n    m: regex.flags.includes(\"m\"),\n    s: regex.flags.includes(\"s\")\n    // `.` matches newlines\n  };\n  const source = flags.i ? regex.source.toLowerCase() : regex.source;\n  let pattern = \"\";\n  let isEscaped = false;\n  let inCharGroup = false;\n  let inCharRange = false;\n  for (let i = 0; i < source.length; i++) {\n    if (isEscaped) {\n      pattern += source[i];\n      isEscaped = false;\n      continue;\n    }\n    if (flags.i) {\n      if (inCharGroup) {\n        if (source[i].match(/[a-z]/)) {\n          if (inCharRange) {\n            pattern += source[i];\n            pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n            inCharRange = false;\n          } else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n            pattern += source[i];\n            inCharRange = true;\n          } else {\n            pattern += `${source[i]}${source[i].toUpperCase()}`;\n          }\n          continue;\n        }\n      } else if (source[i].match(/[a-z]/)) {\n        pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n        continue;\n      }\n    }\n    if (flags.m) {\n      if (source[i] === \"^\") {\n        pattern += `(^|(?<=[\\r\n]))`;\n        continue;\n      } else if (source[i] === \"$\") {\n        pattern += `($|(?=[\\r\n]))`;\n        continue;\n      }\n    }\n    if (flags.s && source[i] === \".\") {\n      pattern += inCharGroup ? `${source[i]}\\r\n` : `[${source[i]}\\r\n]`;\n      continue;\n    }\n    pattern += source[i];\n    if (source[i] === \"\\\\\") {\n      isEscaped = true;\n    } else if (inCharGroup && source[i] === \"]\") {\n      inCharGroup = false;\n    } else if (!inCharGroup && source[i] === \"[\") {\n      inCharGroup = true;\n    }\n  }\n  return pattern;\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/record.js\nfunction parseRecordDef(def, refs) {\n  if (refs.target === \"openAi\") {\n    console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n  }\n  if (refs.target === \"openApi3\" && def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      type: \"object\",\n      required: def.keyType._def.values,\n      properties: def.keyType._def.values.reduce((acc, key) => ({\n        ...acc,\n        [key]: parseDef(def.valueType._def, {\n          ...refs,\n          currentPath: [...refs.currentPath, \"properties\", key]\n        }) ?? parseAnyDef(refs)\n      }), {}),\n      additionalProperties: refs.rejectedAdditionalProperties\n    };\n  }\n  const schema = {\n    type: \"object\",\n    additionalProperties: parseDef(def.valueType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"additionalProperties\"]\n    }) ?? refs.allowedAdditionalProperties\n  };\n  if (refs.target === \"openApi3\") {\n    return schema;\n  }\n  if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.checks?.length) {\n    const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n    return {\n      ...schema,\n      propertyNames: keyType\n    };\n  } else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      ...schema,\n      propertyNames: {\n        enum: def.keyType._def.values\n      }\n    };\n  } else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded && def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.type._def.checks?.length) {\n    const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n    return {\n      ...schema,\n      propertyNames: keyType\n    };\n  }\n  return schema;\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/map.js\nfunction parseMapDef(def, refs) {\n  if (refs.mapStrategy === \"record\") {\n    return parseRecordDef(def, refs);\n  }\n  const keys = parseDef(def.keyType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"]\n  }) || parseAnyDef(refs);\n  const values = parseDef(def.valueType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"]\n  }) || parseAnyDef(refs);\n  return {\n    type: \"array\",\n    maxItems: 125,\n    items: {\n      type: \"array\",\n      items: [keys, values],\n      minItems: 2,\n      maxItems: 2\n    }\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js\nfunction parseNativeEnumDef(def) {\n  const object = def.values;\n  const actualKeys = Object.keys(def.values).filter((key) => {\n    return typeof object[object[key]] !== \"number\";\n  });\n  const actualValues = actualKeys.map((key) => object[key]);\n  const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n  return {\n    type: parsedTypes.length === 1 ? parsedTypes[0] === \"string\" ? \"string\" : \"number\" : [\"string\", \"number\"],\n    enum: actualValues\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/never.js\nfunction parseNeverDef(refs) {\n  return refs.target === \"openAi\" ? void 0 : {\n    not: parseAnyDef({\n      ...refs,\n      currentPath: [...refs.currentPath, \"not\"]\n    })\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/null.js\nfunction parseNullDef(refs) {\n  return refs.target === \"openApi3\" ? {\n    enum: [\"null\"],\n    nullable: true\n  } : {\n    type: \"null\"\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/union.js\nvar primitiveMappings = {\n  ZodString: \"string\",\n  ZodNumber: \"number\",\n  ZodBigInt: \"integer\",\n  ZodBoolean: \"boolean\",\n  ZodNull: \"null\"\n};\nfunction parseUnionDef(def, refs) {\n  if (refs.target === \"openApi3\")\n    return asAnyOf(def, refs);\n  const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n  if (options.every((x) => x._def.typeName in primitiveMappings && (!x._def.checks || !x._def.checks.length))) {\n    const types = options.reduce((types2, x) => {\n      const type = primitiveMappings[x._def.typeName];\n      return type && !types2.includes(type) ? [...types2, type] : types2;\n    }, []);\n    return {\n      type: types.length > 1 ? types : types[0]\n    };\n  } else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n    const types = options.reduce((acc, x) => {\n      const type = typeof x._def.value;\n      switch (type) {\n        case \"string\":\n        case \"number\":\n        case \"boolean\":\n          return [...acc, type];\n        case \"bigint\":\n          return [...acc, \"integer\"];\n        case \"object\":\n          if (x._def.value === null)\n            return [...acc, \"null\"];\n        case \"symbol\":\n        case \"undefined\":\n        case \"function\":\n        default:\n          return acc;\n      }\n    }, []);\n    if (types.length === options.length) {\n      const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n      return {\n        type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n        enum: options.reduce((acc, x) => {\n          return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n        }, [])\n      };\n    }\n  } else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n    return {\n      type: \"string\",\n      enum: options.reduce((acc, x) => [\n        ...acc,\n        ...x._def.values.filter((x2) => !acc.includes(x2))\n      ], [])\n    };\n  }\n  return asAnyOf(def, refs);\n}\nvar asAnyOf = (def, refs) => {\n  const anyOf = (def.options instanceof Map ? Array.from(def.options.values()) : def.options).map((x, i) => parseDef(x._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"anyOf\", `${i}`]\n  })).filter((x) => !!x && (!refs.strictUnions || typeof x === \"object\" && Object.keys(x).length > 0));\n  return anyOf.length ? { anyOf } : void 0;\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js\nfunction parseNullableDef(def, refs) {\n  if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) && (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n    if (refs.target === \"openApi3\") {\n      return {\n        type: primitiveMappings[def.innerType._def.typeName],\n        nullable: true\n      };\n    }\n    return {\n      type: [\n        primitiveMappings[def.innerType._def.typeName],\n        \"null\"\n      ]\n    };\n  }\n  if (refs.target === \"openApi3\") {\n    const base2 = parseDef(def.innerType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath]\n    });\n    if (base2 && \"$ref\" in base2)\n      return { allOf: [base2], nullable: true };\n    return base2 && { ...base2, nullable: true };\n  }\n  const base = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"anyOf\", \"0\"]\n  });\n  return base && { anyOf: [base, { type: \"null\" }] };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/number.js\nfunction parseNumberDef(def, refs) {\n  const res = {\n    type: \"number\"\n  };\n  if (!def.checks)\n    return res;\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case \"int\":\n        res.type = \"integer\";\n        addErrorMessage(res, \"type\", check.message, refs);\n        break;\n      case \"min\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n          } else {\n            setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMinimum = true;\n          }\n          setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n        }\n        break;\n      case \"max\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n          } else {\n            setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMaximum = true;\n          }\n          setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n        }\n        break;\n      case \"multipleOf\":\n        setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n        break;\n    }\n  }\n  return res;\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/object.js\nfunction parseObjectDef(def, refs) {\n  const forceOptionalIntoNullable = refs.target === \"openAi\";\n  const result = {\n    type: \"object\",\n    properties: {}\n  };\n  const required = [];\n  const shape = def.shape();\n  for (const propName in shape) {\n    let propDef = shape[propName];\n    if (propDef === void 0 || propDef._def === void 0) {\n      continue;\n    }\n    let propOptional = safeIsOptional(propDef);\n    if (propOptional && forceOptionalIntoNullable) {\n      if (propDef._def.typeName === \"ZodOptional\") {\n        propDef = propDef._def.innerType;\n      }\n      if (!propDef.isNullable()) {\n        propDef = propDef.nullable();\n      }\n      propOptional = false;\n    }\n    const parsedDef = parseDef(propDef._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"properties\", propName],\n      propertyPath: [...refs.currentPath, \"properties\", propName]\n    });\n    if (parsedDef === void 0) {\n      continue;\n    }\n    result.properties[propName] = parsedDef;\n    if (!propOptional) {\n      required.push(propName);\n    }\n  }\n  if (required.length) {\n    result.required = required;\n  }\n  const additionalProperties = decideAdditionalProperties(def, refs);\n  if (additionalProperties !== void 0) {\n    result.additionalProperties = additionalProperties;\n  }\n  return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n  if (def.catchall._def.typeName !== \"ZodNever\") {\n    return parseDef(def.catchall._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"additionalProperties\"]\n    });\n  }\n  switch (def.unknownKeys) {\n    case \"passthrough\":\n      return refs.allowedAdditionalProperties;\n    case \"strict\":\n      return refs.rejectedAdditionalProperties;\n    case \"strip\":\n      return refs.removeAdditionalStrategy === \"strict\" ? refs.allowedAdditionalProperties : refs.rejectedAdditionalProperties;\n  }\n}\nfunction safeIsOptional(schema) {\n  try {\n    return schema.isOptional();\n  } catch {\n    return true;\n  }\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js\nvar parseOptionalDef = (def, refs) => {\n  if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n    return parseDef(def.innerType._def, refs);\n  }\n  const innerSchema = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"anyOf\", \"1\"]\n  });\n  return innerSchema ? {\n    anyOf: [\n      {\n        not: parseAnyDef(refs)\n      },\n      innerSchema\n    ]\n  } : parseAnyDef(refs);\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js\nvar parsePipelineDef = (def, refs) => {\n  if (refs.pipeStrategy === \"input\") {\n    return parseDef(def.in._def, refs);\n  } else if (refs.pipeStrategy === \"output\") {\n    return parseDef(def.out._def, refs);\n  }\n  const a = parseDef(def.in._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"allOf\", \"0\"]\n  });\n  const b = parseDef(def.out._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"]\n  });\n  return {\n    allOf: [a, b].filter((x) => x !== void 0)\n  };\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js\nfunction parsePromiseDef(def, refs) {\n  return parseDef(def.type._def, refs);\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/set.js\nfunction parseSetDef(def, refs) {\n  const items = parseDef(def.valueType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"items\"]\n  });\n  const schema = {\n    type: \"array\",\n    uniqueItems: true,\n    items\n  };\n  if (def.minSize) {\n    setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n  }\n  if (def.maxSize) {\n    setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n  }\n  return schema;\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js\nfunction parseTupleDef(def, refs) {\n  if (def.rest) {\n    return {\n      type: \"array\",\n      minItems: def.items.length,\n      items: def.items.map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", `${i}`]\n      })).reduce((acc, x) => x === void 0 ? acc : [...acc, x], []),\n      additionalItems: parseDef(def.rest._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"additionalItems\"]\n      })\n    };\n  } else {\n    return {\n      type: \"array\",\n      minItems: def.items.length,\n      maxItems: def.items.length,\n      items: def.items.map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", `${i}`]\n      })).reduce((acc, x) => x === void 0 ? acc : [...acc, x], [])\n    };\n  }\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js\nfunction parseUndefinedDef(refs) {\n  return {\n    not: parseAnyDef(refs)\n  };\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js\nfunction parseUnknownDef(refs) {\n  return parseAnyDef(refs);\n}\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js\nvar parseReadonlyDef = (def, refs) => {\n  return parseDef(def.innerType._def, refs);\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/selectParser.js\nvar selectParser = (def, typeName, refs) => {\n  switch (typeName) {\n    case ZodFirstPartyTypeKind.ZodString:\n      return parseStringDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodNumber:\n      return parseNumberDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodObject:\n      return parseObjectDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBigInt:\n      return parseBigintDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBoolean:\n      return parseBooleanDef();\n    case ZodFirstPartyTypeKind.ZodDate:\n      return parseDateDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodUndefined:\n      return parseUndefinedDef(refs);\n    case ZodFirstPartyTypeKind.ZodNull:\n      return parseNullDef(refs);\n    case ZodFirstPartyTypeKind.ZodArray:\n      return parseArrayDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodUnion:\n    case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n      return parseUnionDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodIntersection:\n      return parseIntersectionDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodTuple:\n      return parseTupleDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodRecord:\n      return parseRecordDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodLiteral:\n      return parseLiteralDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodEnum:\n      return parseEnumDef(def);\n    case ZodFirstPartyTypeKind.ZodNativeEnum:\n      return parseNativeEnumDef(def);\n    case ZodFirstPartyTypeKind.ZodNullable:\n      return parseNullableDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodOptional:\n      return parseOptionalDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodMap:\n      return parseMapDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodSet:\n      return parseSetDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodLazy:\n      return () => def.getter()._def;\n    case ZodFirstPartyTypeKind.ZodPromise:\n      return parsePromiseDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodNaN:\n    case ZodFirstPartyTypeKind.ZodNever:\n      return parseNeverDef(refs);\n    case ZodFirstPartyTypeKind.ZodEffects:\n      return parseEffectsDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodAny:\n      return parseAnyDef(refs);\n    case ZodFirstPartyTypeKind.ZodUnknown:\n      return parseUnknownDef(refs);\n    case ZodFirstPartyTypeKind.ZodDefault:\n      return parseDefaultDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBranded:\n      return parseBrandedDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodReadonly:\n      return parseReadonlyDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodCatch:\n      return parseCatchDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodPipeline:\n      return parsePipelineDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodFunction:\n    case ZodFirstPartyTypeKind.ZodVoid:\n    case ZodFirstPartyTypeKind.ZodSymbol:\n      return void 0;\n    default:\n      return /* @__PURE__ */ ((_) => void 0)();\n  }\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/parseDef.js\nfunction parseDef(def, refs, forceResolution = false) {\n  const seenItem = refs.seen.get(def);\n  if (refs.override) {\n    const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n    if (overrideResult !== ignoreOverride) {\n      return overrideResult;\n    }\n  }\n  if (seenItem && !forceResolution) {\n    const seenSchema = get$ref(seenItem, refs);\n    if (seenSchema !== void 0) {\n      return seenSchema;\n    }\n  }\n  const newItem = { def, path: refs.currentPath, jsonSchema: void 0 };\n  refs.seen.set(def, newItem);\n  const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n  const jsonSchema = typeof jsonSchemaOrGetter === \"function\" ? parseDef(jsonSchemaOrGetter(), refs) : jsonSchemaOrGetter;\n  if (jsonSchema) {\n    addMeta(def, refs, jsonSchema);\n  }\n  if (refs.postProcess) {\n    const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n    newItem.jsonSchema = jsonSchema;\n    return postProcessResult;\n  }\n  newItem.jsonSchema = jsonSchema;\n  return jsonSchema;\n}\nvar get$ref = (item, refs) => {\n  switch (refs.$refStrategy) {\n    case \"root\":\n      return { $ref: item.path.join(\"/\") };\n    case \"relative\":\n      return { $ref: getRelativePath(refs.currentPath, item.path) };\n    case \"none\":\n    case \"seen\": {\n      if (item.path.length < refs.currentPath.length && item.path.every((value, index) => refs.currentPath[index] === value)) {\n        console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n        return parseAnyDef(refs);\n      }\n      return refs.$refStrategy === \"seen\" ? parseAnyDef(refs) : void 0;\n    }\n  }\n};\nvar addMeta = (def, refs, jsonSchema) => {\n  if (def.description) {\n    jsonSchema.description = def.description;\n    if (refs.markdownDescription) {\n      jsonSchema.markdownDescription = def.description;\n    }\n  }\n  return jsonSchema;\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js\nvar zodToJsonSchema = (schema, options) => {\n  const refs = getRefs(options);\n  let definitions = typeof options === \"object\" && options.definitions ? Object.entries(options.definitions).reduce((acc, [name2, schema2]) => ({\n    ...acc,\n    [name2]: parseDef(schema2._def, {\n      ...refs,\n      currentPath: [...refs.basePath, refs.definitionPath, name2]\n    }, true) ?? parseAnyDef(refs)\n  }), {}) : void 0;\n  const name = typeof options === \"string\" ? options : options?.nameStrategy === \"title\" ? void 0 : options?.name;\n  const main = parseDef(schema._def, name === void 0 ? refs : {\n    ...refs,\n    currentPath: [...refs.basePath, refs.definitionPath, name]\n  }, false) ?? parseAnyDef(refs);\n  const title = typeof options === \"object\" && options.name !== void 0 && options.nameStrategy === \"title\" ? options.name : void 0;\n  if (title !== void 0) {\n    main.title = title;\n  }\n  if (refs.flags.hasReferencedOpenAiAnyType) {\n    if (!definitions) {\n      definitions = {};\n    }\n    if (!definitions[refs.openAiAnyTypeName]) {\n      definitions[refs.openAiAnyTypeName] = {\n        // Skipping \"object\" as no properties can be defined and additionalProperties must be \"false\"\n        type: [\"string\", \"number\", \"integer\", \"boolean\", \"array\", \"null\"],\n        items: {\n          $ref: refs.$refStrategy === \"relative\" ? \"1\" : [\n            ...refs.basePath,\n            refs.definitionPath,\n            refs.openAiAnyTypeName\n          ].join(\"/\")\n        }\n      };\n    }\n  }\n  const combined = name === void 0 ? definitions ? {\n    ...main,\n    [refs.definitionPath]: definitions\n  } : main : {\n    $ref: [\n      ...refs.$refStrategy === \"relative\" ? [] : refs.basePath,\n      refs.definitionPath,\n      name\n    ].join(\"/\"),\n    [refs.definitionPath]: {\n      ...definitions,\n      [name]: main\n    }\n  };\n  if (refs.target === \"jsonSchema7\") {\n    combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n  } else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n    combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n  }\n  if (refs.target === \"openAi\" && (\"anyOf\" in combined || \"oneOf\" in combined || \"allOf\" in combined || \"type\" in combined && Array.isArray(combined.type))) {\n    console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n  }\n  return combined;\n};\n\n// ../../node_modules/.pnpm/zod-to-json-schema@3.24.6_zod@3.25.67/node_modules/zod-to-json-schema/dist/esm/index.js\nvar esm_default = zodToJsonSchema;\n\nexport { esm_default, stringify };\n","// src/server/http-exception.ts\nvar HTTPException = class extends Error {\n  res;\n  status;\n  /**\n   * Creates an instance of `HTTPException`.\n   * @param status - HTTP status code for the exception. Defaults to 500.\n   * @param options - Additional options for the exception.\n   */\n  constructor(status = 500, options) {\n    super(options?.message, { cause: options?.cause });\n    this.res = options?.res;\n    this.status = status;\n    this.stack = options?.stack || this.stack;\n  }\n  /**\n   * Returns the response object associated with the exception.\n   * If a response object is not provided, a new response is created with the error message and status code.\n   * @returns The response object.\n   */\n  getResponse() {\n    if (this.res) {\n      const newResponse = new Response(this.res.body, {\n        status: this.status,\n        headers: this.res.headers\n      });\n      return newResponse;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\n\nexport { HTTPException };\n","import { HTTPException } from './chunk-LCM566I4.js';\n\n// src/server/handlers/utils.ts\nfunction validateBody(body) {\n  const errorResponse = Object.entries(body).reduce((acc, [key, value]) => {\n    if (!value) {\n      acc[key] = `Argument \"${key}\" is required`;\n    }\n    return acc;\n  }, {});\n  if (Object.keys(errorResponse).length > 0) {\n    throw new HTTPException(400, { message: Object.values(errorResponse)[0] });\n  }\n}\n\nexport { validateBody };\n","import { HTTPException } from './chunk-LCM566I4.js';\n\n// src/server/handlers/error.ts\nfunction handleError(error, defaultMessage) {\n  const apiError = error;\n  const apiErrorStatus = apiError.status || apiError.details?.status || 500;\n  throw new HTTPException(apiErrorStatus, {\n    message: apiError.message || defaultMessage,\n    stack: apiError.stack,\n    cause: apiError.cause\n  });\n}\n\nexport { handleError };\n","import { stringify, esm_default } from './chunk-MEGCYGBU.js';\nimport { validateBody } from './chunk-RSEO4XPX.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\nimport { RuntimeContext } from '@mastra/core/runtime-context';\n\n// src/server/handlers/agents.ts\nvar agents_exports = {};\n__export(agents_exports, {\n  generateHandler: () => generateHandler,\n  getAgentByIdHandler: () => getAgentByIdHandler,\n  getAgentsHandler: () => getAgentsHandler,\n  getEvalsByAgentIdHandler: () => getEvalsByAgentIdHandler,\n  getLiveEvalsByAgentIdHandler: () => getLiveEvalsByAgentIdHandler,\n  streamGenerateHandler: () => streamGenerateHandler\n});\nasync function getAgentsHandler({ mastra, runtimeContext }) {\n  try {\n    const agents = mastra.getAgents();\n    const serializedAgentsMap = await Promise.all(\n      Object.entries(agents).map(async ([id, agent]) => {\n        const instructions = await agent.getInstructions({ runtimeContext });\n        const tools = await agent.getTools({ runtimeContext });\n        const llm = await agent.getLLM({ runtimeContext });\n        const defaultGenerateOptions = await agent.getDefaultGenerateOptions({ runtimeContext });\n        const defaultStreamOptions = await agent.getDefaultStreamOptions({ runtimeContext });\n        const serializedAgentTools = Object.entries(tools || {}).reduce((acc, [key, tool]) => {\n          const _tool = tool;\n          acc[key] = {\n            ..._tool,\n            inputSchema: _tool.inputSchema ? stringify(esm_default(_tool.inputSchema)) : void 0,\n            outputSchema: _tool.outputSchema ? stringify(esm_default(_tool.outputSchema)) : void 0\n          };\n          return acc;\n        }, {});\n        let serializedAgentWorkflows = {};\n        if (\"getWorkflows\" in agent) {\n          const logger = mastra.getLogger();\n          try {\n            const workflows = await agent.getWorkflows({ runtimeContext });\n            serializedAgentWorkflows = Object.entries(workflows || {}).reduce((acc, [key, workflow]) => {\n              return {\n                ...acc,\n                [key]: {\n                  name: workflow.name\n                }\n              };\n            }, {});\n          } catch (error) {\n            logger.error(\"Error getting workflows for agent\", { agentName: agent.name, error });\n          }\n        }\n        return {\n          id,\n          name: agent.name,\n          instructions,\n          tools: serializedAgentTools,\n          workflows: serializedAgentWorkflows,\n          provider: llm?.getProvider(),\n          modelId: llm?.getModelId(),\n          defaultGenerateOptions,\n          defaultStreamOptions\n        };\n      })\n    );\n    const serializedAgents = serializedAgentsMap.reduce((acc, { id, ...rest }) => {\n      acc[id] = rest;\n      return acc;\n    }, {});\n    return serializedAgents;\n  } catch (error) {\n    return handleError(error, \"Error getting agents\");\n  }\n}\nasync function getAgentByIdHandler({\n  mastra,\n  runtimeContext,\n  agentId,\n  isPlayground = false\n}) {\n  try {\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Agent not found\" });\n    }\n    const tools = await agent.getTools({ runtimeContext });\n    const serializedAgentTools = Object.entries(tools || {}).reduce((acc, [key, tool]) => {\n      const _tool = tool;\n      acc[key] = {\n        ..._tool,\n        inputSchema: _tool.inputSchema ? stringify(esm_default(_tool.inputSchema)) : void 0,\n        outputSchema: _tool.outputSchema ? stringify(esm_default(_tool.outputSchema)) : void 0\n      };\n      return acc;\n    }, {});\n    let serializedAgentWorkflows = {};\n    if (\"getWorkflows\" in agent) {\n      const logger = mastra.getLogger();\n      try {\n        const workflows = await agent.getWorkflows({ runtimeContext });\n        serializedAgentWorkflows = Object.entries(workflows || {}).reduce((acc, [key, workflow]) => {\n          return {\n            ...acc,\n            [key]: {\n              name: workflow.name,\n              steps: Object.entries(workflow.steps).reduce((acc2, [key2, step]) => {\n                return {\n                  ...acc2,\n                  [key2]: {\n                    id: step.id,\n                    description: step.description\n                  }\n                };\n              }, {})\n            }\n          };\n        }, {});\n      } catch (error) {\n        logger.error(\"Error getting workflows for agent\", { agentName: agent.name, error });\n      }\n    }\n    let proxyRuntimeContext = runtimeContext;\n    if (isPlayground) {\n      proxyRuntimeContext = new Proxy(runtimeContext, {\n        get(target, prop) {\n          if (prop === \"get\") {\n            return function(key) {\n              const value = target.get(key);\n              return value ?? `<${key}>`;\n            };\n          }\n          return Reflect.get(target, prop);\n        }\n      });\n    }\n    const instructions = await agent.getInstructions({ runtimeContext: proxyRuntimeContext });\n    const llm = await agent.getLLM({ runtimeContext });\n    const defaultGenerateOptions = await agent.getDefaultGenerateOptions({ runtimeContext: proxyRuntimeContext });\n    const defaultStreamOptions = await agent.getDefaultStreamOptions({ runtimeContext: proxyRuntimeContext });\n    return {\n      name: agent.name,\n      instructions,\n      tools: serializedAgentTools,\n      workflows: serializedAgentWorkflows,\n      provider: llm?.getProvider(),\n      modelId: llm?.getModelId(),\n      defaultGenerateOptions,\n      defaultStreamOptions\n    };\n  } catch (error) {\n    return handleError(error, \"Error getting agent\");\n  }\n}\nasync function getEvalsByAgentIdHandler({\n  mastra,\n  runtimeContext,\n  agentId\n}) {\n  try {\n    const agent = mastra.getAgent(agentId);\n    const evals = await mastra.getStorage()?.getEvalsByAgentName?.(agent.name, \"test\") || [];\n    const instructions = await agent.getInstructions({ runtimeContext });\n    return {\n      id: agentId,\n      name: agent.name,\n      instructions,\n      evals\n    };\n  } catch (error) {\n    return handleError(error, \"Error getting test evals\");\n  }\n}\nasync function getLiveEvalsByAgentIdHandler({\n  mastra,\n  runtimeContext,\n  agentId\n}) {\n  try {\n    const agent = mastra.getAgent(agentId);\n    const evals = await mastra.getStorage()?.getEvalsByAgentName?.(agent.name, \"live\") || [];\n    const instructions = await agent.getInstructions({ runtimeContext });\n    return {\n      id: agentId,\n      name: agent.name,\n      instructions,\n      evals\n    };\n  } catch (error) {\n    return handleError(error, \"Error getting live evals\");\n  }\n}\nasync function generateHandler({\n  mastra,\n  runtimeContext,\n  agentId,\n  body,\n  abortSignal\n}) {\n  try {\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Agent not found\" });\n    }\n    const { messages, resourceId, resourceid, runtimeContext: agentRuntimeContext, ...rest } = body;\n    const finalResourceId = resourceId ?? resourceid;\n    const finalRuntimeContext = new RuntimeContext([\n      ...Array.from(runtimeContext.entries()),\n      ...Array.from(Object.entries(agentRuntimeContext ?? {}))\n    ]);\n    validateBody({ messages });\n    const result = await agent.generate(messages, {\n      ...rest,\n      // @ts-expect-error TODO fix types\n      resourceId: finalResourceId,\n      runtimeContext: finalRuntimeContext,\n      signal: abortSignal\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error generating from agent\");\n  }\n}\nasync function streamGenerateHandler({\n  mastra,\n  runtimeContext,\n  agentId,\n  body,\n  abortSignal\n}) {\n  try {\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Agent not found\" });\n    }\n    const { messages, resourceId, resourceid, runtimeContext: agentRuntimeContext, ...rest } = body;\n    const finalResourceId = resourceId ?? resourceid;\n    const finalRuntimeContext = new RuntimeContext([\n      ...Array.from(runtimeContext.entries()),\n      ...Array.from(Object.entries(agentRuntimeContext ?? {}))\n    ]);\n    validateBody({ messages });\n    const streamResult = await agent.stream(messages, {\n      ...rest,\n      // @ts-expect-error TODO fix types\n      resourceId: finalResourceId,\n      runtimeContext: finalRuntimeContext,\n      signal: abortSignal\n    });\n    const streamResponse = rest.output ? streamResult.toTextStreamResponse({\n      headers: {\n        \"Transfer-Encoding\": \"chunked\"\n      }\n    }) : streamResult.toDataStreamResponse({\n      sendUsage: true,\n      sendReasoning: true,\n      getErrorMessage: (error) => {\n        return `An error occurred while processing your request. ${error instanceof Error ? error.message : JSON.stringify(error)}`;\n      },\n      headers: {\n        \"Transfer-Encoding\": \"chunked\"\n      }\n    });\n    return streamResponse;\n  } catch (error) {\n    return handleError(error, \"error streaming agent response\");\n  }\n}\n\nexport { agents_exports, generateHandler, getAgentByIdHandler, getAgentsHandler, getEvalsByAgentIdHandler, getLiveEvalsByAgentIdHandler, streamGenerateHandler };\n","import { stringify, esm_default } from './chunk-MEGCYGBU.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\nimport { ReadableStream } from 'stream/web';\n\n// src/server/handlers/legacyWorkflows.ts\nvar legacyWorkflows_exports = {};\n__export(legacyWorkflows_exports, {\n  createLegacyWorkflowRunHandler: () => createLegacyWorkflowRunHandler,\n  getLegacyWorkflowByIdHandler: () => getLegacyWorkflowByIdHandler,\n  getLegacyWorkflowRunHandler: () => getLegacyWorkflowRunHandler,\n  getLegacyWorkflowRunsHandler: () => getLegacyWorkflowRunsHandler,\n  getLegacyWorkflowsHandler: () => getLegacyWorkflowsHandler,\n  resumeAsyncLegacyWorkflowHandler: () => resumeAsyncLegacyWorkflowHandler,\n  resumeLegacyWorkflowHandler: () => resumeLegacyWorkflowHandler,\n  startAsyncLegacyWorkflowHandler: () => startAsyncLegacyWorkflowHandler,\n  startLegacyWorkflowRunHandler: () => startLegacyWorkflowRunHandler,\n  watchLegacyWorkflowHandler: () => watchLegacyWorkflowHandler\n});\nasync function getLegacyWorkflowsHandler({ mastra }) {\n  try {\n    const workflows = mastra.legacy_getWorkflows({ serialized: false });\n    const _workflows = Object.entries(workflows).reduce((acc, [key, workflow]) => {\n      if (workflow.isNested) return acc;\n      acc[key] = {\n        stepGraph: workflow.stepGraph,\n        stepSubscriberGraph: workflow.stepSubscriberGraph,\n        serializedStepGraph: workflow.serializedStepGraph,\n        serializedStepSubscriberGraph: workflow.serializedStepSubscriberGraph,\n        name: workflow.name,\n        triggerSchema: workflow.triggerSchema ? stringify(esm_default(workflow.triggerSchema)) : void 0,\n        steps: Object.entries(workflow.steps).reduce((acc2, [key2, step]) => {\n          const _step = step;\n          acc2[key2] = {\n            id: _step.id,\n            description: _step.description,\n            workflowId: _step.workflowId,\n            inputSchema: _step.inputSchema ? stringify(esm_default(_step.inputSchema)) : void 0,\n            outputSchema: _step.outputSchema ? stringify(esm_default(_step.outputSchema)) : void 0\n          };\n          return acc2;\n        }, {})\n      };\n      return acc;\n    }, {});\n    return _workflows;\n  } catch (error) {\n    return handleError(error, \"error getting workflows\");\n  }\n}\nasync function getLegacyWorkflowByIdHandler({ mastra, workflowId }) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    return {\n      stepGraph: workflow.stepGraph,\n      stepSubscriberGraph: workflow.stepSubscriberGraph,\n      serializedStepGraph: workflow.serializedStepGraph,\n      serializedStepSubscriberGraph: workflow.serializedStepSubscriberGraph,\n      name: workflow.name,\n      triggerSchema: workflow.triggerSchema ? stringify(esm_default(workflow.triggerSchema)) : void 0,\n      steps: Object.entries(workflow.steps).reduce((acc, [key, step]) => {\n        const _step = step;\n        acc[key] = {\n          id: _step.id,\n          description: _step.description,\n          workflowId: _step.workflowId,\n          inputSchema: _step.inputSchema ? stringify(esm_default(_step.inputSchema)) : void 0,\n          outputSchema: _step.outputSchema ? stringify(esm_default(_step.outputSchema)) : void 0\n        };\n        return acc;\n      }, {})\n    };\n  } catch (error) {\n    return handleError(error, \"error getting workflow by id\");\n  }\n}\nasync function startAsyncLegacyWorkflowHandler({\n  mastra,\n  runtimeContext,\n  workflowId,\n  runId,\n  triggerData\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    if (!runId) {\n      const newRun = workflow.createRun();\n      const result2 = await newRun.start({\n        triggerData,\n        runtimeContext\n      });\n      return result2;\n    }\n    const run = workflow.getMemoryRun(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const result = await run.start({\n      triggerData,\n      runtimeContext\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"error starting workflow\");\n  }\n}\nasync function getLegacyWorkflowRunHandler({\n  mastra,\n  workflowId,\n  runId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"Run ID is required\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getRun(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    return run;\n  } catch (error) {\n    return handleError(error, \"error getting workflow run\");\n  }\n}\nasync function createLegacyWorkflowRunHandler({\n  mastra,\n  workflowId,\n  runId: prevRunId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const newRun = workflow.createRun({ runId: prevRunId });\n    return { runId: newRun.runId };\n  } catch (error) {\n    return handleError(error, \"error creating workflow run\");\n  }\n}\nasync function startLegacyWorkflowRunHandler({\n  mastra,\n  runtimeContext,\n  workflowId,\n  runId,\n  triggerData\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to start run\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    const run = workflow.getMemoryRun(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    void run.start({\n      triggerData,\n      runtimeContext\n    });\n    return { message: \"Workflow run started\" };\n  } catch (e) {\n    return handleError(e, \"Error starting workflow run\");\n  }\n}\nasync function watchLegacyWorkflowHandler({\n  mastra,\n  workflowId,\n  runId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to watch workflow\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    const run = workflow.getMemoryRun(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    let unwatch;\n    let asyncRef = null;\n    const stream = new ReadableStream({\n      start(controller) {\n        unwatch = run.watch(({ activePaths, runId: runId2, timestamp, results }) => {\n          const activePathsObj = Object.fromEntries(activePaths);\n          controller.enqueue(JSON.stringify({ activePaths: activePathsObj, runId: runId2, timestamp, results }));\n          if (asyncRef) {\n            clearImmediate(asyncRef);\n            asyncRef = null;\n          }\n          asyncRef = setImmediate(() => {\n            const runDone = Object.values(activePathsObj).every((value) => value.status !== \"executing\");\n            if (runDone) {\n              controller.close();\n              unwatch?.();\n            }\n          });\n        });\n      },\n      cancel() {\n        unwatch?.();\n      }\n    });\n    return stream;\n  } catch (error) {\n    return handleError(error, \"Error watching workflow\");\n  }\n}\nasync function resumeAsyncLegacyWorkflowHandler({\n  mastra,\n  workflowId,\n  runId,\n  body,\n  runtimeContext\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    const run = workflow.getMemoryRun(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const result = await run.resume({\n      stepId: body.stepId,\n      context: body.context,\n      runtimeContext\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow step\");\n  }\n}\nasync function resumeLegacyWorkflowHandler({\n  mastra,\n  workflowId,\n  runId,\n  body,\n  runtimeContext\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    const run = workflow.getMemoryRun(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    void run.resume({\n      stepId: body.stepId,\n      context: body.context,\n      runtimeContext\n    });\n    return { message: \"Workflow run resumed\" };\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow\");\n  }\n}\nasync function getLegacyWorkflowRunsHandler({\n  mastra,\n  workflowId,\n  fromDate,\n  toDate,\n  limit,\n  offset,\n  resourceId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const workflow = mastra.legacy_getWorkflow(workflowId);\n    const workflowRuns = await workflow.getWorkflowRuns({ fromDate, toDate, limit, offset, resourceId }) || {\n      runs: [],\n      total: 0\n    };\n    return workflowRuns;\n  } catch (error) {\n    return handleError(error, \"Error getting workflow runs\");\n  }\n}\n\nexport { createLegacyWorkflowRunHandler, getLegacyWorkflowByIdHandler, getLegacyWorkflowRunHandler, getLegacyWorkflowRunsHandler, getLegacyWorkflowsHandler, legacyWorkflows_exports, resumeAsyncLegacyWorkflowHandler, resumeLegacyWorkflowHandler, startAsyncLegacyWorkflowHandler, startLegacyWorkflowRunHandler, watchLegacyWorkflowHandler };\n","import { validateBody } from './chunk-RSEO4XPX.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { __export } from './chunk-MLKGABMK.js';\n\n// src/server/handlers/logs.ts\nvar logs_exports = {};\n__export(logs_exports, {\n  getLogTransports: () => getLogTransports,\n  getLogsByRunIdHandler: () => getLogsByRunIdHandler,\n  getLogsHandler: () => getLogsHandler\n});\nasync function getLogsHandler({\n  mastra,\n  transportId,\n  params\n}) {\n  try {\n    validateBody({ transportId });\n    const { fromDate, toDate, logLevel, filters: _filters, page, perPage } = params || {};\n    const filters = _filters ? Object.fromEntries(\n      (Array.isArray(_filters) ? _filters : [_filters]).map((attr) => {\n        const [key, value] = attr.split(\":\");\n        return [key, value];\n      })\n    ) : void 0;\n    const logs = await mastra.getLogs(transportId, {\n      fromDate,\n      toDate,\n      logLevel,\n      filters,\n      page: page ? Number(page) : void 0,\n      perPage: perPage ? Number(perPage) : void 0\n    });\n    return logs;\n  } catch (error) {\n    return handleError(error, \"Error getting logs\");\n  }\n}\nasync function getLogsByRunIdHandler({\n  mastra,\n  runId,\n  transportId,\n  params\n}) {\n  try {\n    validateBody({ runId, transportId });\n    const { fromDate, toDate, logLevel, filters: _filters, page, perPage } = params || {};\n    const filters = _filters ? Object.fromEntries(\n      (Array.isArray(_filters) ? _filters : [_filters]).map((attr) => {\n        const [key, value] = attr.split(\":\");\n        return [key, value];\n      })\n    ) : void 0;\n    const logs = await mastra.getLogsByRunId({\n      runId,\n      transportId,\n      fromDate,\n      toDate,\n      logLevel,\n      filters,\n      page: page ? Number(page) : void 0,\n      perPage: perPage ? Number(perPage) : void 0\n    });\n    return logs;\n  } catch (error) {\n    return handleError(error, \"Error getting logs by run ID\");\n  }\n}\nasync function getLogTransports({ mastra }) {\n  try {\n    const logger = mastra.getLogger();\n    const transports = logger.getTransports();\n    return {\n      transports: transports ? [...transports.keys()] : []\n    };\n  } catch (error) {\n    return handleError(error, \"Error getting log Transports\");\n  }\n}\n\nexport { getLogTransports, getLogsByRunIdHandler, getLogsHandler, logs_exports };\n","import { validateBody } from './chunk-RSEO4XPX.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\nimport { generateEmptyFromSchema } from '@mastra/core';\n\n// src/server/handlers/memory.ts\nvar memory_exports = {};\n__export(memory_exports, {\n  createThreadHandler: () => createThreadHandler,\n  deleteThreadHandler: () => deleteThreadHandler,\n  getMemoryStatusHandler: () => getMemoryStatusHandler,\n  getMessagesHandler: () => getMessagesHandler,\n  getThreadByIdHandler: () => getThreadByIdHandler,\n  getThreadsHandler: () => getThreadsHandler,\n  getWorkingMemoryHandler: () => getWorkingMemoryHandler,\n  saveMessagesHandler: () => saveMessagesHandler,\n  updateThreadHandler: () => updateThreadHandler,\n  updateWorkingMemoryHandler: () => updateWorkingMemoryHandler\n});\nasync function getMemoryFromContext({\n  mastra,\n  agentId,\n  networkId,\n  runtimeContext\n}) {\n  const agent = agentId ? mastra.getAgent(agentId) : null;\n  if (agentId && !agent) {\n    throw new HTTPException(404, { message: \"Agent not found\" });\n  }\n  const network = networkId ? mastra.vnext_getNetwork(networkId) : null;\n  if (networkId && !network) {\n    throw new HTTPException(404, { message: \"Network not found\" });\n  }\n  if (agent) {\n    return agent?.getMemory() || mastra.getMemory();\n  }\n  if (network) {\n    return await network?.getMemory({ runtimeContext }) || mastra.getMemory();\n  }\n  return mastra.getMemory();\n}\nasync function getMemoryStatusHandler({\n  mastra,\n  agentId,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!memory) {\n      return { result: false };\n    }\n    return { result: true };\n  } catch (error) {\n    return handleError(error, \"Error getting memory status\");\n  }\n}\nasync function getThreadsHandler({\n  mastra,\n  agentId,\n  resourceId,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    validateBody({ resourceId });\n    const threads = await memory.getThreadsByResourceId({ resourceId });\n    return threads;\n  } catch (error) {\n    return handleError(error, \"Error getting threads\");\n  }\n}\nasync function getThreadByIdHandler({\n  mastra,\n  agentId,\n  threadId,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    validateBody({ threadId });\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    const thread = await memory.getThreadById({ threadId });\n    if (!thread) {\n      throw new HTTPException(404, { message: \"Thread not found\" });\n    }\n    return thread;\n  } catch (error) {\n    return handleError(error, \"Error getting thread\");\n  }\n}\nasync function saveMessagesHandler({\n  mastra,\n  agentId,\n  body,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    if (!body?.messages) {\n      throw new HTTPException(400, { message: \"Messages are required\" });\n    }\n    if (!Array.isArray(body.messages)) {\n      throw new HTTPException(400, { message: \"Messages should be an array\" });\n    }\n    const processedMessages = body.messages.map((message) => ({\n      ...message,\n      id: memory.generateId(),\n      createdAt: message.createdAt ? new Date(message.createdAt) : /* @__PURE__ */ new Date()\n    }));\n    const result = await memory.saveMessages({ messages: processedMessages, memoryConfig: {} });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error saving messages\");\n  }\n}\nasync function createThreadHandler({\n  mastra,\n  agentId,\n  body,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    validateBody({ resourceId: body?.resourceId });\n    const result = await memory.createThread({\n      resourceId: body?.resourceId,\n      title: body?.title,\n      metadata: body?.metadata,\n      threadId: body?.threadId\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error saving thread to memory\");\n  }\n}\nasync function updateThreadHandler({\n  mastra,\n  agentId,\n  threadId,\n  body,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!body) {\n      throw new HTTPException(400, { message: \"Body is required\" });\n    }\n    const { title, metadata, resourceId } = body;\n    const updatedAt = /* @__PURE__ */ new Date();\n    validateBody({ threadId });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    const thread = await memory.getThreadById({ threadId });\n    if (!thread) {\n      throw new HTTPException(404, { message: \"Thread not found\" });\n    }\n    const updatedThread = {\n      ...thread,\n      title: title || thread.title,\n      metadata: metadata || thread.metadata,\n      resourceId: resourceId || thread.resourceId,\n      createdAt: thread.createdAt,\n      updatedAt\n    };\n    const result = await memory.saveThread({ thread: updatedThread });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error updating thread\");\n  }\n}\nasync function deleteThreadHandler({\n  mastra,\n  agentId,\n  threadId,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    validateBody({ threadId });\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    const thread = await memory.getThreadById({ threadId });\n    if (!thread) {\n      throw new HTTPException(404, { message: \"Thread not found\" });\n    }\n    await memory.deleteThread(threadId);\n    return { result: \"Thread deleted\" };\n  } catch (error) {\n    return handleError(error, \"Error deleting thread\");\n  }\n}\nasync function getMessagesHandler({\n  mastra,\n  agentId,\n  threadId,\n  limit,\n  networkId,\n  runtimeContext\n}) {\n  if (limit !== void 0 && (!Number.isInteger(limit) || limit <= 0)) {\n    throw new HTTPException(400, { message: \"Invalid limit: must be a positive integer\" });\n  }\n  try {\n    validateBody({ threadId });\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    const thread = await memory.getThreadById({ threadId });\n    if (!thread) {\n      throw new HTTPException(404, { message: \"Thread not found\" });\n    }\n    const result = await memory.query({\n      threadId,\n      ...limit && { selectBy: { last: limit } }\n    });\n    return { messages: result.messages, uiMessages: result.uiMessages };\n  } catch (error) {\n    return handleError(error, \"Error getting messages\");\n  }\n}\nasync function getWorkingMemoryHandler({\n  mastra,\n  agentId,\n  threadId,\n  resourceId,\n  networkId,\n  runtimeContext,\n  memoryConfig\n}) {\n  try {\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    validateBody({ threadId });\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    const thread = await memory.getThreadById({ threadId });\n    const threadExists = !!thread;\n    const template = await memory.getWorkingMemoryTemplate({ memoryConfig });\n    const workingMemoryTemplate = template?.format === \"json\" ? { ...template, content: JSON.stringify(generateEmptyFromSchema(template.content)) } : template;\n    const workingMemory = await memory.getWorkingMemory({ threadId, resourceId, memoryConfig });\n    const config = memory.getMergedThreadConfig(memoryConfig || {});\n    const source = config.workingMemory?.scope === \"resource\" && resourceId ? \"resource\" : \"thread\";\n    return { workingMemory, source, workingMemoryTemplate, threadExists };\n  } catch (error) {\n    return handleError(error, \"Error getting working memory\");\n  }\n}\nasync function updateWorkingMemoryHandler({\n  mastra,\n  agentId,\n  threadId,\n  body,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    validateBody({ threadId });\n    const memory = await getMemoryFromContext({ mastra, agentId, networkId, runtimeContext });\n    const { resourceId, memoryConfig, workingMemory } = body;\n    if (!memory) {\n      throw new HTTPException(400, { message: \"Memory is not initialized\" });\n    }\n    const thread = await memory.getThreadById({ threadId });\n    if (!thread) {\n      throw new HTTPException(404, { message: \"Thread not found\" });\n    }\n    await memory.updateWorkingMemory({ threadId, resourceId, workingMemory, memoryConfig });\n    return { success: true };\n  } catch (error) {\n    return handleError(error, \"Error updating working memory\");\n  }\n}\n\nexport { createThreadHandler, deleteThreadHandler, getMemoryStatusHandler, getMessagesHandler, getThreadByIdHandler, getThreadsHandler, getWorkingMemoryHandler, memory_exports, saveMessagesHandler, updateThreadHandler, updateWorkingMemoryHandler };\n","import { validateBody } from './chunk-RSEO4XPX.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\n\n// src/server/handlers/network.ts\nvar network_exports = {};\n__export(network_exports, {\n  generateHandler: () => generateHandler,\n  getNetworkByIdHandler: () => getNetworkByIdHandler,\n  getNetworksHandler: () => getNetworksHandler,\n  streamGenerateHandler: () => streamGenerateHandler\n});\nasync function getNetworksHandler({\n  mastra,\n  runtimeContext\n}) {\n  try {\n    const networks = mastra.getNetworks();\n    const serializedNetworks = await Promise.all(\n      networks.map(async (network) => {\n        const routingAgent = network.getRoutingAgent();\n        const routingLLM = await routingAgent.getLLM({ runtimeContext });\n        const agents = network.getAgents();\n        return {\n          id: network.formatAgentId(routingAgent.name),\n          name: routingAgent.name,\n          instructions: routingAgent.instructions,\n          agents: await Promise.all(\n            agents.map(async (agent) => {\n              const llm = await agent.getLLM({ runtimeContext });\n              return {\n                name: agent.name,\n                provider: llm?.getProvider(),\n                modelId: llm?.getModelId()\n              };\n            })\n          ),\n          routingModel: {\n            provider: routingLLM?.getProvider(),\n            modelId: routingLLM?.getModelId()\n          }\n        };\n      })\n    );\n    return serializedNetworks;\n  } catch (error) {\n    return handleError(error, \"Error getting networks\");\n  }\n}\nasync function getNetworkByIdHandler({\n  mastra,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    const networks = mastra.getNetworks();\n    const network = networks.find((network2) => {\n      const routingAgent2 = network2.getRoutingAgent();\n      return network2.formatAgentId(routingAgent2.name) === networkId;\n    });\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    const routingAgent = network.getRoutingAgent();\n    const routingLLM = await routingAgent.getLLM({ runtimeContext });\n    const agents = network.getAgents();\n    const serializedNetwork = {\n      id: network.formatAgentId(routingAgent.name),\n      name: routingAgent.name,\n      instructions: routingAgent.instructions,\n      agents: await Promise.all(\n        agents.map(async (agent) => {\n          const llm = await agent.getLLM({ runtimeContext });\n          return {\n            name: agent.name,\n            provider: llm?.getProvider(),\n            modelId: llm?.getModelId()\n          };\n        })\n      ),\n      routingModel: {\n        provider: routingLLM?.getProvider(),\n        modelId: routingLLM?.getModelId()\n      }\n    };\n    return serializedNetwork;\n  } catch (error) {\n    return handleError(error, \"Error getting network by ID\");\n  }\n}\nasync function generateHandler({\n  mastra,\n  runtimeContext,\n  networkId,\n  body\n}) {\n  try {\n    const network = mastra.getNetwork(networkId);\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    validateBody({ messages: body.messages });\n    const { messages, ...rest } = body;\n    const result = await network.generate(messages, { ...rest, runtimeContext });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error generating from network\");\n  }\n}\nasync function streamGenerateHandler({\n  mastra,\n  networkId,\n  body,\n  runtimeContext\n}) {\n  try {\n    const network = mastra.getNetwork(networkId);\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    validateBody({ messages: body.messages });\n    const { messages, output, ...rest } = body;\n    const streamResult = await network.stream(messages, {\n      output,\n      ...rest,\n      runtimeContext\n    });\n    const streamResponse = output ? streamResult.toTextStreamResponse() : streamResult.toDataStreamResponse({\n      sendUsage: true,\n      sendReasoning: true,\n      getErrorMessage: (error) => {\n        return `An error occurred while processing your request. ${error instanceof Error ? error.message : JSON.stringify(error)}`;\n      }\n    });\n    return streamResponse;\n  } catch (error) {\n    return handleError(error, \"Error streaming from network\");\n  }\n}\n\nexport { generateHandler, getNetworkByIdHandler, getNetworksHandler, network_exports, streamGenerateHandler };\n","import { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\n\n// src/server/handlers/telemetry.ts\nvar telemetry_exports = {};\n__export(telemetry_exports, {\n  getTelemetryHandler: () => getTelemetryHandler,\n  storeTelemetryHandler: () => storeTelemetryHandler\n});\nasync function getTelemetryHandler({ mastra, body }) {\n  try {\n    const telemetry = mastra.getTelemetry();\n    const storage = mastra.getStorage();\n    if (!telemetry) {\n      throw new HTTPException(400, { message: \"Telemetry is not initialized\" });\n    }\n    if (!storage) {\n      return [];\n    }\n    if (!body) {\n      throw new HTTPException(400, { message: \"Body is required\" });\n    }\n    const { name, scope, page, perPage, attribute, fromDate, toDate } = body;\n    const attributes = attribute ? Object.fromEntries(\n      (Array.isArray(attribute) ? attribute : [attribute]).map((attr) => {\n        const [key, value] = attr.split(\":\");\n        return [key, value];\n      })\n    ) : void 0;\n    const traces = await storage.getTraces({\n      name,\n      scope,\n      page: Number(page ?? 0),\n      perPage: Number(perPage ?? 100),\n      attributes,\n      fromDate: fromDate ? new Date(fromDate) : void 0,\n      toDate: toDate ? new Date(toDate) : void 0\n    });\n    return traces;\n  } catch (error2) {\n    return handleError(error2, \"Error getting telemetry\");\n  }\n}\nasync function storeTelemetryHandler({ mastra, body }) {\n  try {\n    const storage = mastra.getStorage();\n    const logger = mastra.getLogger();\n    if (!storage) {\n      return {\n        status: \"error\",\n        message: \"Storage is not initialized\"\n      };\n    }\n    const now = /* @__PURE__ */ new Date();\n    const items = body?.resourceSpans?.[0]?.scopeSpans;\n    logger.debug(\"[Telemetry Handler] Received spans:\", {\n      totalSpans: items?.reduce((acc, scope) => acc + scope.spans.length, 0) || 0,\n      timestamp: now.toISOString()\n    });\n    if (!items?.length) {\n      return {\n        status: \"success\",\n        message: \"No spans to process\",\n        traceCount: 0\n      };\n    }\n    const allSpans = items.reduce((acc, scopedSpans) => {\n      const { scope, spans } = scopedSpans;\n      for (const span of spans) {\n        const {\n          spanId,\n          parentSpanId,\n          traceId,\n          name,\n          kind,\n          attributes,\n          status,\n          events,\n          links,\n          startTimeUnixNano,\n          endTimeUnixNano,\n          ...rest\n        } = span;\n        const startTime = Number(BigInt(startTimeUnixNano) / 1000n);\n        const endTime = Number(BigInt(endTimeUnixNano) / 1000n);\n        acc.push({\n          id: spanId,\n          parentSpanId,\n          traceId,\n          name,\n          scope: scope.name,\n          kind,\n          status: JSON.stringify(status),\n          events: JSON.stringify(events),\n          links: JSON.stringify(links),\n          attributes: JSON.stringify(\n            attributes.reduce((acc2, attr) => {\n              const valueKey = Object.keys(attr.value)[0];\n              if (valueKey) {\n                acc2[attr.key] = attr.value[valueKey];\n              }\n              return acc2;\n            }, {})\n          ),\n          startTime,\n          endTime,\n          other: JSON.stringify(rest),\n          createdAt: now\n        });\n      }\n      return acc;\n    }, []);\n    return storage.batchTraceInsert({\n      records: allSpans\n    }).then(() => {\n      return {\n        status: \"success\",\n        message: \"Traces received and processed successfully\",\n        traceCount: body.resourceSpans?.length || 0\n      };\n    }).catch(() => {\n      return {\n        status: \"error\",\n        message: \"Failed to process traces\",\n        // @ts-ignore\n        error: error.message\n      };\n    });\n  } catch (error2) {\n    console.error(\"Error processing traces:\", error2);\n    return {\n      status: \"error\",\n      message: \"Failed to process traces\",\n      // @ts-ignore\n      error: error2.message\n    };\n  }\n}\n\nexport { getTelemetryHandler, storeTelemetryHandler, telemetry_exports };\n","import { stringify, esm_default } from './chunk-MEGCYGBU.js';\nimport { validateBody } from './chunk-RSEO4XPX.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\nimport { isVercelTool } from '@mastra/core/tools';\n\n// src/server/handlers/tools.ts\nvar tools_exports = {};\n__export(tools_exports, {\n  executeAgentToolHandler: () => executeAgentToolHandler,\n  executeToolHandler: () => executeToolHandler,\n  getToolByIdHandler: () => getToolByIdHandler,\n  getToolsHandler: () => getToolsHandler\n});\nasync function getToolsHandler({ tools }) {\n  try {\n    if (!tools) {\n      return {};\n    }\n    const serializedTools = Object.entries(tools).reduce(\n      (acc, [id, _tool]) => {\n        const tool = _tool;\n        acc[id] = {\n          ...tool,\n          inputSchema: tool.inputSchema ? stringify(esm_default(tool.inputSchema)) : void 0,\n          outputSchema: tool.outputSchema ? stringify(esm_default(tool.outputSchema)) : void 0\n        };\n        return acc;\n      },\n      {}\n    );\n    return serializedTools;\n  } catch (error) {\n    return handleError(error, \"Error getting tools\");\n  }\n}\nasync function getToolByIdHandler({ tools, toolId }) {\n  try {\n    const tool = Object.values(tools || {}).find((tool2) => tool2.id === toolId);\n    if (!tool) {\n      throw new HTTPException(404, { message: \"Tool not found\" });\n    }\n    const serializedTool = {\n      ...tool,\n      inputSchema: tool.inputSchema ? stringify(esm_default(tool.inputSchema)) : void 0,\n      outputSchema: tool.outputSchema ? stringify(esm_default(tool.outputSchema)) : void 0\n    };\n    return serializedTool;\n  } catch (error) {\n    return handleError(error, \"Error getting tool\");\n  }\n}\nfunction executeToolHandler(tools) {\n  return async ({\n    mastra,\n    runId,\n    toolId,\n    data,\n    runtimeContext\n  }) => {\n    try {\n      if (!toolId) {\n        throw new HTTPException(400, { message: \"Tool ID is required\" });\n      }\n      const tool = Object.values(tools || {}).find((tool2) => tool2.id === toolId);\n      if (!tool) {\n        throw new HTTPException(404, { message: \"Tool not found\" });\n      }\n      if (!tool?.execute) {\n        throw new HTTPException(400, { message: \"Tool is not executable\" });\n      }\n      validateBody({ data });\n      if (isVercelTool(tool)) {\n        const result2 = await tool.execute(data);\n        return result2;\n      }\n      const result = await tool.execute({\n        context: data,\n        mastra,\n        runId,\n        runtimeContext\n      });\n      return result;\n    } catch (error) {\n      return handleError(error, \"Error executing tool\");\n    }\n  };\n}\nasync function executeAgentToolHandler({\n  mastra,\n  agentId,\n  toolId,\n  data,\n  runtimeContext\n}) {\n  try {\n    const agent = agentId ? mastra.getAgent(agentId) : null;\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Tool not found\" });\n    }\n    const agentTools = await agent.getTools({ runtimeContext });\n    const tool = Object.values(agentTools || {}).find((tool2) => tool2.id === toolId);\n    if (!tool) {\n      throw new HTTPException(404, { message: \"Tool not found\" });\n    }\n    if (!tool?.execute) {\n      throw new HTTPException(400, { message: \"Tool is not executable\" });\n    }\n    const result = await tool.execute({\n      context: data,\n      runtimeContext,\n      mastra,\n      runId: agentId\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error executing tool\");\n  }\n}\n\nexport { executeAgentToolHandler, executeToolHandler, getToolByIdHandler, getToolsHandler, tools_exports };\n","import { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\n\n// src/server/handlers/vector.ts\nvar vector_exports = {};\n__export(vector_exports, {\n  createIndex: () => createIndex,\n  deleteIndex: () => deleteIndex,\n  describeIndex: () => describeIndex,\n  listIndexes: () => listIndexes,\n  queryVectors: () => queryVectors,\n  upsertVectors: () => upsertVectors\n});\nfunction getVector(mastra, vectorName) {\n  if (!vectorName) {\n    throw new HTTPException(400, { message: \"Vector name is required\" });\n  }\n  const vector = mastra.getVector(vectorName);\n  if (!vector) {\n    throw new HTTPException(404, { message: `Vector store ${vectorName} not found` });\n  }\n  return vector;\n}\nasync function upsertVectors({ mastra, vectorName, index }) {\n  try {\n    if (!index?.indexName || !index?.vectors || !Array.isArray(index.vectors)) {\n      throw new HTTPException(400, { message: \"Invalid request index. indexName and vectors array are required.\" });\n    }\n    const vector = getVector(mastra, vectorName);\n    const result = await vector.upsert(index);\n    return { ids: result };\n  } catch (error) {\n    return handleError(error, \"Error upserting vectors\");\n  }\n}\nasync function createIndex({\n  mastra,\n  vectorName,\n  index\n}) {\n  try {\n    const { indexName, dimension, metric } = index;\n    if (!indexName || typeof dimension !== \"number\" || dimension <= 0) {\n      throw new HTTPException(400, {\n        message: \"Invalid request index, indexName and positive dimension number are required.\"\n      });\n    }\n    if (metric && ![\"cosine\", \"euclidean\", \"dotproduct\"].includes(metric)) {\n      throw new HTTPException(400, { message: \"Invalid metric. Must be one of: cosine, euclidean, dotproduct\" });\n    }\n    const vector = getVector(mastra, vectorName);\n    await vector.createIndex({ indexName, dimension, metric });\n    return { success: true };\n  } catch (error) {\n    return handleError(error, \"Error creating index\");\n  }\n}\nasync function queryVectors({\n  mastra,\n  vectorName,\n  query\n}) {\n  try {\n    if (!query?.indexName || !query?.queryVector || !Array.isArray(query.queryVector)) {\n      throw new HTTPException(400, { message: \"Invalid request query. indexName and queryVector array are required.\" });\n    }\n    const vector = getVector(mastra, vectorName);\n    const results = await vector.query(query);\n    return results;\n  } catch (error) {\n    return handleError(error, \"Error querying vectors\");\n  }\n}\nasync function listIndexes({ mastra, vectorName }) {\n  try {\n    const vector = getVector(mastra, vectorName);\n    const indexes = await vector.listIndexes();\n    return indexes.filter(Boolean);\n  } catch (error) {\n    return handleError(error, \"Error listing indexes\");\n  }\n}\nasync function describeIndex({\n  mastra,\n  vectorName,\n  indexName\n}) {\n  try {\n    if (!indexName) {\n      throw new HTTPException(400, { message: \"Index name is required\" });\n    }\n    const vector = getVector(mastra, vectorName);\n    const stats = await vector.describeIndex({ indexName });\n    return {\n      dimension: stats.dimension,\n      count: stats.count,\n      metric: stats.metric?.toLowerCase()\n    };\n  } catch (error) {\n    return handleError(error, \"Error describing index\");\n  }\n}\nasync function deleteIndex({\n  mastra,\n  vectorName,\n  indexName\n}) {\n  try {\n    if (!indexName) {\n      throw new HTTPException(400, { message: \"Index name is required\" });\n    }\n    const vector = getVector(mastra, vectorName);\n    await vector.deleteIndex({ indexName });\n    return { success: true };\n  } catch (error) {\n    return handleError(error, \"Error deleting index\");\n  }\n}\n\nexport { createIndex, deleteIndex, describeIndex, listIndexes, queryVectors, upsertVectors, vector_exports };\n","import { stringify, esm_default } from '../../chunk-MEGCYGBU.js';\nimport { validateBody } from '../../chunk-RSEO4XPX.js';\nimport { handleError } from '../../chunk-LF7P5PLR.js';\nimport { HTTPException } from '../../chunk-LCM566I4.js';\n\n// src/server/handlers/vNextNetwork.ts\nasync function getVNextNetworksHandler({\n  mastra,\n  runtimeContext\n}) {\n  try {\n    const networks = mastra.vnext_getNetworks();\n    const serializedNetworks = await Promise.all(\n      networks.map(async (network) => {\n        const routingAgent = await network.getRoutingAgent({ runtimeContext });\n        const routingLLM = await routingAgent.getLLM({ runtimeContext });\n        const agents = await network.getAgents({ runtimeContext });\n        const workflows = await network.getWorkflows({ runtimeContext });\n        const tools = await network.getTools({ runtimeContext });\n        const networkInstruction = await network.getInstructions({ runtimeContext });\n        return {\n          id: network.id,\n          name: network.name,\n          instructions: networkInstruction,\n          tools: await Promise.all(\n            Object.values(tools).map(async (tool) => {\n              return {\n                id: tool.id,\n                description: tool.description\n              };\n            })\n          ),\n          agents: await Promise.all(\n            Object.values(agents).map(async (agent) => {\n              const llm = await agent.getLLM({ runtimeContext });\n              return {\n                name: agent.name,\n                provider: llm?.getProvider(),\n                modelId: llm?.getModelId()\n              };\n            })\n          ),\n          workflows: await Promise.all(\n            Object.values(workflows).map(async (workflow) => {\n              return {\n                name: workflow.name,\n                description: workflow.description,\n                inputSchema: workflow.inputSchema ? stringify(esm_default(workflow.inputSchema)) : void 0,\n                outputSchema: workflow.outputSchema ? stringify(esm_default(workflow.outputSchema)) : void 0\n              };\n            })\n          ),\n          routingModel: {\n            provider: routingLLM?.getProvider(),\n            modelId: routingLLM?.getModelId()\n          }\n        };\n      })\n    );\n    return serializedNetworks;\n  } catch (error) {\n    return handleError(error, \"Error getting networks\");\n  }\n}\nasync function getVNextNetworkByIdHandler({\n  mastra,\n  networkId,\n  runtimeContext\n}) {\n  try {\n    const network = mastra.vnext_getNetwork(networkId);\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    const routingAgent = await network.getRoutingAgent({ runtimeContext });\n    const routingLLM = await routingAgent.getLLM({ runtimeContext });\n    const agents = await network.getAgents({ runtimeContext });\n    const workflows = await network.getWorkflows({ runtimeContext });\n    const tools = await network.getTools({ runtimeContext });\n    const networkInstruction = await network.getInstructions({ runtimeContext });\n    const serializedNetwork = {\n      id: network.id,\n      name: network.name,\n      instructions: networkInstruction,\n      agents: await Promise.all(\n        Object.values(agents).map(async (agent) => {\n          const llm = await agent.getLLM({ runtimeContext });\n          return {\n            name: agent.name,\n            provider: llm?.getProvider(),\n            modelId: llm?.getModelId()\n          };\n        })\n      ),\n      workflows: await Promise.all(\n        Object.values(workflows).map(async (workflow) => {\n          return {\n            name: workflow.name,\n            description: workflow.description,\n            inputSchema: workflow.inputSchema ? stringify(esm_default(workflow.inputSchema)) : void 0,\n            outputSchema: workflow.outputSchema ? stringify(esm_default(workflow.outputSchema)) : void 0\n          };\n        })\n      ),\n      tools: await Promise.all(\n        Object.values(tools).map(async (tool) => {\n          return {\n            id: tool.id,\n            description: tool.description\n          };\n        })\n      ),\n      routingModel: {\n        provider: routingLLM?.getProvider(),\n        modelId: routingLLM?.getModelId()\n      }\n    };\n    return serializedNetwork;\n  } catch (error) {\n    return handleError(error, \"Error getting network by ID\");\n  }\n}\nasync function generateVNextNetworkHandler({\n  mastra,\n  runtimeContext,\n  networkId,\n  body\n}) {\n  try {\n    const network = mastra.vnext_getNetwork(networkId);\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    validateBody({ message: body.message });\n    const { message, threadId, resourceId } = body;\n    const result = await network.generate(message, { runtimeContext, threadId, resourceId });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error generating from network\");\n  }\n}\nasync function streamGenerateVNextNetworkHandler({\n  mastra,\n  networkId,\n  body,\n  runtimeContext\n}) {\n  try {\n    const network = mastra.vnext_getNetwork(networkId);\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    validateBody({ message: body.message });\n    const { message, threadId, resourceId } = body;\n    const streamResult = await network.stream(message, {\n      runtimeContext,\n      threadId,\n      resourceId\n    });\n    return streamResult;\n  } catch (error) {\n    return handleError(error, \"Error streaming from network\");\n  }\n}\nasync function loopVNextNetworkHandler({\n  mastra,\n  networkId,\n  body,\n  runtimeContext\n}) {\n  try {\n    const network = mastra.vnext_getNetwork(networkId);\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    validateBody({ message: body.message });\n    const { message } = body;\n    const result = await network.loop(message, {\n      runtimeContext\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error looping network\");\n  }\n}\nasync function loopStreamVNextNetworkHandler({\n  mastra,\n  networkId,\n  body,\n  runtimeContext\n}) {\n  try {\n    const network = mastra.vnext_getNetwork(networkId);\n    if (!network) {\n      throw new HTTPException(404, { message: \"Network not found\" });\n    }\n    validateBody({ message: body.message });\n    const { message, threadId, resourceId, maxIterations } = body;\n    const result = await network.loopStream(message, {\n      runtimeContext,\n      threadId,\n      resourceId,\n      maxIterations\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error streaming network loop\");\n  }\n}\n\nexport { generateVNextNetworkHandler, getVNextNetworkByIdHandler, getVNextNetworksHandler, loopStreamVNextNetworkHandler, loopVNextNetworkHandler, streamGenerateVNextNetworkHandler };\n","import { validateBody } from './chunk-RSEO4XPX.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\nimport { Readable } from 'stream';\n\n// src/server/handlers/voice.ts\nvar voice_exports = {};\n__export(voice_exports, {\n  generateSpeechHandler: () => generateSpeechHandler,\n  getListenerHandler: () => getListenerHandler,\n  getSpeakersHandler: () => getSpeakersHandler,\n  transcribeSpeechHandler: () => transcribeSpeechHandler\n});\nasync function getSpeakersHandler({ mastra, agentId }) {\n  try {\n    if (!agentId) {\n      throw new HTTPException(400, { message: \"Agent ID is required\" });\n    }\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Agent not found\" });\n    }\n    const voice = await agent.getVoice();\n    if (!voice) {\n      throw new HTTPException(400, { message: \"Agent does not have voice capabilities\" });\n    }\n    const speakers = await voice.getSpeakers();\n    return speakers;\n  } catch (error) {\n    return handleError(error, \"Error getting speakers\");\n  }\n}\nasync function generateSpeechHandler({\n  mastra,\n  agentId,\n  body\n}) {\n  try {\n    if (!agentId) {\n      throw new HTTPException(400, { message: \"Agent ID is required\" });\n    }\n    validateBody({\n      text: body?.text\n    });\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Agent not found\" });\n    }\n    const voice = await agent.getVoice();\n    if (!voice) {\n      throw new HTTPException(400, { message: \"Agent does not have voice capabilities\" });\n    }\n    const audioStream = await voice.speak(body.text, { speaker: body.speakerId });\n    if (!audioStream) {\n      throw new HTTPException(500, { message: \"Failed to generate speech\" });\n    }\n    return audioStream;\n  } catch (error) {\n    return handleError(error, \"Error generating speech\");\n  }\n}\nasync function transcribeSpeechHandler({\n  mastra,\n  agentId,\n  body\n}) {\n  try {\n    if (!agentId) {\n      throw new HTTPException(400, { message: \"Agent ID is required\" });\n    }\n    if (!body?.audioData) {\n      throw new HTTPException(400, { message: \"Audio data is required\" });\n    }\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Agent not found\" });\n    }\n    const voice = await agent.getVoice();\n    if (!voice) {\n      throw new HTTPException(400, { message: \"Agent does not have voice capabilities\" });\n    }\n    const audioStream = new Readable();\n    audioStream.push(body.audioData);\n    audioStream.push(null);\n    const text = await voice.listen(audioStream, body.options);\n    return { text };\n  } catch (error) {\n    return handleError(error, \"Error transcribing speech\");\n  }\n}\nasync function getListenerHandler({ mastra, agentId }) {\n  try {\n    if (!agentId) {\n      throw new HTTPException(400, { message: \"Agent ID is required\" });\n    }\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      throw new HTTPException(404, { message: \"Agent not found\" });\n    }\n    const voice = await agent.getVoice();\n    if (!voice) {\n      throw new HTTPException(400, { message: \"Agent does not have voice capabilities\" });\n    }\n    const listeners = await voice.getListener();\n    return listeners;\n  } catch (error) {\n    return handleError(error, \"Error getting listeners\");\n  }\n}\n\nexport { generateSpeechHandler, getListenerHandler, getSpeakersHandler, transcribeSpeechHandler, voice_exports };\n","import { stringify, esm_default } from './chunk-MEGCYGBU.js';\nimport { handleError } from './chunk-LF7P5PLR.js';\nimport { HTTPException } from './chunk-LCM566I4.js';\nimport { __export } from './chunk-MLKGABMK.js';\nimport { ReadableStream } from 'stream/web';\n\n// src/server/handlers/workflows.ts\nvar workflows_exports = {};\n__export(workflows_exports, {\n  cancelWorkflowRunHandler: () => cancelWorkflowRunHandler,\n  createWorkflowRunHandler: () => createWorkflowRunHandler,\n  getWorkflowByIdHandler: () => getWorkflowByIdHandler,\n  getWorkflowRunByIdHandler: () => getWorkflowRunByIdHandler,\n  getWorkflowRunExecutionResultHandler: () => getWorkflowRunExecutionResultHandler,\n  getWorkflowRunsHandler: () => getWorkflowRunsHandler,\n  getWorkflowsHandler: () => getWorkflowsHandler,\n  resumeAsyncWorkflowHandler: () => resumeAsyncWorkflowHandler,\n  resumeWorkflowHandler: () => resumeWorkflowHandler,\n  sendWorkflowRunEventHandler: () => sendWorkflowRunEventHandler,\n  startAsyncWorkflowHandler: () => startAsyncWorkflowHandler,\n  startWorkflowRunHandler: () => startWorkflowRunHandler,\n  streamWorkflowHandler: () => streamWorkflowHandler,\n  watchWorkflowHandler: () => watchWorkflowHandler\n});\nfunction getSteps(steps, path) {\n  return Object.entries(steps).reduce((acc, [key, step]) => {\n    const fullKey = path ? `${path}.${key}` : key;\n    acc[fullKey] = {\n      id: step.id,\n      description: step.description,\n      inputSchema: step.inputSchema ? stringify(esm_default(step.inputSchema)) : void 0,\n      outputSchema: step.outputSchema ? stringify(esm_default(step.outputSchema)) : void 0,\n      resumeSchema: step.resumeSchema ? stringify(esm_default(step.resumeSchema)) : void 0,\n      suspendSchema: step.suspendSchema ? stringify(esm_default(step.suspendSchema)) : void 0,\n      isWorkflow: step.component === \"WORKFLOW\"\n    };\n    if (step.component === \"WORKFLOW\" && step.steps) {\n      const nestedSteps = getSteps(step.steps, fullKey) || {};\n      acc = { ...acc, ...nestedSteps };\n    }\n    return acc;\n  }, {});\n}\nasync function getWorkflowsHandler({ mastra }) {\n  try {\n    const workflows = mastra.getWorkflows({ serialized: false });\n    const _workflows = Object.entries(workflows).reduce((acc, [key, workflow]) => {\n      acc[key] = {\n        name: workflow.name,\n        description: workflow.description,\n        steps: Object.entries(workflow.steps).reduce((acc2, [key2, step]) => {\n          acc2[key2] = {\n            id: step.id,\n            description: step.description,\n            inputSchema: step.inputSchema ? stringify(esm_default(step.inputSchema)) : void 0,\n            outputSchema: step.outputSchema ? stringify(esm_default(step.outputSchema)) : void 0,\n            resumeSchema: step.resumeSchema ? stringify(esm_default(step.resumeSchema)) : void 0,\n            suspendSchema: step.suspendSchema ? stringify(esm_default(step.suspendSchema)) : void 0\n          };\n          return acc2;\n        }, {}),\n        allSteps: getSteps(workflow.steps) || {},\n        stepGraph: workflow.serializedStepGraph,\n        inputSchema: workflow.inputSchema ? stringify(esm_default(workflow.inputSchema)) : void 0,\n        outputSchema: workflow.outputSchema ? stringify(esm_default(workflow.outputSchema)) : void 0\n      };\n      return acc;\n    }, {});\n    return _workflows;\n  } catch (error) {\n    return handleError(error, \"Error getting workflows\");\n  }\n}\nasync function getWorkflowsFromSystem({ mastra, workflowId }) {\n  const logger = mastra.getLogger();\n  if (!workflowId) {\n    throw new HTTPException(400, { message: \"Workflow ID is required\" });\n  }\n  let workflow;\n  try {\n    workflow = mastra.getWorkflow(workflowId);\n  } catch (error) {\n    logger.debug(\"Error getting workflow, searching agents for workflow\", error);\n  }\n  if (!workflow) {\n    logger.debug(\"Workflow not found, searching agents for workflow\", { workflowId });\n    const agents = mastra.getAgents();\n    if (Object.keys(agents || {}).length) {\n      for (const [_, agent] of Object.entries(agents)) {\n        try {\n          const workflows = await agent.getWorkflows();\n          if (workflows[workflowId]) {\n            workflow = workflows[workflowId];\n            break;\n          }\n          break;\n        } catch (error) {\n          logger.debug(\"Error getting workflow from agent\", error);\n        }\n      }\n    }\n  }\n  if (!workflow) {\n    throw new HTTPException(404, { message: \"Workflow not found\" });\n  }\n  return { workflow };\n}\nasync function getWorkflowByIdHandler({ mastra, workflowId }) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    return {\n      steps: Object.entries(workflow.steps).reduce((acc, [key, step]) => {\n        acc[key] = {\n          id: step.id,\n          description: step.description,\n          inputSchema: step.inputSchema ? stringify(esm_default(step.inputSchema)) : void 0,\n          outputSchema: step.outputSchema ? stringify(esm_default(step.outputSchema)) : void 0,\n          resumeSchema: step.resumeSchema ? stringify(esm_default(step.resumeSchema)) : void 0,\n          suspendSchema: step.suspendSchema ? stringify(esm_default(step.suspendSchema)) : void 0\n        };\n        return acc;\n      }, {}),\n      allSteps: getSteps(workflow.steps) || {},\n      name: workflow.name,\n      description: workflow.description,\n      stepGraph: workflow.serializedStepGraph,\n      inputSchema: workflow.inputSchema ? stringify(esm_default(workflow.inputSchema)) : void 0,\n      outputSchema: workflow.outputSchema ? stringify(esm_default(workflow.outputSchema)) : void 0\n    };\n  } catch (error) {\n    return handleError(error, \"Error getting workflow\");\n  }\n}\nasync function getWorkflowRunByIdHandler({\n  mastra,\n  workflowId,\n  runId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"Run ID is required\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getWorkflowRunById(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    return run;\n  } catch (error) {\n    return handleError(error, \"Error getting workflow run\");\n  }\n}\nasync function getWorkflowRunExecutionResultHandler({\n  mastra,\n  workflowId,\n  runId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"Run ID is required\" });\n    }\n    const workflow = mastra.getWorkflow(workflowId);\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const executionResult = await workflow.getWorkflowRunExecutionResult(runId);\n    if (!executionResult) {\n      throw new HTTPException(404, { message: \"Workflow run execution result not found\" });\n    }\n    return executionResult;\n  } catch (error) {\n    return handleError(error, \"Error getting workflow run execution result\");\n  }\n}\nasync function createWorkflowRunHandler({\n  mastra,\n  workflowId,\n  runId: prevRunId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.createRunAsync({ runId: prevRunId });\n    return { runId: run.runId };\n  } catch (error) {\n    return handleError(error, \"Error creating workflow run\");\n  }\n}\nasync function startAsyncWorkflowHandler({\n  mastra,\n  runtimeContext,\n  workflowId,\n  runId,\n  inputData\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const _run = await workflow.createRunAsync({ runId });\n    const result = await _run.start({\n      inputData,\n      runtimeContext\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error starting async workflow\");\n  }\n}\nasync function startWorkflowRunHandler({\n  mastra,\n  runtimeContext,\n  workflowId,\n  runId,\n  inputData\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to start run\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getWorkflowRunById(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const _run = await workflow.createRunAsync({ runId });\n    void _run.start({\n      inputData,\n      runtimeContext\n    });\n    return { message: \"Workflow run started\" };\n  } catch (e) {\n    return handleError(e, \"Error starting workflow run\");\n  }\n}\nasync function watchWorkflowHandler({\n  mastra,\n  workflowId,\n  runId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to watch workflow\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getWorkflowRunById(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const _run = await workflow.createRunAsync({ runId });\n    let unwatch;\n    let asyncRef = null;\n    const stream = new ReadableStream({\n      start(controller) {\n        unwatch = _run.watch(({ type, payload, eventTimestamp }) => {\n          controller.enqueue(JSON.stringify({ type, payload, eventTimestamp, runId }));\n          if (asyncRef) {\n            clearImmediate(asyncRef);\n            asyncRef = null;\n          }\n          asyncRef = setImmediate(async () => {\n            const runDone = payload.workflowState.status !== \"running\";\n            if (runDone) {\n              controller.close();\n              unwatch?.();\n            }\n          });\n        });\n      },\n      cancel() {\n        unwatch?.();\n      }\n    });\n    return stream;\n  } catch (error) {\n    return handleError(error, \"Error watching workflow\");\n  }\n}\nasync function streamWorkflowHandler({\n  mastra,\n  runtimeContext,\n  workflowId,\n  runId,\n  inputData\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.createRunAsync({ runId });\n    const result = run.stream({\n      inputData,\n      runtimeContext\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error executing workflow\");\n  }\n}\nasync function resumeAsyncWorkflowHandler({\n  mastra,\n  workflowId,\n  runId,\n  body,\n  runtimeContext\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    if (!body.step) {\n      throw new HTTPException(400, { message: \"step required to resume workflow\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getWorkflowRunById(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const _run = await workflow.createRunAsync({ runId });\n    const result = await _run.resume({\n      step: body.step,\n      resumeData: body.resumeData,\n      runtimeContext\n    });\n    return result;\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow step\");\n  }\n}\nasync function resumeWorkflowHandler({\n  mastra,\n  workflowId,\n  runId,\n  body,\n  runtimeContext\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    if (!body.step) {\n      throw new HTTPException(400, { message: \"step required to resume workflow\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getWorkflowRunById(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const _run = await workflow.createRunAsync({ runId });\n    void _run.resume({\n      step: body.step,\n      resumeData: body.resumeData,\n      runtimeContext\n    });\n    return { message: \"Workflow run resumed\" };\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow\");\n  }\n}\nasync function getWorkflowRunsHandler({\n  mastra,\n  workflowId,\n  fromDate,\n  toDate,\n  limit,\n  offset,\n  resourceId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const workflowRuns = await workflow.getWorkflowRuns({ fromDate, toDate, limit, offset, resourceId }) || {\n      runs: [],\n      total: 0\n    };\n    return workflowRuns;\n  } catch (error) {\n    return handleError(error, \"Error getting workflow runs\");\n  }\n}\nasync function cancelWorkflowRunHandler({\n  mastra,\n  workflowId,\n  runId\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to cancel workflow run\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getWorkflowRunById(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const _run = await workflow.createRunAsync({ runId });\n    await _run.cancel();\n    return { message: \"Workflow run cancelled\" };\n  } catch (error) {\n    return handleError(error, \"Error canceling workflow run\");\n  }\n}\nasync function sendWorkflowRunEventHandler({\n  mastra,\n  workflowId,\n  runId,\n  event,\n  data\n}) {\n  try {\n    if (!workflowId) {\n      throw new HTTPException(400, { message: \"Workflow ID is required\" });\n    }\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to send workflow run event\" });\n    }\n    const { workflow } = await getWorkflowsFromSystem({ mastra, workflowId });\n    if (!workflow) {\n      throw new HTTPException(404, { message: \"Workflow not found\" });\n    }\n    const run = await workflow.getWorkflowRunById(runId);\n    if (!run) {\n      throw new HTTPException(404, { message: \"Workflow run not found\" });\n    }\n    const _run = await workflow.createRunAsync({ runId });\n    await _run.sendEvent(event, data);\n    return { message: \"Workflow run event sent\" };\n  } catch (error) {\n    return handleError(error, \"Error sending workflow run event\");\n  }\n}\n\nexport { cancelWorkflowRunHandler, createWorkflowRunHandler, getWorkflowByIdHandler, getWorkflowRunByIdHandler, getWorkflowRunExecutionResultHandler, getWorkflowRunsHandler, getWorkflowsHandler, resumeAsyncWorkflowHandler, resumeWorkflowHandler, sendWorkflowRunEventHandler, startAsyncWorkflowHandler, startWorkflowRunHandler, streamWorkflowHandler, watchWorkflowHandler, workflows_exports };\n","import crypto, { randomUUID } from 'crypto';\nimport { readFile } from 'fs/promises';\nimport { join } from 'path/posix';\nimport { createServer } from 'http';\nimport { Http2ServerRequest } from 'http2';\nimport { Writable, Readable } from 'stream';\nimport { getFilePathWithoutDefaultDocument, getFilePath } from 'hono/utils/filepath';\nimport { getMimeType } from 'hono/utils/mime';\nimport { createReadStream, lstatSync } from 'fs';\nimport { html } from 'hono/html';\nimport { Telemetry } from '@mastra/core';\nimport { RuntimeContext } from '@mastra/core/runtime-context';\nimport { Tool } from '@mastra/core/tools';\nimport { Hono } from 'hono';\nimport { bodyLimit } from 'hono/body-limit';\nimport { cors } from 'hono/cors';\nimport { logger } from 'hono/logger';\nimport { timeout } from 'hono/timeout';\nimport { HTTPException } from 'hono/http-exception';\nimport { getAgentCardByIdHandler as getAgentCardByIdHandler$1, getAgentExecutionHandler as getAgentExecutionHandler$1 } from '@mastra/server/handlers/a2a';\nimport { stream } from 'hono/streaming';\nimport { getAgentsHandler as getAgentsHandler$1, getAgentByIdHandler as getAgentByIdHandler$1, getEvalsByAgentIdHandler as getEvalsByAgentIdHandler$1, getLiveEvalsByAgentIdHandler as getLiveEvalsByAgentIdHandler$1, generateHandler as generateHandler$2, streamGenerateHandler as streamGenerateHandler$2 } from '@mastra/server/handlers/agents';\nimport { getLegacyWorkflowsHandler as getLegacyWorkflowsHandler$1, getLegacyWorkflowByIdHandler as getLegacyWorkflowByIdHandler$1, getLegacyWorkflowRunsHandler as getLegacyWorkflowRunsHandler$1, resumeLegacyWorkflowHandler as resumeLegacyWorkflowHandler$1, resumeAsyncLegacyWorkflowHandler as resumeAsyncLegacyWorkflowHandler$1, createLegacyWorkflowRunHandler as createLegacyWorkflowRunHandler$1, startAsyncLegacyWorkflowHandler as startAsyncLegacyWorkflowHandler$1, startLegacyWorkflowRunHandler as startLegacyWorkflowRunHandler$1, watchLegacyWorkflowHandler as watchLegacyWorkflowHandler$1 } from '@mastra/server/handlers/legacyWorkflows';\nimport { getLogsHandler as getLogsHandler$1, getLogTransports as getLogTransports$1, getLogsByRunIdHandler as getLogsByRunIdHandler$1 } from '@mastra/server/handlers/logs';\nimport util from 'util';\nimport { Buffer as Buffer$1 } from 'buffer';\nimport { getMemoryStatusHandler as getMemoryStatusHandler$1, getThreadsHandler as getThreadsHandler$1, getThreadByIdHandler as getThreadByIdHandler$1, getMessagesHandler as getMessagesHandler$1, createThreadHandler as createThreadHandler$1, updateThreadHandler as updateThreadHandler$1, deleteThreadHandler as deleteThreadHandler$1, saveMessagesHandler as saveMessagesHandler$1, getWorkingMemoryHandler as getWorkingMemoryHandler$1, updateWorkingMemoryHandler as updateWorkingMemoryHandler$1 } from '@mastra/server/handlers/memory';\nimport { getNetworksHandler as getNetworksHandler$1, getNetworkByIdHandler as getNetworkByIdHandler$1, generateHandler as generateHandler$1, streamGenerateHandler as streamGenerateHandler$1 } from '@mastra/server/handlers/network';\nimport { Agent } from '@mastra/core/agent';\nimport { z } from 'zod';\nimport { getTelemetryHandler as getTelemetryHandler$1, storeTelemetryHandler as storeTelemetryHandler$1 } from '@mastra/server/handlers/telemetry';\nimport { executeAgentToolHandler as executeAgentToolHandler$1, getToolsHandler as getToolsHandler$1, getToolByIdHandler as getToolByIdHandler$1, executeToolHandler as executeToolHandler$1 } from '@mastra/server/handlers/tools';\nimport { upsertVectors as upsertVectors$1, createIndex as createIndex$1, queryVectors as queryVectors$1, listIndexes as listIndexes$1, describeIndex as describeIndex$1, deleteIndex as deleteIndex$1 } from '@mastra/server/handlers/vector';\nimport { getVNextNetworksHandler as getVNextNetworksHandler$1, getVNextNetworkByIdHandler as getVNextNetworkByIdHandler$1, generateVNextNetworkHandler as generateVNextNetworkHandler$1, loopVNextNetworkHandler as loopVNextNetworkHandler$1, loopStreamVNextNetworkHandler as loopStreamVNextNetworkHandler$1, streamGenerateVNextNetworkHandler as streamGenerateVNextNetworkHandler$1 } from '@mastra/server/handlers/vNextNetwork';\nimport { getSpeakersHandler as getSpeakersHandler$1, generateSpeechHandler, getListenerHandler as getListenerHandler$1, transcribeSpeechHandler } from '@mastra/server/handlers/voice';\nimport { getWorkflowsHandler as getWorkflowsHandler$1, getWorkflowByIdHandler as getWorkflowByIdHandler$1, getWorkflowRunsHandler as getWorkflowRunsHandler$1, getWorkflowRunExecutionResultHandler as getWorkflowRunExecutionResultHandler$1, getWorkflowRunByIdHandler as getWorkflowRunByIdHandler$1, resumeWorkflowHandler as resumeWorkflowHandler$1, resumeAsyncWorkflowHandler as resumeAsyncWorkflowHandler$1, streamWorkflowHandler as streamWorkflowHandler$1, createWorkflowRunHandler as createWorkflowRunHandler$1, startAsyncWorkflowHandler as startAsyncWorkflowHandler$1, startWorkflowRunHandler as startWorkflowRunHandler$1, watchWorkflowHandler as watchWorkflowHandler$1, cancelWorkflowRunHandler as cancelWorkflowRunHandler$1, sendWorkflowRunEventHandler as sendWorkflowRunEventHandler$1 } from '@mastra/server/handlers/workflows';\n\n// src/server/index.ts\nvar RequestError = class extends Error {\n  constructor(message, options) {\n    super(message, options);\n    this.name = \"RequestError\";\n  }\n};\nvar toRequestError = (e2) => {\n  if (e2 instanceof RequestError) {\n    return e2;\n  }\n  return new RequestError(e2.message, { cause: e2 });\n};\nvar GlobalRequest = global.Request;\nvar Request = class extends GlobalRequest {\n  constructor(input, options) {\n    if (typeof input === \"object\" && getRequestCache in input) {\n      input = input[getRequestCache]();\n    }\n    if (typeof options?.body?.getReader !== \"undefined\") {\n      options.duplex ??= \"half\";\n    }\n    super(input, options);\n  }\n};\nvar newRequestFromIncoming = (method, url, incoming, abortController) => {\n  const headerRecord = [];\n  const rawHeaders = incoming.rawHeaders;\n  for (let i2 = 0; i2 < rawHeaders.length; i2 += 2) {\n    const { [i2]: key, [i2 + 1]: value } = rawHeaders;\n    if (key.charCodeAt(0) !== /*:*/\n    58) {\n      headerRecord.push([key, value]);\n    }\n  }\n  const init = {\n    method,\n    headers: headerRecord,\n    signal: abortController.signal\n  };\n  if (method === \"TRACE\") {\n    init.method = \"GET\";\n    const req = new Request(url, init);\n    Object.defineProperty(req, \"method\", {\n      get() {\n        return \"TRACE\";\n      }\n    });\n    return req;\n  }\n  if (!(method === \"GET\" || method === \"HEAD\")) {\n    if (\"rawBody\" in incoming && incoming.rawBody instanceof Buffer) {\n      init.body = new ReadableStream({\n        start(controller) {\n          controller.enqueue(incoming.rawBody);\n          controller.close();\n        }\n      });\n    } else {\n      init.body = Readable.toWeb(incoming);\n    }\n  }\n  return new Request(url, init);\n};\nvar getRequestCache = Symbol(\"getRequestCache\");\nvar requestCache = Symbol(\"requestCache\");\nvar incomingKey = Symbol(\"incomingKey\");\nvar urlKey = Symbol(\"urlKey\");\nvar abortControllerKey = Symbol(\"abortControllerKey\");\nvar getAbortController = Symbol(\"getAbortController\");\nvar requestPrototype = {\n  get method() {\n    return this[incomingKey].method || \"GET\";\n  },\n  get url() {\n    return this[urlKey];\n  },\n  [getAbortController]() {\n    this[getRequestCache]();\n    return this[abortControllerKey];\n  },\n  [getRequestCache]() {\n    this[abortControllerKey] ||= new AbortController();\n    return this[requestCache] ||= newRequestFromIncoming(\n      this.method,\n      this[urlKey],\n      this[incomingKey],\n      this[abortControllerKey]\n    );\n  }\n};\n[\n  \"body\",\n  \"bodyUsed\",\n  \"cache\",\n  \"credentials\",\n  \"destination\",\n  \"headers\",\n  \"integrity\",\n  \"mode\",\n  \"redirect\",\n  \"referrer\",\n  \"referrerPolicy\",\n  \"signal\",\n  \"keepalive\"\n].forEach((k) => {\n  Object.defineProperty(requestPrototype, k, {\n    get() {\n      return this[getRequestCache]()[k];\n    }\n  });\n});\n[\"arrayBuffer\", \"blob\", \"clone\", \"formData\", \"json\", \"text\"].forEach((k) => {\n  Object.defineProperty(requestPrototype, k, {\n    value: function() {\n      return this[getRequestCache]()[k]();\n    }\n  });\n});\nObject.setPrototypeOf(requestPrototype, Request.prototype);\nvar newRequest = (incoming, defaultHostname) => {\n  const req = Object.create(requestPrototype);\n  req[incomingKey] = incoming;\n  const incomingUrl = incoming.url || \"\";\n  if (incomingUrl[0] !== \"/\" && // short-circuit for performance. most requests are relative URL.\n  (incomingUrl.startsWith(\"http://\") || incomingUrl.startsWith(\"https://\"))) {\n    if (incoming instanceof Http2ServerRequest) {\n      throw new RequestError(\"Absolute URL for :path is not allowed in HTTP/2\");\n    }\n    try {\n      const url2 = new URL(incomingUrl);\n      req[urlKey] = url2.href;\n    } catch (e2) {\n      throw new RequestError(\"Invalid absolute URL\", { cause: e2 });\n    }\n    return req;\n  }\n  const host = (incoming instanceof Http2ServerRequest ? incoming.authority : incoming.headers.host) || defaultHostname;\n  if (!host) {\n    throw new RequestError(\"Missing host header\");\n  }\n  let scheme;\n  if (incoming instanceof Http2ServerRequest) {\n    scheme = incoming.scheme;\n    if (!(scheme === \"http\" || scheme === \"https\")) {\n      throw new RequestError(\"Unsupported scheme\");\n    }\n  } else {\n    scheme = incoming.socket && incoming.socket.encrypted ? \"https\" : \"http\";\n  }\n  const url = new URL(`${scheme}://${host}${incomingUrl}`);\n  if (url.hostname.length !== host.length && url.hostname !== host.replace(/:\\d+$/, \"\")) {\n    throw new RequestError(\"Invalid host header\");\n  }\n  req[urlKey] = url.href;\n  return req;\n};\nvar responseCache = Symbol(\"responseCache\");\nvar getResponseCache = Symbol(\"getResponseCache\");\nvar cacheKey = Symbol(\"cache\");\nvar GlobalResponse = global.Response;\nvar Response2 = class _Response {\n  #body;\n  #init;\n  [getResponseCache]() {\n    delete this[cacheKey];\n    return this[responseCache] ||= new GlobalResponse(this.#body, this.#init);\n  }\n  constructor(body, init) {\n    let headers;\n    this.#body = body;\n    if (init instanceof _Response) {\n      const cachedGlobalResponse = init[responseCache];\n      if (cachedGlobalResponse) {\n        this.#init = cachedGlobalResponse;\n        this[getResponseCache]();\n        return;\n      } else {\n        this.#init = init.#init;\n        headers = new Headers(init.#init.headers);\n      }\n    } else {\n      this.#init = init;\n    }\n    if (typeof body === \"string\" || typeof body?.getReader !== \"undefined\" || body instanceof Blob || body instanceof Uint8Array) {\n      headers ||= init?.headers || { \"content-type\": \"text/plain; charset=UTF-8\" };\n      this[cacheKey] = [init?.status || 200, body, headers];\n    }\n  }\n  get headers() {\n    const cache = this[cacheKey];\n    if (cache) {\n      if (!(cache[2] instanceof Headers)) {\n        cache[2] = new Headers(cache[2]);\n      }\n      return cache[2];\n    }\n    return this[getResponseCache]().headers;\n  }\n  get status() {\n    return this[cacheKey]?.[0] ?? this[getResponseCache]().status;\n  }\n  get ok() {\n    const status = this.status;\n    return status >= 200 && status < 300;\n  }\n};\n[\"body\", \"bodyUsed\", \"redirected\", \"statusText\", \"trailers\", \"type\", \"url\"].forEach((k) => {\n  Object.defineProperty(Response2.prototype, k, {\n    get() {\n      return this[getResponseCache]()[k];\n    }\n  });\n});\n[\"arrayBuffer\", \"blob\", \"clone\", \"formData\", \"json\", \"text\"].forEach((k) => {\n  Object.defineProperty(Response2.prototype, k, {\n    value: function() {\n      return this[getResponseCache]()[k]();\n    }\n  });\n});\nObject.setPrototypeOf(Response2, GlobalResponse);\nObject.setPrototypeOf(Response2.prototype, GlobalResponse.prototype);\nfunction writeFromReadableStream(stream5, writable) {\n  if (stream5.locked) {\n    throw new TypeError(\"ReadableStream is locked.\");\n  } else if (writable.destroyed) {\n    stream5.cancel();\n    return;\n  }\n  const reader = stream5.getReader();\n  writable.on(\"close\", cancel);\n  writable.on(\"error\", cancel);\n  reader.read().then(flow, cancel);\n  return reader.closed.finally(() => {\n    writable.off(\"close\", cancel);\n    writable.off(\"error\", cancel);\n  });\n  function cancel(error) {\n    reader.cancel(error).catch(() => {\n    });\n    if (error) {\n      writable.destroy(error);\n    }\n  }\n  function onDrain() {\n    reader.read().then(flow, cancel);\n  }\n  function flow({ done, value }) {\n    try {\n      if (done) {\n        writable.end();\n      } else if (!writable.write(value)) {\n        writable.once(\"drain\", onDrain);\n      } else {\n        return reader.read().then(flow, cancel);\n      }\n    } catch (e2) {\n      cancel(e2);\n    }\n  }\n}\nvar buildOutgoingHttpHeaders = (headers) => {\n  const res = {};\n  if (!(headers instanceof Headers)) {\n    headers = new Headers(headers ?? void 0);\n  }\n  const cookies = [];\n  for (const [k, v] of headers) {\n    if (k === \"set-cookie\") {\n      cookies.push(v);\n    } else {\n      res[k] = v;\n    }\n  }\n  if (cookies.length > 0) {\n    res[\"set-cookie\"] = cookies;\n  }\n  res[\"content-type\"] ??= \"text/plain; charset=UTF-8\";\n  return res;\n};\nvar X_ALREADY_SENT = \"x-hono-already-sent\";\nvar webFetch = global.fetch;\nif (typeof global.crypto === \"undefined\") {\n  global.crypto = crypto;\n}\nglobal.fetch = (info, init) => {\n  init = {\n    // Disable compression handling so people can return the result of a fetch\n    // directly in the loader without messing with the Content-Encoding header.\n    compress: false,\n    ...init\n  };\n  return webFetch(info, init);\n};\nvar regBuffer = /^no$/i;\nvar regContentType = /^(application\\/json\\b|text\\/(?!event-stream\\b))/i;\nvar handleRequestError = () => new Response(null, {\n  status: 400\n});\nvar handleFetchError = (e2) => new Response(null, {\n  status: e2 instanceof Error && (e2.name === \"TimeoutError\" || e2.constructor.name === \"TimeoutError\") ? 504 : 500\n});\nvar handleResponseError = (e2, outgoing) => {\n  const err = e2 instanceof Error ? e2 : new Error(\"unknown error\", { cause: e2 });\n  if (err.code === \"ERR_STREAM_PREMATURE_CLOSE\") {\n    console.info(\"The user aborted a request.\");\n  } else {\n    console.error(e2);\n    if (!outgoing.headersSent) {\n      outgoing.writeHead(500, { \"Content-Type\": \"text/plain\" });\n    }\n    outgoing.end(`Error: ${err.message}`);\n    outgoing.destroy(err);\n  }\n};\nvar flushHeaders = (outgoing) => {\n  if (\"flushHeaders\" in outgoing && outgoing.writable) {\n    outgoing.flushHeaders();\n  }\n};\nvar responseViaCache = async (res, outgoing) => {\n  let [status, body, header] = res[cacheKey];\n  if (header instanceof Headers) {\n    header = buildOutgoingHttpHeaders(header);\n  }\n  if (typeof body === \"string\") {\n    header[\"Content-Length\"] = Buffer.byteLength(body);\n  } else if (body instanceof Uint8Array) {\n    header[\"Content-Length\"] = body.byteLength;\n  } else if (body instanceof Blob) {\n    header[\"Content-Length\"] = body.size;\n  }\n  outgoing.writeHead(status, header);\n  if (typeof body === \"string\" || body instanceof Uint8Array) {\n    outgoing.end(body);\n  } else if (body instanceof Blob) {\n    outgoing.end(new Uint8Array(await body.arrayBuffer()));\n  } else {\n    flushHeaders(outgoing);\n    return writeFromReadableStream(body, outgoing)?.catch(\n      (e2) => handleResponseError(e2, outgoing)\n    );\n  }\n};\nvar responseViaResponseObject = async (res, outgoing, options = {}) => {\n  if (res instanceof Promise) {\n    if (options.errorHandler) {\n      try {\n        res = await res;\n      } catch (err) {\n        const errRes = await options.errorHandler(err);\n        if (!errRes) {\n          return;\n        }\n        res = errRes;\n      }\n    } else {\n      res = await res.catch(handleFetchError);\n    }\n  }\n  if (cacheKey in res) {\n    return responseViaCache(res, outgoing);\n  }\n  const resHeaderRecord = buildOutgoingHttpHeaders(res.headers);\n  if (res.body) {\n    const {\n      \"transfer-encoding\": transferEncoding,\n      \"content-encoding\": contentEncoding,\n      \"content-length\": contentLength,\n      \"x-accel-buffering\": accelBuffering,\n      \"content-type\": contentType\n    } = resHeaderRecord;\n    if (transferEncoding || contentEncoding || contentLength || // nginx buffering variant\n    accelBuffering && regBuffer.test(accelBuffering) || !regContentType.test(contentType)) {\n      outgoing.writeHead(res.status, resHeaderRecord);\n      flushHeaders(outgoing);\n      await writeFromReadableStream(res.body, outgoing);\n    } else {\n      const buffer = await res.arrayBuffer();\n      resHeaderRecord[\"content-length\"] = buffer.byteLength;\n      outgoing.writeHead(res.status, resHeaderRecord);\n      outgoing.end(new Uint8Array(buffer));\n    }\n  } else if (resHeaderRecord[X_ALREADY_SENT]) ; else {\n    outgoing.writeHead(res.status, resHeaderRecord);\n    outgoing.end();\n  }\n};\nvar getRequestListener = (fetchCallback, options = {}) => {\n  if (options.overrideGlobalObjects !== false && global.Request !== Request) {\n    Object.defineProperty(global, \"Request\", {\n      value: Request\n    });\n    Object.defineProperty(global, \"Response\", {\n      value: Response2\n    });\n  }\n  return async (incoming, outgoing) => {\n    let res, req;\n    try {\n      req = newRequest(incoming, options.hostname);\n      outgoing.on(\"close\", () => {\n        const abortController = req[abortControllerKey];\n        if (!abortController) {\n          return;\n        }\n        if (incoming.errored) {\n          req[abortControllerKey].abort(incoming.errored.toString());\n        } else if (!outgoing.writableFinished) {\n          req[abortControllerKey].abort(\"Client connection prematurely closed.\");\n        }\n      });\n      res = fetchCallback(req, { incoming, outgoing });\n      if (cacheKey in res) {\n        return responseViaCache(res, outgoing);\n      }\n    } catch (e2) {\n      if (!res) {\n        if (options.errorHandler) {\n          res = await options.errorHandler(req ? e2 : toRequestError(e2));\n          if (!res) {\n            return;\n          }\n        } else if (!req) {\n          res = handleRequestError();\n        } else {\n          res = handleFetchError(e2);\n        }\n      } else {\n        return handleResponseError(e2, outgoing);\n      }\n    }\n    try {\n      return await responseViaResponseObject(res, outgoing, options);\n    } catch (e2) {\n      return handleResponseError(e2, outgoing);\n    }\n  };\n};\nvar createAdaptorServer = (options) => {\n  const fetchCallback = options.fetch;\n  const requestListener = getRequestListener(fetchCallback, {\n    hostname: options.hostname,\n    overrideGlobalObjects: options.overrideGlobalObjects\n  });\n  const createServer$1 = options.createServer || createServer;\n  const server = createServer$1(options.serverOptions || {}, requestListener);\n  return server;\n};\nvar serve = (options, listeningListener) => {\n  const server = createAdaptorServer(options);\n  server.listen(options?.port ?? 3e3, options.hostname, () => {\n    const serverInfo = server.address();\n    listeningListener && listeningListener(serverInfo);\n  });\n  return server;\n};\nvar COMPRESSIBLE_CONTENT_TYPE_REGEX = /^\\s*(?:text\\/[^;\\s]+|application\\/(?:javascript|json|xml|xml-dtd|ecmascript|dart|postscript|rtf|tar|toml|vnd\\.dart|vnd\\.ms-fontobject|vnd\\.ms-opentype|wasm|x-httpd-php|x-javascript|x-ns-proxy-autoconfig|x-sh|x-tar|x-virtualbox-hdd|x-virtualbox-ova|x-virtualbox-ovf|x-virtualbox-vbox|x-virtualbox-vdi|x-virtualbox-vhd|x-virtualbox-vmdk|x-www-form-urlencoded)|font\\/(?:otf|ttf)|image\\/(?:bmp|vnd\\.adobe\\.photoshop|vnd\\.microsoft\\.icon|vnd\\.ms-dds|x-icon|x-ms-bmp)|message\\/rfc822|model\\/gltf-binary|x-shader\\/x-fragment|x-shader\\/x-vertex|[^;\\s]+?\\+(?:json|text|xml|yaml))(?:[;\\s]|$)/i;\nvar ENCODINGS = {\n  br: \".br\",\n  zstd: \".zst\",\n  gzip: \".gz\"\n};\nvar ENCODINGS_ORDERED_KEYS = Object.keys(ENCODINGS);\nvar createStreamBody = (stream5) => {\n  const body = new ReadableStream({\n    start(controller) {\n      stream5.on(\"data\", (chunk) => {\n        controller.enqueue(chunk);\n      });\n      stream5.on(\"end\", () => {\n        controller.close();\n      });\n    },\n    cancel() {\n      stream5.destroy();\n    }\n  });\n  return body;\n};\nvar addCurrentDirPrefix = (path) => {\n  return `./${path}`;\n};\nvar getStats = (path) => {\n  let stats;\n  try {\n    stats = lstatSync(path);\n  } catch {\n  }\n  return stats;\n};\nvar serveStatic = (options = { root: \"\" }) => {\n  return async (c2, next) => {\n    if (c2.finalized) {\n      return next();\n    }\n    let filename;\n    try {\n      filename = options.path ?? decodeURIComponent(c2.req.path);\n    } catch {\n      await options.onNotFound?.(c2.req.path, c2);\n      return next();\n    }\n    let path = getFilePathWithoutDefaultDocument({\n      filename: options.rewriteRequestPath ? options.rewriteRequestPath(filename) : filename,\n      root: options.root\n    });\n    if (path) {\n      path = addCurrentDirPrefix(path);\n    } else {\n      return next();\n    }\n    let stats = getStats(path);\n    if (stats && stats.isDirectory()) {\n      path = getFilePath({\n        filename: options.rewriteRequestPath ? options.rewriteRequestPath(filename) : filename,\n        root: options.root,\n        defaultDocument: options.index ?? \"index.html\"\n      });\n      if (path) {\n        path = addCurrentDirPrefix(path);\n      } else {\n        return next();\n      }\n      stats = getStats(path);\n    }\n    if (!stats) {\n      await options.onNotFound?.(path, c2);\n      return next();\n    }\n    await options.onFound?.(path, c2);\n    const mimeType = getMimeType(path);\n    c2.header(\"Content-Type\", mimeType || \"application/octet-stream\");\n    if (options.precompressed && (!mimeType || COMPRESSIBLE_CONTENT_TYPE_REGEX.test(mimeType))) {\n      const acceptEncodingSet = new Set(\n        c2.req.header(\"Accept-Encoding\")?.split(\",\").map((encoding) => encoding.trim())\n      );\n      for (const encoding of ENCODINGS_ORDERED_KEYS) {\n        if (!acceptEncodingSet.has(encoding)) {\n          continue;\n        }\n        const precompressedStats = getStats(path + ENCODINGS[encoding]);\n        if (precompressedStats) {\n          c2.header(\"Content-Encoding\", encoding);\n          c2.header(\"Vary\", \"Accept-Encoding\", { append: true });\n          stats = precompressedStats;\n          path = path + ENCODINGS[encoding];\n          break;\n        }\n      }\n    }\n    const size = stats.size;\n    if (c2.req.method == \"HEAD\" || c2.req.method == \"OPTIONS\") {\n      c2.header(\"Content-Length\", size.toString());\n      c2.status(200);\n      return c2.body(null);\n    }\n    const range = c2.req.header(\"range\") || \"\";\n    if (!range) {\n      c2.header(\"Content-Length\", size.toString());\n      return c2.body(createStreamBody(createReadStream(path)), 200);\n    }\n    c2.header(\"Accept-Ranges\", \"bytes\");\n    c2.header(\"Date\", stats.birthtime.toUTCString());\n    const parts = range.replace(/bytes=/, \"\").split(\"-\", 2);\n    const start = parts[0] ? parseInt(parts[0], 10) : 0;\n    let end = parts[1] ? parseInt(parts[1], 10) : stats.size - 1;\n    if (size < end - start + 1) {\n      end = size - 1;\n    }\n    const chunksize = end - start + 1;\n    const stream5 = createReadStream(path, { start, end });\n    c2.header(\"Content-Length\", chunksize.toString());\n    c2.header(\"Content-Range\", `bytes ${start}-${end}/${stats.size}`);\n    return c2.body(createStreamBody(stream5), 206);\n  };\n};\nvar RENDER_TYPE = {\n  STRING_ARRAY: \"string_array\",\n  STRING: \"string\",\n  JSON_STRING: \"json_string\",\n  RAW: \"raw\"\n};\nvar RENDER_TYPE_MAP = {\n  configUrl: RENDER_TYPE.STRING,\n  deepLinking: RENDER_TYPE.RAW,\n  presets: RENDER_TYPE.STRING_ARRAY,\n  plugins: RENDER_TYPE.STRING_ARRAY,\n  spec: RENDER_TYPE.JSON_STRING,\n  url: RENDER_TYPE.STRING,\n  urls: RENDER_TYPE.JSON_STRING,\n  layout: RENDER_TYPE.STRING,\n  docExpansion: RENDER_TYPE.STRING,\n  maxDisplayedTags: RENDER_TYPE.RAW,\n  operationsSorter: RENDER_TYPE.RAW,\n  requestInterceptor: RENDER_TYPE.RAW,\n  responseInterceptor: RENDER_TYPE.RAW,\n  persistAuthorization: RENDER_TYPE.RAW,\n  defaultModelsExpandDepth: RENDER_TYPE.RAW,\n  defaultModelExpandDepth: RENDER_TYPE.RAW,\n  defaultModelRendering: RENDER_TYPE.STRING,\n  displayRequestDuration: RENDER_TYPE.RAW,\n  filter: RENDER_TYPE.RAW,\n  showExtensions: RENDER_TYPE.RAW,\n  showCommonExtensions: RENDER_TYPE.RAW,\n  queryConfigEnabled: RENDER_TYPE.RAW,\n  displayOperationId: RENDER_TYPE.RAW,\n  tagsSorter: RENDER_TYPE.RAW,\n  onComplete: RENDER_TYPE.RAW,\n  syntaxHighlight: RENDER_TYPE.JSON_STRING,\n  tryItOutEnabled: RENDER_TYPE.RAW,\n  requestSnippetsEnabled: RENDER_TYPE.RAW,\n  requestSnippets: RENDER_TYPE.JSON_STRING,\n  oauth2RedirectUrl: RENDER_TYPE.STRING,\n  showMutabledRequest: RENDER_TYPE.RAW,\n  request: RENDER_TYPE.JSON_STRING,\n  supportedSubmitMethods: RENDER_TYPE.JSON_STRING,\n  validatorUrl: RENDER_TYPE.STRING,\n  withCredentials: RENDER_TYPE.RAW,\n  modelPropertyMacro: RENDER_TYPE.RAW,\n  parameterMacro: RENDER_TYPE.RAW\n};\nvar renderSwaggerUIOptions = (options) => {\n  const optionsStrings = Object.entries(options).map(([k, v]) => {\n    const key = k;\n    if (!RENDER_TYPE_MAP[key] || v === void 0) {\n      return \"\";\n    }\n    switch (RENDER_TYPE_MAP[key]) {\n      case RENDER_TYPE.STRING:\n        return `${key}: '${v}'`;\n      case RENDER_TYPE.STRING_ARRAY:\n        if (!Array.isArray(v)) {\n          return \"\";\n        }\n        return `${key}: [${v.map((ve) => `${ve}`).join(\",\")}]`;\n      case RENDER_TYPE.JSON_STRING:\n        return `${key}: ${JSON.stringify(v)}`;\n      case RENDER_TYPE.RAW:\n        return `${key}: ${v}`;\n      default:\n        return \"\";\n    }\n  }).filter((item) => item !== \"\").join(\",\");\n  return optionsStrings;\n};\nvar remoteAssets = ({ version }) => {\n  const url = `https://cdn.jsdelivr.net/npm/swagger-ui-dist${version !== void 0 ? `@${version}` : \"\"}`;\n  return {\n    css: [`${url}/swagger-ui.css`],\n    js: [`${url}/swagger-ui-bundle.js`]\n  };\n};\nvar SwaggerUI = (options) => {\n  const asset = remoteAssets({ version: options?.version });\n  delete options.version;\n  if (options.manuallySwaggerUIHtml) {\n    return options.manuallySwaggerUIHtml(asset);\n  }\n  const optionsStrings = renderSwaggerUIOptions(options);\n  return `\n    <div>\n      <div id=\"swagger-ui\"></div>\n      ${asset.css.map((url) => html`<link rel=\"stylesheet\" href=\"${url}\" />`)}\n      ${asset.js.map((url) => html`<script src=\"${url}\" crossorigin=\"anonymous\"></script>`)}\n      <script>\n        window.onload = () => {\n          window.ui = SwaggerUIBundle({\n            dom_id: '#swagger-ui',${optionsStrings},\n          })\n        }\n      </script>\n    </div>\n  `;\n};\nvar middleware = (options) => async (c2) => {\n  const title = options?.title ?? \"SwaggerUI\";\n  return c2.html(\n    /* html */\n    `\n      <html lang=\"en\">\n        <head>\n          <meta charset=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <meta name=\"description\" content=\"SwaggerUI\" />\n          <title>${title}</title>\n        </head>\n        <body>\n          ${SwaggerUI(options)}\n        </body>\n      </html>\n    `\n  );\n};\n\n// ../../node_modules/.pnpm/hono-openapi@0.4.8_hono@4.8.4_openapi-types@12.1.3_zod@3.25.67/node_modules/hono-openapi/utils.js\nvar e = Symbol(\"openapi\");\nvar n = [\"GET\", \"PUT\", \"POST\", \"DELETE\", \"OPTIONS\", \"HEAD\", \"PATCH\", \"TRACE\"];\nvar s2 = (e2) => e2.charAt(0).toUpperCase() + e2.slice(1);\nvar o = /* @__PURE__ */ new Map();\nvar a = (e2, t2) => {\n  const n2 = `${e2}:${t2}`;\n  if (o.has(n2)) return o.get(n2);\n  let a2 = e2;\n  if (\"/\" === t2) return `${a2}Index`;\n  for (const e3 of t2.split(\"/\")) 123 === e3.charCodeAt(0) ? a2 += `By${s2(e3.slice(1, -1))}` : a2 += s2(e3);\n  return o.set(n2, a2), a2;\n};\nvar r = /* @__PURE__ */ new Map();\nfunction c(e2, t2, n2) {\n  return e2 && t2 in e2 ? e2[t2] ?? n2 : n2;\n}\nfunction i(...e2) {\n  return e2.reduce((e3, t2) => {\n    if (!t2) return e3;\n    let n2;\n    return (\"tags\" in e3 && e3.tags || \"tags\" in t2 && t2.tags) && (n2 = Array.from(/* @__PURE__ */ new Set([...c(e3, \"tags\", []), ...c(t2, \"tags\", [])]))), { ...e3, ...t2, tags: n2, responses: { ...c(e3, \"responses\", {}), ...c(t2, \"responses\", {}) }, parameters: m(e3.parameters, t2.parameters) };\n  }, {});\n}\nfunction p({ path: e2, method: t2, data: n2, schema: s3 }) {\n  e2 = ((e3) => e3.split(\"/\").map((e4) => {\n    let t3 = e4;\n    if (t3.startsWith(\":\")) {\n      const e5 = t3.match(/^:([^{?]+)(?:{(.+)})?(\\?)?$/);\n      e5 ? t3 = `{${e5[1]}}` : (t3 = t3.slice(1, t3.length), t3.endsWith(\"?\") && (t3 = t3.slice(0, -1)), t3 = `{${t3}}`);\n    }\n    return t3;\n  }).join(\"/\"))(e2);\n  const o2 = t2.toLowerCase();\n  if (\"all\" === o2) {\n    if (!n2) return;\n    if (r.has(e2)) {\n      const t3 = r.get(e2) ?? {};\n      r.set(e2, { ...t3, ...n2, parameters: m(t3.parameters, n2.parameters) });\n    } else r.set(e2, n2);\n  } else {\n    const t3 = function(e3) {\n      const t4 = Array.from(r.keys());\n      let n3 = {};\n      for (const s4 of t4) e3.match(s4) && (n3 = i(n3, r.get(s4) ?? {}));\n      return n3;\n    }(e2);\n    s3[e2] = { ...s3[e2] ? s3[e2] : {}, [o2]: { responses: {}, operationId: a(o2, e2), ...i(t3, s3[e2]?.[o2], n2) } };\n  }\n}\nvar f = (e2) => \"$ref\" in e2 ? e2.$ref : `${e2.in} ${e2.name}`;\nfunction m(...e2) {\n  const t2 = e2.flatMap((e3) => e3 ?? []).reduce((e3, t3) => (e3.set(f(t3), t3), e3), /* @__PURE__ */ new Map());\n  return Array.from(t2.values());\n}\nfunction l(e2, { excludeStaticFile: t2 = true, exclude: n2 = [] }) {\n  const s3 = {}, o2 = Array.isArray(n2) ? n2 : [n2];\n  for (const [n3, a2] of Object.entries(e2)) if (!o2.some((e3) => \"string\" == typeof e3 ? n3 === e3 : e3.test(n3)) && (!n3.includes(\"*\") || n3.includes(\"{\")) && (!t2 || (!n3.includes(\".\") || n3.includes(\"{\")))) {\n    for (const e3 of Object.keys(a2)) {\n      const t3 = a2[e3];\n      if (n3.includes(\"{\")) {\n        t3.parameters || (t3.parameters = []);\n        const e4 = n3.split(\"/\").filter((e5) => e5.startsWith(\"{\") && !t3.parameters.find((t4) => \"path\" === t4.in && t4.name === e5.slice(1, e5.length - 1)));\n        for (const n4 of e4) {\n          const e5 = n4.slice(1, n4.length - 1), s4 = t3.parameters.findIndex((t4) => \"param\" === t4.in && t4.name === e5);\n          -1 !== s4 ? t3.parameters[s4].in = \"path\" : t3.parameters.push({ schema: { type: \"string\" }, in: \"path\", name: e5, required: true });\n        }\n      }\n      t3.responses || (t3.responses = { 200: {} });\n    }\n    s3[n3] = a2;\n  }\n  return s3;\n}\nvar u = { documentation: {}, excludeStaticFile: true, exclude: [], excludeMethods: [\"OPTIONS\"], excludeTags: [] };\nvar d = { version: \"3.1.0\", components: {} };\nfunction h(e2, t2) {\n  const n2 = { version: \"3.1.0\", components: {} };\n  let s3;\n  return async (o2) => (s3 || (s3 = await y(e2, t2, n2, o2)), o2.json(s3));\n}\nasync function y(t2, s3 = u, o2 = d, a2) {\n  const r2 = { ...u, ...s3 }, c2 = { ...d, ...o2 }, i2 = r2.documentation ?? {}, f2 = await async function(t3, s4, o3) {\n    const a3 = {};\n    for (const r3 of t3.routes) {\n      if (!(e in r3.handler)) {\n        s4.includeEmptyPaths && p({ method: r3.method, path: r3.path, schema: a3 });\n        continue;\n      }\n      if (s4.excludeMethods.includes(r3.method)) continue;\n      if (false === n.includes(r3.method) && \"ALL\" !== r3.method) continue;\n      const { resolver: t4, metadata: c3 = {} } = r3.handler[e], i3 = s4.defaultOptions?.[r3.method], { docs: f3, components: m2 } = await t4({ ...o3, ...c3 }, i3);\n      o3.components = { ...o3.components, ...m2 ?? {} }, p({ method: r3.method, path: r3.path, data: f3, schema: a3 });\n    }\n    return a3;\n  }(t2, r2, c2);\n  for (const e2 in f2) for (const t3 in f2[e2]) {\n    const n2 = f2[e2][t3]?.hide;\n    if (n2) {\n      let s4 = false;\n      \"boolean\" == typeof n2 ? s4 = n2 : \"function\" == typeof n2 && (a2 ? s4 = n2(a2) : console.warn(`'c' is not defined, cannot evaluate hide function for ${t3} ${e2}`)), s4 && delete f2[e2][t3];\n    }\n  }\n  return { openapi: c2.version, ...{ ...i2, tags: i2.tags?.filter((e2) => !r2.excludeTags?.includes(e2?.name)), info: { title: \"Hono Documentation\", description: \"Development documentation\", version: \"0.0.0\", ...i2.info }, paths: { ...l(f2, r2), ...i2.paths }, components: { ...i2.components, schemas: { ...c2.components, ...i2.components?.schemas } } } };\n}\nfunction w(n2) {\n  const { validateResponse: s3, ...o2 } = n2;\n  return Object.assign(async (e2, o3) => {\n    if (await o3(), s3 && n2.responses) {\n      const o4 = e2.res.status, a2 = e2.res.headers.get(\"content-type\");\n      if (o4 && a2) {\n        const r2 = n2.responses[o4];\n        if (r2 && \"content\" in r2 && r2.content) {\n          const n3 = a2.split(\";\")[0], o5 = r2.content[n3];\n          if (o5?.schema && \"validator\" in o5.schema) try {\n            let t2;\n            const s4 = e2.res.clone();\n            if (\"application/json\" === n3 ? t2 = await s4.json() : \"text/plain\" === n3 && (t2 = await s4.text()), !t2) throw new Error(\"No data to validate!\");\n            await o5.schema.validator(t2);\n          } catch (e3) {\n            let n4 = { status: 500, message: \"Response validation failed!\" };\n            throw \"object\" == typeof s3 && (n4 = { ...n4, ...s3 }), new HTTPException(n4.status, { message: n4.message, cause: e3 });\n          }\n        }\n      }\n    }\n  }, { [e]: { resolver: (e2, t2) => x(e2, o2, t2) } });\n}\nasync function x(e2, t2, n2 = {}) {\n  let s3 = {};\n  const o2 = { ...n2, ...t2, responses: { ...n2?.responses, ...t2.responses } };\n  if (o2.responses) for (const t3 of Object.keys(o2.responses)) {\n    const n3 = o2.responses[t3];\n    if (n3 && \"content\" in n3) for (const t4 of Object.keys(n3.content ?? {})) {\n      const o3 = n3.content?.[t4];\n      if (o3 && (o3.schema && \"builder\" in o3.schema)) {\n        const t5 = await o3.schema.builder(e2);\n        o3.schema = t5.schema, t5.components && (s3 = { ...s3, ...t5.components });\n      }\n    }\n  }\n  return { docs: o2, components: s3 };\n}\nasync function getAgentCardByIdHandler(c2) {\n  const mastra = c2.get(\"mastra\");\n  const agentId = c2.req.param(\"agentId\");\n  const runtimeContext = c2.get(\"runtimeContext\");\n  const result = await getAgentCardByIdHandler$1({\n    mastra,\n    agentId,\n    runtimeContext\n  });\n  return c2.json(result);\n}\nasync function getAgentExecutionHandler(c2) {\n  const mastra = c2.get(\"mastra\");\n  const agentId = c2.req.param(\"agentId\");\n  const runtimeContext = c2.get(\"runtimeContext\");\n  const logger2 = mastra.getLogger();\n  const body = await c2.req.json();\n  if (![\"tasks/send\", \"tasks/sendSubscribe\", \"tasks/get\", \"tasks/cancel\"].includes(body.method)) {\n    return c2.json({ error: { message: `Unsupported method: ${body.method}`, code: \"invalid_method\" } }, 400);\n  }\n  const result = await getAgentExecutionHandler$1({\n    mastra,\n    agentId,\n    runtimeContext,\n    requestId: randomUUID(),\n    method: body.method,\n    params: body.params,\n    logger: logger2\n  });\n  if (body.method === \"tasks/sendSubscribe\") {\n    return stream(\n      c2,\n      async (stream5) => {\n        try {\n          stream5.onAbort(() => {\n            if (!result.locked) {\n              return result.cancel();\n            }\n          });\n          for await (const chunk of result) {\n            await stream5.write(JSON.stringify(chunk) + \"\u001e\");\n          }\n        } catch (err) {\n          logger2.error(\"Error in tasks/sendSubscribe stream: \" + err?.message);\n        }\n      },\n      async (err) => {\n        logger2.error(\"Error in tasks/sendSubscribe stream: \" + err?.message);\n      }\n    );\n  }\n  return c2.json(result);\n}\nfunction handleError(error, defaultMessage) {\n  const apiError = error;\n  throw new HTTPException(apiError.status || 500, {\n    message: apiError.message || defaultMessage,\n    cause: apiError.cause\n  });\n}\nfunction errorHandler(err, c2, isDev) {\n  if (err instanceof HTTPException) {\n    if (isDev) {\n      return c2.json({ error: err.message, cause: err.cause, stack: err.stack }, err.status);\n    }\n    return c2.json({ error: err.message }, err.status);\n  }\n  console.error(err);\n  return c2.json({ error: \"Internal Server Error\" }, 500);\n}\n\n// src/server/handlers/agents.ts\nasync function getAgentsHandler(c2) {\n  const serializedAgents = await getAgentsHandler$1({\n    mastra: c2.get(\"mastra\"),\n    runtimeContext: c2.get(\"runtimeContext\")\n  });\n  return c2.json(serializedAgents);\n}\nasync function getAgentByIdHandler(c2) {\n  const mastra = c2.get(\"mastra\");\n  const agentId = c2.req.param(\"agentId\");\n  const runtimeContext = c2.get(\"runtimeContext\");\n  const isPlayground = c2.req.header(\"x-mastra-dev-playground\") === \"true\";\n  const result = await getAgentByIdHandler$1({\n    mastra,\n    agentId,\n    runtimeContext,\n    isPlayground\n  });\n  return c2.json(result);\n}\nasync function getEvalsByAgentIdHandler(c2) {\n  const mastra = c2.get(\"mastra\");\n  const agentId = c2.req.param(\"agentId\");\n  const runtimeContext = c2.get(\"runtimeContext\");\n  const result = await getEvalsByAgentIdHandler$1({\n    mastra,\n    agentId,\n    runtimeContext\n  });\n  return c2.json(result);\n}\nasync function getLiveEvalsByAgentIdHandler(c2) {\n  const mastra = c2.get(\"mastra\");\n  const agentId = c2.req.param(\"agentId\");\n  const runtimeContext = c2.get(\"runtimeContext\");\n  const result = await getLiveEvalsByAgentIdHandler$1({\n    mastra,\n    agentId,\n    runtimeContext\n  });\n  return c2.json(result);\n}\nasync function generateHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.param(\"agentId\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const body = await c2.req.json();\n    const result = await generateHandler$2({\n      mastra,\n      agentId,\n      runtimeContext,\n      body,\n      abortSignal: c2.req.raw.signal\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error generating from agent\");\n  }\n}\nasync function streamGenerateHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.param(\"agentId\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const body = await c2.req.json();\n    const streamResponse = await streamGenerateHandler$2({\n      mastra,\n      agentId,\n      runtimeContext,\n      body,\n      abortSignal: c2.req.raw.signal\n    });\n    return streamResponse;\n  } catch (error) {\n    return handleError(error, \"Error streaming from agent\");\n  }\n}\nasync function setAgentInstructionsHandler(c2) {\n  try {\n    const isPlayground = c2.get(\"playground\") === true;\n    if (!isPlayground) {\n      return c2.json({ error: \"This API is only available in the playground environment\" }, 403);\n    }\n    const agentId = c2.req.param(\"agentId\");\n    const { instructions } = await c2.req.json();\n    if (!agentId || !instructions) {\n      return c2.json({ error: \"Missing required fields\" }, 400);\n    }\n    const mastra = c2.get(\"mastra\");\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      return c2.json({ error: \"Agent not found\" }, 404);\n    }\n    agent.__updateInstructions(instructions);\n    return c2.json(\n      {\n        instructions\n      },\n      200\n    );\n  } catch (error) {\n    return handleError(error, \"Error setting agent instructions\");\n  }\n}\n\n// src/server/handlers/auth/defaults.ts\nvar defaultAuthConfig = {\n  protected: [\"/api/*\"],\n  // Simple rule system\n  rules: [\n    // Admin users can do anything\n    {\n      condition: (user) => {\n        if (typeof user === \"object\" && user !== null) {\n          if (\"isAdmin\" in user) {\n            return !!user.isAdmin;\n          }\n          if (\"role\" in user) {\n            return user.role === \"admin\";\n          }\n        }\n        return false;\n      },\n      allow: true\n    }\n  ]\n};\n\n// src/server/handlers/auth/helpers.ts\nvar isProtectedPath = (path, method, authConfig) => {\n  const protectedAccess = [...defaultAuthConfig.protected || [], ...authConfig.protected || []];\n  return isAnyMatch(path, method, protectedAccess);\n};\nvar canAccessPublicly = (path, method, authConfig) => {\n  const publicAccess = [...defaultAuthConfig.public || [], ...authConfig.public || []];\n  return isAnyMatch(path, method, publicAccess);\n};\nvar isAnyMatch = (path, method, patterns) => {\n  if (!patterns) {\n    return false;\n  }\n  for (const patternPathOrMethod of patterns) {\n    if (patternPathOrMethod instanceof RegExp) {\n      if (patternPathOrMethod.test(path)) {\n        return true;\n      }\n    }\n    if (typeof patternPathOrMethod === \"string\" && pathMatchesPattern(path, patternPathOrMethod)) {\n      return true;\n    }\n    if (Array.isArray(patternPathOrMethod) && patternPathOrMethod.length === 2) {\n      const [pattern, methodOrMethods] = patternPathOrMethod;\n      if (pathMatchesPattern(path, pattern) && matchesOrIncludes(methodOrMethods, method)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nvar pathMatchesPattern = (path, pattern) => {\n  if (pattern.endsWith(\"*\")) {\n    const prefix = pattern.slice(0, -1);\n    return path.startsWith(prefix);\n  }\n  return path === pattern;\n};\nvar pathMatchesRule = (path, rulePath) => {\n  if (!rulePath) return true;\n  if (typeof rulePath === \"string\") {\n    return pathMatchesPattern(path, rulePath);\n  }\n  if (rulePath instanceof RegExp) {\n    console.log(\"rulePath\", rulePath, path, rulePath.test(path));\n    return rulePath.test(path);\n  }\n  if (Array.isArray(rulePath)) {\n    return rulePath.some((p2) => pathMatchesPattern(path, p2));\n  }\n  return false;\n};\nvar matchesOrIncludes = (values, value) => {\n  if (typeof values === \"string\") {\n    return values === value;\n  }\n  if (Array.isArray(values)) {\n    return values.includes(value);\n  }\n  return false;\n};\nvar checkRules = async (rules, path, method, user) => {\n  for (const i2 in rules || []) {\n    const rule = rules?.[i2];\n    if (!pathMatchesRule(path, rule.path)) {\n      continue;\n    }\n    if (rule.methods && !matchesOrIncludes(rule.methods, method)) {\n      continue;\n    }\n    const condition = rule.condition;\n    if (typeof condition === \"function\") {\n      const allowed = await Promise.resolve().then(() => condition(user)).catch(() => false);\n      if (allowed) {\n        return true;\n      }\n    } else if (rule.allow) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// src/server/handlers/auth/index.ts\nvar authenticationMiddleware = async (c2, next) => {\n  const mastra = c2.get(\"mastra\");\n  const authConfig = mastra.getServer()?.experimental_auth;\n  if (!authConfig) {\n    return next();\n  }\n  if (!isProtectedPath(c2.req.path, c2.req.method, authConfig)) {\n    return next();\n  }\n  if (canAccessPublicly(c2.req.path, c2.req.method, authConfig)) {\n    return next();\n  }\n  const authHeader = c2.req.header(\"Authorization\");\n  let token = authHeader ? authHeader.replace(\"Bearer \", \"\") : null;\n  if (!token && c2.req.query(\"apiKey\")) {\n    token = c2.req.query(\"apiKey\") || null;\n  }\n  if (!token) {\n    return c2.json({ error: \"Authentication required\" }, 401);\n  }\n  try {\n    let user;\n    if (typeof authConfig.authenticateToken === \"function\") {\n      user = await authConfig.authenticateToken(token, c2.req);\n    } else {\n      throw new Error(\"No token verification method configured\");\n    }\n    if (!user) {\n      return c2.json({ error: \"Invalid or expired token\" }, 401);\n    }\n    c2.get(\"runtimeContext\").set(\"user\", user);\n    return next();\n  } catch (err) {\n    console.error(err);\n    return c2.json({ error: \"Invalid or expired token\" }, 401);\n  }\n};\nvar authorizationMiddleware = async (c2, next) => {\n  const mastra = c2.get(\"mastra\");\n  const authConfig = mastra.getServer()?.experimental_auth;\n  if (!authConfig) {\n    return next();\n  }\n  const path = c2.req.path;\n  const method = c2.req.method;\n  if (canAccessPublicly(path, method, authConfig)) {\n    return next();\n  }\n  const user = c2.get(\"runtimeContext\").get(\"user\");\n  if (\"authorizeUser\" in authConfig && typeof authConfig.authorizeUser === \"function\") {\n    try {\n      const isAuthorized = await authConfig.authorizeUser(user, c2.req);\n      if (isAuthorized) {\n        return next();\n      }\n      return c2.json({ error: \"Access denied\" }, 403);\n    } catch (err) {\n      console.error(err);\n      return c2.json({ error: \"Authorization error\" }, 500);\n    }\n  }\n  if (\"authorize\" in authConfig && typeof authConfig.authorize === \"function\") {\n    try {\n      const isAuthorized = await authConfig.authorize(path, method, user, c2);\n      if (isAuthorized) {\n        return next();\n      }\n      return c2.json({ error: \"Access denied\" }, 403);\n    } catch (err) {\n      console.error(err);\n      return c2.json({ error: \"Authorization error\" }, 500);\n    }\n  }\n  if (\"rules\" in authConfig && authConfig.rules && authConfig.rules.length > 0) {\n    const isAuthorized = await checkRules(authConfig.rules, path, method, user);\n    if (isAuthorized) {\n      return next();\n    }\n    return c2.json({ error: \"Access denied\" }, 403);\n  }\n  if (defaultAuthConfig.rules && defaultAuthConfig.rules.length > 0) {\n    const isAuthorized = await checkRules(defaultAuthConfig.rules, path, method, user);\n    if (isAuthorized) {\n      return next();\n    }\n  }\n  return c2.json({ error: \"Access denied\" }, 403);\n};\n\n// src/server/handlers/client.ts\nvar clients = /* @__PURE__ */ new Set();\nfunction handleClientsRefresh(c2) {\n  const stream5 = new ReadableStream({\n    start(controller) {\n      clients.add(controller);\n      controller.enqueue(\"data: connected\\n\\n\");\n      c2.req.raw.signal.addEventListener(\"abort\", () => {\n        clients.delete(controller);\n      });\n    }\n  });\n  return new Response(stream5, {\n    headers: {\n      \"Content-Type\": \"text/event-stream\",\n      \"Cache-Control\": \"no-cache\",\n      Connection: \"keep-alive\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  });\n}\nfunction handleTriggerClientsRefresh(c2) {\n  clients.forEach((controller) => {\n    try {\n      controller.enqueue(\"data: refresh\\n\\n\");\n    } catch {\n      clients.delete(controller);\n    }\n  });\n  return c2.json({ success: true, clients: clients.size });\n}\nasync function getLegacyWorkflowsHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflows = await getLegacyWorkflowsHandler$1({\n      mastra\n    });\n    return c2.json(workflows);\n  } catch (error) {\n    return handleError(error, \"Error getting workflows\");\n  }\n}\nasync function getLegacyWorkflowByIdHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const workflow = await getLegacyWorkflowByIdHandler$1({\n      mastra,\n      workflowId\n    });\n    return c2.json(workflow);\n  } catch (error) {\n    return handleError(error, \"Error getting workflow\");\n  }\n}\nasync function startAsyncLegacyWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const triggerData = await c2.req.json();\n    const runId = c2.req.query(\"runId\");\n    const result = await startAsyncLegacyWorkflowHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      triggerData\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error executing workflow\");\n  }\n}\nasync function createLegacyWorkflowRunHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const prevRunId = c2.req.query(\"runId\");\n    const result = await createLegacyWorkflowRunHandler$1({\n      mastra,\n      workflowId,\n      runId: prevRunId\n    });\n    return c2.json(result);\n  } catch (e2) {\n    return handleError(e2, \"Error creating run\");\n  }\n}\nasync function startLegacyWorkflowRunHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const triggerData = await c2.req.json();\n    const runId = c2.req.query(\"runId\");\n    await startLegacyWorkflowRunHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      triggerData\n    });\n    return c2.json({ message: \"Workflow run started\" });\n  } catch (e2) {\n    return handleError(e2, \"Error starting workflow run\");\n  }\n}\nfunction watchLegacyWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const logger2 = mastra.getLogger();\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.query(\"runId\");\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to watch workflow\" });\n    }\n    return stream(\n      c2,\n      async (stream5) => {\n        try {\n          const result = await watchLegacyWorkflowHandler$1({\n            mastra,\n            workflowId,\n            runId\n          });\n          stream5.onAbort(() => {\n            if (!result.locked) {\n              return result.cancel();\n            }\n          });\n          for await (const chunk of result) {\n            await stream5.write(chunk.toString() + \"\u001e\");\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      },\n      async (err) => {\n        logger2.error(\"Error in watch stream: \" + err?.message);\n      }\n    );\n  } catch (error) {\n    return handleError(error, \"Error watching workflow\");\n  }\n}\nasync function resumeAsyncLegacyWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.query(\"runId\");\n    const { stepId, context } = await c2.req.json();\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    const result = await resumeAsyncLegacyWorkflowHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      body: { stepId, context }\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow step\");\n  }\n}\nasync function resumeLegacyWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.query(\"runId\");\n    const { stepId, context } = await c2.req.json();\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    await resumeLegacyWorkflowHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      body: { stepId, context }\n    });\n    return c2.json({ message: \"Workflow run resumed\" });\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow\");\n  }\n}\nasync function getLegacyWorkflowRunsHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const { fromDate, toDate, limit, offset, resourceId } = c2.req.query();\n    const workflowRuns = await getLegacyWorkflowRunsHandler$1({\n      mastra,\n      workflowId,\n      fromDate: fromDate ? new Date(fromDate) : void 0,\n      toDate: toDate ? new Date(toDate) : void 0,\n      limit: limit ? Number(limit) : void 0,\n      offset: offset ? Number(offset) : void 0,\n      resourceId\n    });\n    return c2.json(workflowRuns);\n  } catch (error) {\n    return handleError(error, \"Error getting workflow runs\");\n  }\n}\nasync function getLogsHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const { transportId, fromDate, toDate, logLevel, page, perPage } = c2.req.query();\n    const filters = c2.req.queries(\"filters\");\n    const logs = await getLogsHandler$1({\n      mastra,\n      transportId,\n      params: {\n        fromDate: fromDate ? new Date(fromDate) : void 0,\n        toDate: toDate ? new Date(toDate) : void 0,\n        logLevel: logLevel ? logLevel : void 0,\n        filters,\n        page: page ? Number(page) : void 0,\n        perPage: perPage ? Number(perPage) : void 0\n      }\n    });\n    return c2.json(logs);\n  } catch (error) {\n    return handleError(error, \"Error getting logs\");\n  }\n}\nasync function getLogsByRunIdHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runId = c2.req.param(\"runId\");\n    const { transportId, fromDate, toDate, logLevel, page, perPage } = c2.req.query();\n    const filters = c2.req.queries(\"filters\");\n    const logs = await getLogsByRunIdHandler$1({\n      mastra,\n      runId,\n      transportId,\n      params: {\n        fromDate: fromDate ? new Date(fromDate) : void 0,\n        toDate: toDate ? new Date(toDate) : void 0,\n        logLevel: logLevel ? logLevel : void 0,\n        filters,\n        page: page ? Number(page) : void 0,\n        perPage: perPage ? Number(perPage) : void 0\n      }\n    });\n    return c2.json(logs);\n  } catch (error) {\n    return handleError(error, \"Error getting logs by run ID\");\n  }\n}\nasync function getLogTransports(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const result = await getLogTransports$1({\n      mastra\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error getting log Transports\");\n  }\n}\nvar classRegExp = /^([A-Z][a-z0-9]*)+$/;\nvar kTypes = [\n  \"string\",\n  \"function\",\n  \"number\",\n  \"object\",\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  \"Function\",\n  \"Object\",\n  \"boolean\",\n  \"bigint\",\n  \"symbol\"\n];\nfunction determineSpecificType(value) {\n  if (value == null) {\n    return \"\" + value;\n  }\n  if (typeof value === \"function\" && value.name) {\n    return `function ${value.name}`;\n  }\n  if (typeof value === \"object\") {\n    if (value.constructor?.name) {\n      return `an instance of ${value.constructor.name}`;\n    }\n    return `${util.inspect(value, { depth: -1 })}`;\n  }\n  let inspected = util.inspect(value, { colors: false });\n  if (inspected.length > 28) {\n    inspected = `${inspected.slice(0, 25)}...`;\n  }\n  return `type ${typeof value} (${inspected})`;\n}\nvar ERR_HTTP_BODY_NOT_ALLOWED = class extends Error {\n  constructor() {\n    super(\"Adding content for this request method or response status is not allowed.\");\n  }\n};\nvar ERR_HTTP_CONTENT_LENGTH_MISMATCH = class extends Error {\n  constructor(actual, expected) {\n    super(`Response body's content-length of ${actual} byte(s) does not match the content-length of ${expected} byte(s) set in header`);\n  }\n};\nvar ERR_HTTP_HEADERS_SENT = class extends Error {\n  constructor(arg) {\n    super(`Cannot ${arg} headers after they are sent to the client`);\n  }\n};\nvar ERR_INVALID_ARG_VALUE = class extends TypeError {\n  constructor(name, value, reason = \"is invalid\") {\n    let inspected = util.inspect(value);\n    if (inspected.length > 128) {\n      inspected = `${inspected.slice(0, 128)}...`;\n    }\n    const type = name.includes(\".\") ? \"property\" : \"argument\";\n    super(`The ${type} '${name}' ${reason}. Received ${inspected}`);\n  }\n};\nvar ERR_INVALID_CHAR = class extends TypeError {\n  constructor(name, field) {\n    let msg = `Invalid character in ${name}`;\n    if (field !== void 0) {\n      msg += ` [\"${field}\"]`;\n    }\n    super(msg);\n  }\n};\nvar ERR_HTTP_INVALID_HEADER_VALUE = class extends TypeError {\n  constructor(value, name) {\n    super(`Invalid value \"${value}\" for header \"${name}\"`);\n  }\n};\nvar ERR_HTTP_INVALID_STATUS_CODE = class extends RangeError {\n  originalStatusCode;\n  constructor(originalStatusCode) {\n    super(`Invalid status code: ${originalStatusCode}`);\n    this.originalStatusCode = originalStatusCode;\n  }\n};\nvar ERR_HTTP_TRAILER_INVALID = class extends Error {\n  constructor() {\n    super(`Trailers are invalid with this transfer encoding`);\n  }\n};\nvar ERR_INVALID_ARG_TYPE = class extends TypeError {\n  constructor(name, expected, actual) {\n    if (!Array.isArray(expected)) {\n      expected = [expected];\n    }\n    let msg = \"The \";\n    if (name.endsWith(\" argument\")) {\n      msg += `${name} `;\n    } else {\n      const type = name.includes(\".\") ? \"property\" : \"argument\";\n      msg += `\"${name}\" ${type} `;\n    }\n    msg += \"must be \";\n    const types = [];\n    const instances = [];\n    const other = [];\n    for (const value of expected) {\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase());\n      } else if (classRegExp.exec(value) !== null) {\n        instances.push(value);\n      } else {\n        other.push(value);\n      }\n    }\n    if (instances.length > 0) {\n      const pos = types.indexOf(\"object\");\n      if (pos !== -1) {\n        types.splice(pos, 1);\n        instances.push(\"Object\");\n      }\n    }\n    if (types.length > 0) {\n      if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(\", \")}, or ${last}`;\n      } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}`;\n      } else {\n        msg += `of type ${types[0]}`;\n      }\n      if (instances.length > 0 || other.length > 0)\n        msg += \" or \";\n    }\n    if (instances.length > 0) {\n      if (instances.length > 2) {\n        const last = instances.pop();\n        msg += `an instance of ${instances.join(\", \")}, or ${last}`;\n      } else {\n        msg += `an instance of ${instances[0]}`;\n        if (instances.length === 2) {\n          msg += ` or ${instances[1]}`;\n        }\n      }\n      if (other.length > 0)\n        msg += \" or \";\n    }\n    if (other.length > 0) {\n      if (other.length > 2) {\n        const last = other.pop();\n        msg += `one of ${other.join(\", \")}, or ${last}`;\n      } else if (other.length === 2) {\n        msg += `one of ${other[0]} or ${other[1]}`;\n      } else {\n        if (other[0].toLowerCase() !== other[0])\n          msg += \"an \";\n        msg += `${other[0]}`;\n      }\n    }\n    msg += `. Received ${determineSpecificType(actual)}`;\n    super(msg);\n  }\n};\nvar ERR_INVALID_HTTP_TOKEN = class extends TypeError {\n  constructor(name, field) {\n    super(`${name} must be a valid HTTP token [\"${field}\"]`);\n  }\n};\nvar ERR_METHOD_NOT_IMPLEMENTED = class extends Error {\n  constructor(methodName) {\n    super(`The ${methodName} method is not implemented`);\n  }\n};\nvar ERR_STREAM_ALREADY_FINISHED = class extends Error {\n  constructor(methodName) {\n    super(`Cannot call ${methodName} after a stream was finished`);\n  }\n};\nvar ERR_STREAM_CANNOT_PIPE = class extends Error {\n  constructor() {\n    super(`Cannot pipe, not readable`);\n  }\n};\nvar ERR_STREAM_DESTROYED = class extends Error {\n  constructor(methodName) {\n    super(`Cannot call ${methodName} after a stream was destroyed`);\n  }\n};\nvar ERR_STREAM_NULL_VALUES = class extends TypeError {\n  constructor() {\n    super(`May not write null values to stream`);\n  }\n};\nvar ERR_STREAM_WRITE_AFTER_END = class extends Error {\n  constructor() {\n    super(`write after end`);\n  }\n};\n\n// ../../node_modules/.pnpm/fetch-to-node@2.1.0/node_modules/fetch-to-node/dist/fetch-to-node/http-incoming.js\nvar kHeaders = Symbol(\"kHeaders\");\nvar kHeadersDistinct = Symbol(\"kHeadersDistinct\");\nvar kHeadersCount = Symbol(\"kHeadersCount\");\nvar kTrailers = Symbol(\"kTrailers\");\nvar kTrailersDistinct = Symbol(\"kTrailersDistinct\");\nvar kTrailersCount = Symbol(\"kTrailersCount\");\nvar FetchIncomingMessage = class extends Readable {\n  get socket() {\n    return null;\n  }\n  set socket(_val) {\n    throw new ERR_METHOD_NOT_IMPLEMENTED(\"socket\");\n  }\n  httpVersionMajor;\n  httpVersionMinor;\n  httpVersion;\n  complete = false;\n  [kHeaders] = null;\n  [kHeadersDistinct] = null;\n  [kHeadersCount] = 0;\n  rawHeaders = [];\n  [kTrailers] = null;\n  [kTrailersDistinct] = null;\n  [kTrailersCount] = 0;\n  rawTrailers = [];\n  joinDuplicateHeaders = false;\n  aborted = false;\n  upgrade = false;\n  // request (server) only\n  url = \"\";\n  method;\n  // TODO: Support ClientRequest\n  // statusCode = null;\n  // statusMessage = null;\n  // client = socket;\n  _consuming;\n  _dumped;\n  // The underlying ReadableStream\n  _stream = null;\n  constructor() {\n    const streamOptions = {};\n    super(streamOptions);\n    this._readableState.readingMore = true;\n    this._consuming = false;\n    this._dumped = false;\n  }\n  get connection() {\n    return null;\n  }\n  set connection(_socket) {\n    console.error(\"No support for IncomingMessage.connection\");\n  }\n  get headers() {\n    if (!this[kHeaders]) {\n      this[kHeaders] = {};\n      const src = this.rawHeaders;\n      const dst = this[kHeaders];\n      for (let n2 = 0; n2 < this[kHeadersCount]; n2 += 2) {\n        this._addHeaderLine(src[n2], src[n2 + 1], dst);\n      }\n    }\n    return this[kHeaders];\n  }\n  set headers(val) {\n    this[kHeaders] = val;\n  }\n  get headersDistinct() {\n    if (!this[kHeadersDistinct]) {\n      this[kHeadersDistinct] = {};\n      const src = this.rawHeaders;\n      const dst = this[kHeadersDistinct];\n      for (let n2 = 0; n2 < this[kHeadersCount]; n2 += 2) {\n        this._addHeaderLineDistinct(src[n2], src[n2 + 1], dst);\n      }\n    }\n    return this[kHeadersDistinct];\n  }\n  set headersDistinct(val) {\n    this[kHeadersDistinct] = val;\n  }\n  get trailers() {\n    if (!this[kTrailers]) {\n      this[kTrailers] = {};\n      const src = this.rawTrailers;\n      const dst = this[kTrailers];\n      for (let n2 = 0; n2 < this[kTrailersCount]; n2 += 2) {\n        this._addHeaderLine(src[n2], src[n2 + 1], dst);\n      }\n    }\n    return this[kTrailers];\n  }\n  set trailers(val) {\n    this[kTrailers] = val;\n  }\n  get trailersDistinct() {\n    if (!this[kTrailersDistinct]) {\n      this[kTrailersDistinct] = {};\n      const src = this.rawTrailers;\n      const dst = this[kTrailersDistinct];\n      for (let n2 = 0; n2 < this[kTrailersCount]; n2 += 2) {\n        this._addHeaderLineDistinct(src[n2], src[n2 + 1], dst);\n      }\n    }\n    return this[kTrailersDistinct];\n  }\n  set trailersDistinct(val) {\n    this[kTrailersDistinct] = val;\n  }\n  setTimeout(msecs, callback) {\n    return this;\n  }\n  async _read(n2) {\n    if (!this._consuming) {\n      this._readableState.readingMore = false;\n      this._consuming = true;\n    }\n    if (this._stream == null) {\n      this.complete = true;\n      this.push(null);\n      return;\n    }\n    const reader = this._stream.getReader();\n    try {\n      const data = await reader.read();\n      if (data.done) {\n        this.complete = true;\n        this.push(null);\n      } else {\n        this.push(data.value);\n      }\n    } catch (e2) {\n      this.destroy(e2);\n    } finally {\n      reader.releaseLock();\n    }\n  }\n  _destroy(err, cb) {\n    if (!this.readableEnded || !this.complete) {\n      this.aborted = true;\n      this.emit(\"aborted\");\n    }\n    setTimeout(onError, 0, this, err, cb);\n  }\n  _addHeaderLines(headers, n2) {\n    if (headers?.length) {\n      let dest;\n      if (this.complete) {\n        this.rawTrailers = headers;\n        this[kTrailersCount] = n2;\n        dest = this[kTrailers];\n      } else {\n        this.rawHeaders = headers;\n        this[kHeadersCount] = n2;\n        dest = this[kHeaders];\n      }\n      if (dest) {\n        for (let i2 = 0; i2 < n2; i2 += 2) {\n          this._addHeaderLine(headers[i2], headers[i2 + 1], dest);\n        }\n      }\n    }\n  }\n  // Add the given (field, value) pair to the message\n  //\n  // Per RFC2616, section 4.2 it is acceptable to join multiple instances of the\n  // same header with a ', ' if the header in question supports specification of\n  // multiple values this way. The one exception to this is the Cookie header,\n  // which has multiple values joined with a '; ' instead. If a header's values\n  // cannot be joined in either of these ways, we declare the first instance the\n  // winner and drop the second. Extended header fields (those beginning with\n  // 'x-') are always joined.\n  _addHeaderLine(field, value, dest) {\n    field = matchKnownFields(field);\n    const flag = field.charCodeAt(0);\n    if (flag === 0 || flag === 2) {\n      field = field.slice(1);\n      if (typeof dest[field] === \"string\") {\n        dest[field] += (flag === 0 ? \", \" : \"; \") + value;\n      } else {\n        dest[field] = value;\n      }\n    } else if (flag === 1) {\n      if (dest[\"set-cookie\"] !== void 0) {\n        dest[\"set-cookie\"].push(value);\n      } else {\n        dest[\"set-cookie\"] = [value];\n      }\n    } else if (this.joinDuplicateHeaders) {\n      if (dest[field] === void 0) {\n        dest[field] = value;\n      } else {\n        dest[field] += \", \" + value;\n      }\n    } else if (dest[field] === void 0) {\n      dest[field] = value;\n    }\n  }\n  _addHeaderLineDistinct(field, value, dest) {\n    field = field.toLowerCase();\n    if (!dest[field]) {\n      dest[field] = [value];\n    } else {\n      dest[field].push(value);\n    }\n  }\n  // Call this instead of resume() if we want to just\n  // dump all the data to /dev/null\n  _dump() {\n    if (!this._dumped) {\n      this._dumped = true;\n      this.removeAllListeners(\"data\");\n      this.resume();\n    }\n  }\n};\nfunction matchKnownFields(field, lowercased = false) {\n  switch (field.length) {\n    case 3:\n      if (field === \"Age\" || field === \"age\")\n        return \"age\";\n      break;\n    case 4:\n      if (field === \"Host\" || field === \"host\")\n        return \"host\";\n      if (field === \"From\" || field === \"from\")\n        return \"from\";\n      if (field === \"ETag\" || field === \"etag\")\n        return \"etag\";\n      if (field === \"Date\" || field === \"date\")\n        return \"\\0date\";\n      if (field === \"Vary\" || field === \"vary\")\n        return \"\\0vary\";\n      break;\n    case 6:\n      if (field === \"Server\" || field === \"server\")\n        return \"server\";\n      if (field === \"Cookie\" || field === \"cookie\")\n        return \"\u0002cookie\";\n      if (field === \"Origin\" || field === \"origin\")\n        return \"\\0origin\";\n      if (field === \"Expect\" || field === \"expect\")\n        return \"\\0expect\";\n      if (field === \"Accept\" || field === \"accept\")\n        return \"\\0accept\";\n      break;\n    case 7:\n      if (field === \"Referer\" || field === \"referer\")\n        return \"referer\";\n      if (field === \"Expires\" || field === \"expires\")\n        return \"expires\";\n      if (field === \"Upgrade\" || field === \"upgrade\")\n        return \"\\0upgrade\";\n      break;\n    case 8:\n      if (field === \"Location\" || field === \"location\")\n        return \"location\";\n      if (field === \"If-Match\" || field === \"if-match\")\n        return \"\\0if-match\";\n      break;\n    case 10:\n      if (field === \"User-Agent\" || field === \"user-agent\")\n        return \"user-agent\";\n      if (field === \"Set-Cookie\" || field === \"set-cookie\")\n        return \"\u0001\";\n      if (field === \"Connection\" || field === \"connection\")\n        return \"\\0connection\";\n      break;\n    case 11:\n      if (field === \"Retry-After\" || field === \"retry-after\")\n        return \"retry-after\";\n      break;\n    case 12:\n      if (field === \"Content-Type\" || field === \"content-type\")\n        return \"content-type\";\n      if (field === \"Max-Forwards\" || field === \"max-forwards\")\n        return \"max-forwards\";\n      break;\n    case 13:\n      if (field === \"Authorization\" || field === \"authorization\")\n        return \"authorization\";\n      if (field === \"Last-Modified\" || field === \"last-modified\")\n        return \"last-modified\";\n      if (field === \"Cache-Control\" || field === \"cache-control\")\n        return \"\\0cache-control\";\n      if (field === \"If-None-Match\" || field === \"if-none-match\")\n        return \"\\0if-none-match\";\n      break;\n    case 14:\n      if (field === \"Content-Length\" || field === \"content-length\")\n        return \"content-length\";\n      break;\n    case 15:\n      if (field === \"Accept-Encoding\" || field === \"accept-encoding\")\n        return \"\\0accept-encoding\";\n      if (field === \"Accept-Language\" || field === \"accept-language\")\n        return \"\\0accept-language\";\n      if (field === \"X-Forwarded-For\" || field === \"x-forwarded-for\")\n        return \"\\0x-forwarded-for\";\n      break;\n    case 16:\n      if (field === \"Content-Encoding\" || field === \"content-encoding\")\n        return \"\\0content-encoding\";\n      if (field === \"X-Forwarded-Host\" || field === \"x-forwarded-host\")\n        return \"\\0x-forwarded-host\";\n      break;\n    case 17:\n      if (field === \"If-Modified-Since\" || field === \"if-modified-since\")\n        return \"if-modified-since\";\n      if (field === \"Transfer-Encoding\" || field === \"transfer-encoding\")\n        return \"\\0transfer-encoding\";\n      if (field === \"X-Forwarded-Proto\" || field === \"x-forwarded-proto\")\n        return \"\\0x-forwarded-proto\";\n      break;\n    case 19:\n      if (field === \"Proxy-Authorization\" || field === \"proxy-authorization\")\n        return \"proxy-authorization\";\n      if (field === \"If-Unmodified-Since\" || field === \"if-unmodified-since\")\n        return \"if-unmodified-since\";\n      break;\n  }\n  if (lowercased) {\n    return \"\\0\" + field;\n  }\n  return matchKnownFields(field.toLowerCase(), true);\n}\nfunction onError(self, error, cb) {\n  if (self.listenerCount(\"error\") === 0) {\n    cb();\n  } else {\n    cb(error);\n  }\n}\n\n// ../../node_modules/.pnpm/fetch-to-node@2.1.0/node_modules/fetch-to-node/dist/utils/types.js\nfunction validateString(value, name) {\n  if (typeof value !== \"string\")\n    throw new ERR_INVALID_ARG_TYPE(name, \"string\", value);\n}\nvar linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;\"\\s]+(?:=(\")?[^;\"\\s]*\\1)?)*$/;\nfunction validateLinkHeaderFormat(value, name) {\n  if (typeof value === \"undefined\" || !linkValueRegExp.exec(value)) {\n    throw new ERR_INVALID_ARG_VALUE(name, value, 'must be an array or string of format \"</styles.css>; rel=preload; as=style\"');\n  }\n}\nfunction validateLinkHeaderValue(hints) {\n  if (typeof hints === \"string\") {\n    validateLinkHeaderFormat(hints, \"hints\");\n    return hints;\n  } else if (Array.isArray(hints)) {\n    const hintsLength = hints.length;\n    let result = \"\";\n    if (hintsLength === 0) {\n      return result;\n    }\n    for (let i2 = 0; i2 < hintsLength; i2++) {\n      const link = hints[i2];\n      validateLinkHeaderFormat(link, \"hints\");\n      result += link;\n      if (i2 !== hintsLength - 1) {\n        result += \", \";\n      }\n    }\n    return result;\n  }\n  throw new ERR_INVALID_ARG_VALUE(\"hints\", hints, 'must be an array or string of format \"</styles.css>; rel=preload; as=style\"');\n}\nfunction isUint8Array(value) {\n  return value != null && value[Symbol.toStringTag] === \"Uint8Array\";\n}\n\n// ../../node_modules/.pnpm/fetch-to-node@2.1.0/node_modules/fetch-to-node/dist/fetch-to-node/internal-http.js\nvar kNeedDrain = Symbol(\"kNeedDrain\");\nvar kOutHeaders = Symbol(\"kOutHeaders\");\nfunction utcDate() {\n  return (/* @__PURE__ */ new Date()).toUTCString();\n}\n\n// ../../node_modules/.pnpm/fetch-to-node@2.1.0/node_modules/fetch-to-node/dist/fetch-to-node/internal-streams-state.js\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 64 * 1024;\n}\n\n// ../../node_modules/.pnpm/fetch-to-node@2.1.0/node_modules/fetch-to-node/dist/fetch-to-node/http-common.js\nvar tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\nfunction checkIsHttpToken(val) {\n  return tokenRegExp.test(val);\n}\nvar headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\nfunction checkInvalidHeaderChar(val) {\n  return headerCharRegex.test(val);\n}\nvar chunkExpression = /(?:^|\\W)chunked(?:$|\\W)/i;\nvar kCorked = Symbol(\"corked\");\nvar kChunkedBuffer = Symbol(\"kChunkedBuffer\");\nvar kChunkedLength = Symbol(\"kChunkedLength\");\nvar kUniqueHeaders = Symbol(\"kUniqueHeaders\");\nvar kBytesWritten = Symbol(\"kBytesWritten\");\nvar kErrored = Symbol(\"errored\");\nvar kHighWaterMark = Symbol(\"kHighWaterMark\");\nvar kRejectNonStandardBodyWrites = Symbol(\"kRejectNonStandardBodyWrites\");\nvar nop = () => {\n};\nvar RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\nfunction isCookieField(s3) {\n  return s3.length === 6 && s3.toLowerCase() === \"cookie\";\n}\nfunction isContentDispositionField(s3) {\n  return s3.length === 19 && s3.toLowerCase() === \"content-disposition\";\n}\nvar WrittenDataBuffer = class {\n  [kCorked] = 0;\n  [kHighWaterMark] = getDefaultHighWaterMark();\n  entries = [];\n  onWrite;\n  constructor(params = {}) {\n    this.onWrite = params.onWrite;\n  }\n  write(data, encoding, callback) {\n    this.entries.push({\n      data,\n      length: data.length,\n      encoding,\n      callback,\n      written: false\n    });\n    this._flush();\n    return true;\n  }\n  cork() {\n    this[kCorked]++;\n  }\n  uncork() {\n    this[kCorked]--;\n    this._flush();\n  }\n  _flush() {\n    if (this[kCorked] <= 0) {\n      for (const [index, entry] of this.entries.entries()) {\n        if (!entry.written) {\n          entry.written = true;\n          if (this.onWrite != null) {\n            this.onWrite(index, entry);\n          }\n          if (entry.callback != null) {\n            entry.callback.call(void 0);\n          }\n        }\n      }\n    }\n  }\n  get writableLength() {\n    return this.entries.reduce((acc, entry) => {\n      return acc + (entry.written && entry.length ? entry.length : 0);\n    }, 0);\n  }\n  get writableHighWaterMark() {\n    return this[kHighWaterMark];\n  }\n  get writableCorked() {\n    return this[kCorked];\n  }\n};\nvar FetchOutgoingMessage = class extends Writable {\n  req;\n  outputData;\n  outputSize;\n  // Difference from Node.js -\n  // `writtenHeaderBytes` is the number of bytes the header has taken.\n  // Since Node.js writes both the headers and body into the same outgoing\n  // stream, it helps to keep track of this so that we can skip that many bytes\n  // from the beginning of the stream when providing the outgoing stream.\n  writtenHeaderBytes = 0;\n  _last;\n  chunkedEncoding;\n  shouldKeepAlive;\n  maxRequestsOnConnectionReached;\n  _defaultKeepAlive;\n  useChunkedEncodingByDefault;\n  sendDate;\n  _removedConnection;\n  _removedContLen;\n  _removedTE;\n  strictContentLength;\n  [kBytesWritten];\n  _contentLength;\n  _hasBody;\n  _trailer;\n  [kNeedDrain];\n  finished;\n  _headerSent;\n  [kCorked];\n  [kChunkedBuffer];\n  [kChunkedLength];\n  _closed;\n  // Difference from Node.js -\n  // In Node.js, this is a socket object.\n  // [kSocket]: null;\n  _header;\n  [kOutHeaders];\n  _keepAliveTimeout;\n  _maxRequestsPerSocket;\n  _onPendingData;\n  [kUniqueHeaders];\n  [kErrored];\n  [kHighWaterMark];\n  [kRejectNonStandardBodyWrites];\n  _writtenDataBuffer = new WrittenDataBuffer({\n    onWrite: this._onDataWritten.bind(this)\n  });\n  constructor(req, options) {\n    super();\n    this.req = req;\n    this.outputData = [];\n    this.outputSize = 0;\n    this.destroyed = false;\n    this._last = false;\n    this.chunkedEncoding = false;\n    this.shouldKeepAlive = true;\n    this.maxRequestsOnConnectionReached = false;\n    this._defaultKeepAlive = true;\n    this.useChunkedEncodingByDefault = true;\n    this.sendDate = false;\n    this._removedConnection = false;\n    this._removedContLen = false;\n    this._removedTE = false;\n    this.strictContentLength = false;\n    this[kBytesWritten] = 0;\n    this._contentLength = null;\n    this._hasBody = true;\n    this._trailer = \"\";\n    this[kNeedDrain] = false;\n    this.finished = false;\n    this._headerSent = false;\n    this[kCorked] = 0;\n    this[kChunkedBuffer] = [];\n    this[kChunkedLength] = 0;\n    this._closed = false;\n    this._header = null;\n    this[kOutHeaders] = null;\n    this._keepAliveTimeout = 0;\n    this._onPendingData = nop;\n    this[kErrored] = null;\n    this[kHighWaterMark] = options?.highWaterMark ?? getDefaultHighWaterMark();\n    this[kRejectNonStandardBodyWrites] = options?.rejectNonStandardBodyWrites ?? false;\n    this[kUniqueHeaders] = null;\n  }\n  _renderHeaders() {\n    if (this._header) {\n      throw new ERR_HTTP_HEADERS_SENT(\"render\");\n    }\n    const headersMap = this[kOutHeaders];\n    const headers = {};\n    if (headersMap !== null) {\n      const keys = Object.keys(headersMap);\n      for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n        const key = keys[i2];\n        headers[headersMap[key][0]] = headersMap[key][1];\n      }\n    }\n    return headers;\n  }\n  cork() {\n    this[kCorked]++;\n    if (this._writtenDataBuffer != null) {\n      this._writtenDataBuffer.cork();\n    }\n  }\n  uncork() {\n    this[kCorked]--;\n    if (this._writtenDataBuffer != null) {\n      this._writtenDataBuffer.uncork();\n    }\n    if (this[kCorked] || this[kChunkedBuffer].length === 0) {\n      return;\n    }\n    const buf = this[kChunkedBuffer];\n    for (const { data, encoding, callback } of buf) {\n      this._send(data ?? \"\", encoding, callback);\n    }\n    this[kChunkedBuffer].length = 0;\n    this[kChunkedLength] = 0;\n  }\n  setTimeout(msecs, callback) {\n    return this;\n  }\n  destroy(error) {\n    if (this.destroyed) {\n      return this;\n    }\n    this.destroyed = true;\n    this[kErrored] = error;\n    return this;\n  }\n  _send(data, encoding, callback, byteLength) {\n    if (!this._headerSent) {\n      const header = this._header;\n      if (typeof data === \"string\" && (encoding === \"utf8\" || encoding === \"latin1\" || !encoding)) {\n        data = header + data;\n      } else {\n        this.outputData.unshift({\n          data: header,\n          encoding: \"latin1\",\n          callback: void 0\n        });\n        this.outputSize += header.length;\n        this._onPendingData(header.length);\n      }\n      this._headerSent = true;\n      this.writtenHeaderBytes = header.length;\n      const [statusLine, ...headerLines] = this._header.split(\"\\r\\n\");\n      const STATUS_LINE_REGEXP = /^HTTP\\/1\\.1 (?<statusCode>\\d+) (?<statusMessage>.*)$/;\n      const statusLineResult = STATUS_LINE_REGEXP.exec(statusLine);\n      if (statusLineResult == null) {\n        throw new Error(\"Unexpected! Status line was \" + statusLine);\n      }\n      const { statusCode: statusCodeText, statusMessage } = statusLineResult.groups ?? {};\n      const statusCode = parseInt(statusCodeText, 10);\n      const headers = [];\n      for (const headerLine of headerLines) {\n        if (headerLine !== \"\") {\n          const pos = headerLine.indexOf(\": \");\n          const k = headerLine.slice(0, pos);\n          const v = headerLine.slice(pos + 2);\n          headers.push([k, v]);\n        }\n      }\n      const event = {\n        statusCode,\n        statusMessage,\n        headers\n      };\n      this.emit(\"_headersSent\", event);\n    }\n    return this._writeRaw(data, encoding, callback, byteLength);\n  }\n  _writeRaw(data, encoding, callback, size) {\n    if (typeof encoding === \"function\") {\n      callback = encoding;\n      encoding = null;\n    }\n    if (this._writtenDataBuffer != null) {\n      if (this.outputData.length) {\n        this._flushOutput(this._writtenDataBuffer);\n      }\n      return this._writtenDataBuffer.write(data, encoding, callback);\n    }\n    this.outputData.push({ data, encoding, callback });\n    this.outputSize += data.length;\n    this._onPendingData(data.length);\n    return this.outputSize < this[kHighWaterMark];\n  }\n  _onDataWritten(index, entry) {\n    const event = { index, entry };\n    this.emit(\"_dataWritten\", event);\n  }\n  _storeHeader(firstLine, headers) {\n    const state = {\n      connection: false,\n      contLen: false,\n      te: false,\n      date: false,\n      expect: false,\n      trailer: false,\n      header: firstLine\n    };\n    if (headers) {\n      if (headers === this[kOutHeaders]) {\n        for (const key in headers) {\n          const entry = headers[key];\n          processHeader(this, state, entry[0], entry[1], false);\n        }\n      } else if (Array.isArray(headers)) {\n        if (headers.length && Array.isArray(headers[0])) {\n          for (let i2 = 0; i2 < headers.length; i2++) {\n            const entry = headers[i2];\n            processHeader(this, state, entry[0], entry[1], true);\n          }\n        } else {\n          if (headers.length % 2 !== 0) {\n            throw new ERR_INVALID_ARG_VALUE(\"headers\", headers);\n          }\n          for (let n2 = 0; n2 < headers.length; n2 += 2) {\n            processHeader(this, state, headers[n2], headers[n2 + 1], true);\n          }\n        }\n      } else {\n        for (const key in headers) {\n          if (headers.hasOwnProperty(key)) {\n            const _headers = headers;\n            processHeader(this, state, key, _headers[key], true);\n          }\n        }\n      }\n    }\n    let { header } = state;\n    if (this.sendDate && !state.date) {\n      header += \"Date: \" + utcDate() + \"\\r\\n\";\n    }\n    if (this.chunkedEncoding && (this.statusCode === 204 || this.statusCode === 304)) {\n      this.chunkedEncoding = false;\n      this.shouldKeepAlive = false;\n    }\n    if (this._removedConnection) {\n      this._last = !this.shouldKeepAlive;\n    } else if (!state.connection) {\n      const shouldSendKeepAlive = this.shouldKeepAlive && (state.contLen || this.useChunkedEncodingByDefault);\n      if (shouldSendKeepAlive && this.maxRequestsOnConnectionReached) {\n        header += \"Connection: close\\r\\n\";\n      } else if (shouldSendKeepAlive) {\n        header += \"Connection: keep-alive\\r\\n\";\n        if (this._keepAliveTimeout && this._defaultKeepAlive) {\n          const timeoutSeconds = Math.floor(this._keepAliveTimeout / 1e3);\n          let max = \"\";\n          if (this._maxRequestsPerSocket && ~~this._maxRequestsPerSocket > 0) {\n            max = `, max=${this._maxRequestsPerSocket}`;\n          }\n          header += `Keep-Alive: timeout=${timeoutSeconds}${max}\\r\n`;\n        }\n      } else {\n        this._last = true;\n        header += \"Connection: close\\r\\n\";\n      }\n    }\n    if (!state.contLen && !state.te) {\n      if (!this._hasBody) {\n        this.chunkedEncoding = false;\n      } else if (!this.useChunkedEncodingByDefault) {\n        this._last = true;\n      } else if (!state.trailer && !this._removedContLen && typeof this._contentLength === \"number\") {\n        header += \"Content-Length: \" + this._contentLength + \"\\r\\n\";\n      } else if (!this._removedTE) {\n        header += \"Transfer-Encoding: chunked\\r\\n\";\n        this.chunkedEncoding = true;\n      } else {\n        this._last = true;\n      }\n    }\n    if (this.chunkedEncoding !== true && state.trailer) {\n      throw new ERR_HTTP_TRAILER_INVALID();\n    }\n    this._header = header + \"\\r\\n\";\n    this._headerSent = false;\n    if (state.expect) {\n      this._send(\"\");\n    }\n  }\n  get _headers() {\n    console.warn(\"DEP0066: OutgoingMessage.prototype._headers is deprecated\");\n    return this.getHeaders();\n  }\n  set _headers(val) {\n    console.warn(\"DEP0066: OutgoingMessage.prototype._headers is deprecated\");\n    if (val == null) {\n      this[kOutHeaders] = null;\n    } else if (typeof val === \"object\") {\n      const headers = this[kOutHeaders] = /* @__PURE__ */ Object.create(null);\n      const keys = Object.keys(val);\n      for (let i2 = 0; i2 < keys.length; ++i2) {\n        const name = keys[i2];\n        headers[name.toLowerCase()] = [name, val[name]];\n      }\n    }\n  }\n  get connection() {\n    return null;\n  }\n  set connection(_socket) {\n    console.error(\"No support for OutgoingMessage.connection\");\n  }\n  get socket() {\n    return null;\n  }\n  set socket(_socket) {\n    console.error(\"No support for OutgoingMessage.socket\");\n  }\n  get _headerNames() {\n    console.warn(\"DEP0066: OutgoingMessage.prototype._headerNames is deprecated\");\n    const headers = this[kOutHeaders];\n    if (headers !== null) {\n      const out = /* @__PURE__ */ Object.create(null);\n      const keys = Object.keys(headers);\n      for (let i2 = 0; i2 < keys.length; ++i2) {\n        const key = keys[i2];\n        const val = headers[key][0];\n        out[key] = val;\n      }\n      return out;\n    }\n    return null;\n  }\n  set _headerNames(val) {\n    console.warn(\"DEP0066: OutgoingMessage.prototype._headerNames is deprecated\");\n    if (typeof val === \"object\" && val !== null) {\n      const headers = this[kOutHeaders];\n      if (!headers)\n        return;\n      const keys = Object.keys(val);\n      for (let i2 = 0; i2 < keys.length; ++i2) {\n        const header = headers[keys[i2]];\n        if (header)\n          header[0] = val[keys[i2]];\n      }\n    }\n  }\n  setHeader(name, value) {\n    if (this._header) {\n      throw new ERR_HTTP_HEADERS_SENT(\"set\");\n    }\n    validateHeaderName(name);\n    validateHeaderValue(name, value);\n    let headers = this[kOutHeaders];\n    if (headers === null) {\n      this[kOutHeaders] = headers = { __proto__: null };\n    }\n    headers[name.toLowerCase()] = [name, value];\n    return this;\n  }\n  setHeaders(headers) {\n    if (this._header) {\n      throw new ERR_HTTP_HEADERS_SENT(\"set\");\n    }\n    if (!headers || Array.isArray(headers) || typeof headers.keys !== \"function\" || typeof headers.get !== \"function\") {\n      throw new ERR_INVALID_ARG_TYPE(\"headers\", [\"Headers\", \"Map\"], headers);\n    }\n    const cookies = [];\n    for (const { 0: key, 1: value } of headers) {\n      if (key === \"set-cookie\") {\n        if (Array.isArray(value)) {\n          cookies.push(...value);\n        } else {\n          cookies.push(value);\n        }\n        continue;\n      }\n      this.setHeader(key, value);\n    }\n    if (cookies.length) {\n      this.setHeader(\"set-cookie\", cookies);\n    }\n    return this;\n  }\n  appendHeader(name, value) {\n    if (this._header) {\n      throw new ERR_HTTP_HEADERS_SENT(\"append\");\n    }\n    validateHeaderName(name);\n    validateHeaderValue(name, value);\n    const field = name.toLowerCase();\n    const headers = this[kOutHeaders];\n    if (headers === null || !headers[field]) {\n      return this.setHeader(name, value);\n    }\n    if (!Array.isArray(headers[field][1])) {\n      headers[field][1] = [headers[field][1]];\n    }\n    const existingValues = headers[field][1];\n    if (Array.isArray(value)) {\n      for (let i2 = 0, length = value.length; i2 < length; i2++) {\n        existingValues.push(value[i2]);\n      }\n    } else {\n      existingValues.push(value);\n    }\n    return this;\n  }\n  getHeader(name) {\n    validateString(name, \"name\");\n    const headers = this[kOutHeaders];\n    if (headers === null) {\n      return;\n    }\n    const entry = headers[name.toLowerCase()];\n    return entry?.[1];\n  }\n  getHeaderNames() {\n    return this[kOutHeaders] !== null ? Object.keys(this[kOutHeaders]) : [];\n  }\n  getRawHeaderNames() {\n    const headersMap = this[kOutHeaders];\n    if (headersMap === null)\n      return [];\n    const values = Object.values(headersMap);\n    const headers = Array(values.length);\n    for (let i2 = 0, l2 = values.length; i2 < l2; i2++) {\n      headers[i2] = values[i2][0];\n    }\n    return headers;\n  }\n  getHeaders() {\n    const headers = this[kOutHeaders];\n    const ret = { __proto__: null };\n    if (headers) {\n      const keys = Object.keys(headers);\n      for (let i2 = 0; i2 < keys.length; ++i2) {\n        const key = keys[i2];\n        const val = headers[key][1];\n        ret[key] = val;\n      }\n    }\n    return ret;\n  }\n  hasHeader(name) {\n    validateString(name, \"name\");\n    return this[kOutHeaders] !== null && !!this[kOutHeaders][name.toLowerCase()];\n  }\n  removeHeader(name) {\n    validateString(name, \"name\");\n    if (this._header) {\n      throw new ERR_HTTP_HEADERS_SENT(\"remove\");\n    }\n    const key = name.toLowerCase();\n    switch (key) {\n      case \"connection\":\n        this._removedConnection = true;\n        break;\n      case \"content-length\":\n        this._removedContLen = true;\n        break;\n      case \"transfer-encoding\":\n        this._removedTE = true;\n        break;\n      case \"date\":\n        this.sendDate = false;\n        break;\n    }\n    if (this[kOutHeaders] !== null) {\n      delete this[kOutHeaders][key];\n    }\n  }\n  _implicitHeader() {\n    throw new ERR_METHOD_NOT_IMPLEMENTED(\"_implicitHeader()\");\n  }\n  get headersSent() {\n    return !!this._header;\n  }\n  write(chunk, encoding, callback) {\n    if (typeof encoding === \"function\") {\n      callback = encoding;\n      encoding = null;\n    }\n    const ret = write_(this, chunk, encoding, callback, false);\n    if (!ret) {\n      this[kNeedDrain] = true;\n    }\n    return ret;\n  }\n  addTrailers(headers) {\n    this._trailer = \"\";\n    const isArray = Array.isArray(headers);\n    const keys = isArray ? [...headers.keys()] : Object.keys(headers);\n    for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n      let field, value;\n      if (isArray) {\n        const _headers = headers;\n        const key = keys[i2];\n        field = _headers[key][0];\n        value = _headers[key][1];\n      } else {\n        const _headers = headers;\n        const key = keys[i2];\n        field = key;\n        value = _headers[key];\n      }\n      validateHeaderName(field, \"Trailer name\");\n      if (Array.isArray(value) && value.length > 1 && (!this[kUniqueHeaders] || !this[kUniqueHeaders].has(field.toLowerCase()))) {\n        for (let j = 0, l3 = value.length; j < l3; j++) {\n          if (checkInvalidHeaderChar(value[j])) {\n            throw new ERR_INVALID_CHAR(\"trailer content\", field);\n          }\n          this._trailer += field + \": \" + value[j] + \"\\r\\n\";\n        }\n      } else {\n        if (Array.isArray(value)) {\n          value = value.join(\"; \");\n        }\n        if (checkInvalidHeaderChar(String(value))) {\n          throw new ERR_INVALID_CHAR(\"trailer content\", field);\n        }\n        this._trailer += field + \": \" + value + \"\\r\\n\";\n      }\n    }\n  }\n  end(chunk, encoding, callback) {\n    if (typeof chunk === \"function\") {\n      callback = chunk;\n      chunk = null;\n      encoding = null;\n    } else if (typeof encoding === \"function\") {\n      callback = encoding;\n      encoding = null;\n    }\n    if (chunk) {\n      if (this.finished) {\n        onError2(this, new ERR_STREAM_WRITE_AFTER_END(), typeof callback !== \"function\" ? nop : callback);\n        return this;\n      }\n      if (this._writtenDataBuffer != null) {\n        this._writtenDataBuffer.cork();\n      }\n      write_(this, chunk, encoding, null, true);\n    } else if (this.finished) {\n      if (typeof callback === \"function\") {\n        if (!this.writableFinished) {\n          this.on(\"finish\", callback);\n        } else {\n          callback(new ERR_STREAM_ALREADY_FINISHED(\"end\"));\n        }\n      }\n      return this;\n    } else if (!this._header) {\n      if (this._writtenDataBuffer != null) {\n        this._writtenDataBuffer.cork();\n      }\n      this._contentLength = 0;\n      this._implicitHeader();\n    }\n    if (typeof callback === \"function\")\n      this.once(\"finish\", callback);\n    if (strictContentLength(this) && this[kBytesWritten] !== this._contentLength) {\n      throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(this[kBytesWritten], this._contentLength);\n    }\n    const finish = onFinish.bind(void 0, this);\n    if (this._hasBody && this.chunkedEncoding) {\n      this._send(\"\", \"latin1\", finish);\n    } else if (!this._headerSent || this.writableLength || chunk) {\n      this._send(\"\", \"latin1\", finish);\n    } else {\n      setTimeout(finish, 0);\n    }\n    if (this._writtenDataBuffer != null) {\n      this._writtenDataBuffer.uncork();\n    }\n    this[kCorked] = 1;\n    this.uncork();\n    this.finished = true;\n    if (this.outputData.length === 0 && this._writtenDataBuffer != null) {\n      this._finish();\n    }\n    return this;\n  }\n  _finish() {\n    this.emit(\"prefinish\");\n  }\n  // No _flush() implementation?\n  _flush() {\n    if (this._writtenDataBuffer != null) {\n      const ret = this._flushOutput(this._writtenDataBuffer);\n      if (this.finished) {\n        this._finish();\n      } else if (ret && this[kNeedDrain]) {\n        this[kNeedDrain] = false;\n        this.emit(\"drain\");\n      }\n    }\n  }\n  _flushOutput(dataBuffer) {\n    while (this[kCorked]) {\n      this[kCorked]--;\n      dataBuffer.cork();\n    }\n    const outputLength = this.outputData.length;\n    if (outputLength <= 0) {\n      return void 0;\n    }\n    const outputData = this.outputData;\n    dataBuffer.cork();\n    let ret;\n    for (let i2 = 0; i2 < outputLength; i2++) {\n      const { data, encoding, callback } = outputData[i2];\n      outputData[i2].data = null;\n      ret = dataBuffer.write(data ?? \"\", encoding, callback);\n    }\n    dataBuffer.uncork();\n    this.outputData = [];\n    this._onPendingData(-this.outputSize);\n    this.outputSize = 0;\n    return ret;\n  }\n  flushHeaders() {\n    if (!this._header) {\n      this._implicitHeader();\n    }\n    this._send(\"\");\n  }\n  pipe(destination) {\n    this.emit(\"error\", new ERR_STREAM_CANNOT_PIPE());\n    return destination;\n  }\n};\nfunction processHeader(self, state, key, value, validate) {\n  if (validate) {\n    validateHeaderName(key);\n  }\n  if (isContentDispositionField(key) && self._contentLength) {\n    if (Array.isArray(value)) {\n      for (let i2 = 0; i2 < value.length; i2++) {\n        value[i2] = String(Buffer$1.from(String(value[i2]), \"latin1\"));\n      }\n    } else {\n      value = String(Buffer$1.from(String(value), \"latin1\"));\n    }\n  }\n  if (Array.isArray(value)) {\n    if ((value.length < 2 || !isCookieField(key)) && (!self[kUniqueHeaders] || !self[kUniqueHeaders].has(key.toLowerCase()))) {\n      for (let i2 = 0; i2 < value.length; i2++) {\n        storeHeader(self, state, key, value[i2], validate);\n      }\n      return;\n    }\n    value = value.join(\"; \");\n  }\n  storeHeader(self, state, key, String(value), validate);\n}\nfunction storeHeader(self, state, key, value, validate) {\n  if (validate) {\n    validateHeaderValue(key, value);\n  }\n  state.header += key + \": \" + value + \"\\r\\n\";\n  matchHeader(self, state, key, value);\n}\nfunction validateHeaderName(name, label) {\n  if (typeof name !== \"string\" || !name || !checkIsHttpToken(name)) {\n    throw new ERR_INVALID_HTTP_TOKEN(label || \"Header name\", name);\n  }\n}\nfunction validateHeaderValue(name, value) {\n  if (value === void 0) {\n    throw new ERR_HTTP_INVALID_HEADER_VALUE(String(value), name);\n  }\n  if (checkInvalidHeaderChar(String(value))) {\n    throw new ERR_INVALID_CHAR(\"header content\", name);\n  }\n}\nfunction matchHeader(self, state, field, value) {\n  if (field.length < 4 || field.length > 17)\n    return;\n  field = field.toLowerCase();\n  switch (field) {\n    case \"connection\":\n      state.connection = true;\n      self._removedConnection = false;\n      if (RE_CONN_CLOSE.exec(value) !== null)\n        self._last = true;\n      else\n        self.shouldKeepAlive = true;\n      break;\n    case \"transfer-encoding\":\n      state.te = true;\n      self._removedTE = false;\n      if (chunkExpression.exec(value) !== null)\n        self.chunkedEncoding = true;\n      break;\n    case \"content-length\":\n      state.contLen = true;\n      self._contentLength = +value;\n      self._removedContLen = false;\n      break;\n    case \"date\":\n    case \"expect\":\n    case \"trailer\":\n      state[field] = true;\n      break;\n    case \"keep-alive\":\n      self._defaultKeepAlive = false;\n      break;\n  }\n}\nfunction onError2(msg, err, callback) {\n  if (msg.destroyed) {\n    return;\n  }\n  setTimeout(emitErrorNt, 0, msg, err, callback);\n}\nfunction emitErrorNt(msg, err, callback) {\n  callback(err);\n  if (typeof msg.emit === \"function\" && !msg.destroyed) {\n    msg.emit(\"error\", err);\n  }\n}\nfunction strictContentLength(msg) {\n  return msg.strictContentLength && msg._contentLength != null && msg._hasBody && !msg._removedContLen && !msg.chunkedEncoding && !msg.hasHeader(\"transfer-encoding\");\n}\nfunction write_(msg, chunk, encoding, callback, fromEnd) {\n  if (typeof callback !== \"function\") {\n    callback = nop;\n  }\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== \"string\" && !isUint8Array(chunk)) {\n    throw new ERR_INVALID_ARG_TYPE(\"chunk\", [\"string\", \"Buffer\", \"Uint8Array\"], chunk);\n  }\n  let err = void 0;\n  if (msg.finished) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (msg.destroyed) {\n    err = new ERR_STREAM_DESTROYED(\"write\");\n  }\n  if (err) {\n    if (!msg.destroyed) {\n      onError2(msg, err, callback);\n    } else {\n      setTimeout(callback, 0, err);\n    }\n    return false;\n  }\n  let len = void 0;\n  if (msg.strictContentLength) {\n    len ??= typeof chunk === \"string\" ? Buffer$1.byteLength(chunk, encoding ?? void 0) : chunk.byteLength;\n    if (strictContentLength(msg) && (fromEnd ? msg[kBytesWritten] + len !== msg._contentLength : msg[kBytesWritten] + len > (msg._contentLength ?? 0))) {\n      throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(len + msg[kBytesWritten], msg._contentLength);\n    }\n    msg[kBytesWritten] += len;\n  }\n  if (!msg._header) {\n    if (fromEnd) {\n      len ??= typeof chunk === \"string\" ? Buffer$1.byteLength(chunk, encoding ?? void 0) : chunk.byteLength;\n      msg._contentLength = len;\n    }\n    msg._implicitHeader();\n  }\n  if (!msg._hasBody) {\n    if (msg[kRejectNonStandardBodyWrites]) {\n      throw new ERR_HTTP_BODY_NOT_ALLOWED();\n    } else {\n      setTimeout(callback, 0);\n      return true;\n    }\n  }\n  if (!fromEnd && msg._writtenDataBuffer != null && !msg._writtenDataBuffer.writableCorked) {\n    msg._writtenDataBuffer.cork();\n    setTimeout(connectionCorkNT, 0, msg._writtenDataBuffer);\n  }\n  let ret;\n  if (msg.chunkedEncoding && chunk.length !== 0) {\n    len ??= typeof chunk === \"string\" ? Buffer$1.byteLength(chunk, encoding ?? void 0) : chunk.byteLength;\n    if (msg[kCorked] && msg._headerSent) {\n      msg[kChunkedBuffer].push({ data: chunk, encoding, callback });\n      msg[kChunkedLength] += len;\n      ret = msg[kChunkedLength] < msg[kHighWaterMark];\n    } else {\n      ret = msg._send(chunk, encoding, callback, len);\n    }\n  } else {\n    ret = msg._send(chunk, encoding, callback, len);\n  }\n  return ret;\n}\nfunction connectionCorkNT(dataBuffer) {\n  dataBuffer.uncork();\n}\nfunction onFinish(outmsg) {\n  outmsg.emit(\"finish\");\n}\nObject.defineProperties(FetchOutgoingMessage.prototype, {\n  errored: {\n    get() {\n      return this[kErrored];\n    }\n  },\n  closed: {\n    get() {\n      return this._closed;\n    }\n  },\n  writableFinished: {\n    get() {\n      return this.finished && this.outputSize === 0 && (this._writtenDataBuffer == null || this._writtenDataBuffer.writableLength === 0);\n    }\n  },\n  writableObjectMode: {\n    get() {\n      return false;\n    }\n  },\n  writableLength: {\n    get() {\n      return this.outputSize + this[kChunkedLength] + (this._writtenDataBuffer != null ? this._writtenDataBuffer.writableLength : 0);\n    }\n  },\n  writableHighWaterMark: {\n    get() {\n      return this._writtenDataBuffer != null ? this._writtenDataBuffer.writableHighWaterMark : this[kHighWaterMark];\n    }\n  },\n  writableCorked: {\n    get() {\n      return this[kCorked];\n    }\n  },\n  writableEnded: {\n    get() {\n      return this.finished;\n    }\n  },\n  writableNeedDrain: {\n    get() {\n      return !this.destroyed && !this.finished && this[kNeedDrain];\n    }\n  }\n});\nvar headerCharRegex2 = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\nfunction checkInvalidHeaderChar2(val) {\n  return headerCharRegex2.test(val);\n}\nvar STATUS_CODES = {\n  100: \"Continue\",\n  // RFC 7231 6.2.1\n  101: \"Switching Protocols\",\n  // RFC 7231 6.2.2\n  102: \"Processing\",\n  // RFC 2518 10.1 (obsoleted by RFC 4918)\n  103: \"Early Hints\",\n  // RFC 8297 2\n  200: \"OK\",\n  // RFC 7231 6.3.1\n  201: \"Created\",\n  // RFC 7231 6.3.2\n  202: \"Accepted\",\n  // RFC 7231 6.3.3\n  203: \"Non-Authoritative Information\",\n  // RFC 7231 6.3.4\n  204: \"No Content\",\n  // RFC 7231 6.3.5\n  205: \"Reset Content\",\n  // RFC 7231 6.3.6\n  206: \"Partial Content\",\n  // RFC 7233 4.1\n  207: \"Multi-Status\",\n  // RFC 4918 11.1\n  208: \"Already Reported\",\n  // RFC 5842 7.1\n  226: \"IM Used\",\n  // RFC 3229 10.4.1\n  300: \"Multiple Choices\",\n  // RFC 7231 6.4.1\n  301: \"Moved Permanently\",\n  // RFC 7231 6.4.2\n  302: \"Found\",\n  // RFC 7231 6.4.3\n  303: \"See Other\",\n  // RFC 7231 6.4.4\n  304: \"Not Modified\",\n  // RFC 7232 4.1\n  305: \"Use Proxy\",\n  // RFC 7231 6.4.5\n  307: \"Temporary Redirect\",\n  // RFC 7231 6.4.7\n  308: \"Permanent Redirect\",\n  // RFC 7238 3\n  400: \"Bad Request\",\n  // RFC 7231 6.5.1\n  401: \"Unauthorized\",\n  // RFC 7235 3.1\n  402: \"Payment Required\",\n  // RFC 7231 6.5.2\n  403: \"Forbidden\",\n  // RFC 7231 6.5.3\n  404: \"Not Found\",\n  // RFC 7231 6.5.4\n  405: \"Method Not Allowed\",\n  // RFC 7231 6.5.5\n  406: \"Not Acceptable\",\n  // RFC 7231 6.5.6\n  407: \"Proxy Authentication Required\",\n  // RFC 7235 3.2\n  408: \"Request Timeout\",\n  // RFC 7231 6.5.7\n  409: \"Conflict\",\n  // RFC 7231 6.5.8\n  410: \"Gone\",\n  // RFC 7231 6.5.9\n  411: \"Length Required\",\n  // RFC 7231 6.5.10\n  412: \"Precondition Failed\",\n  // RFC 7232 4.2\n  413: \"Payload Too Large\",\n  // RFC 7231 6.5.11\n  414: \"URI Too Long\",\n  // RFC 7231 6.5.12\n  415: \"Unsupported Media Type\",\n  // RFC 7231 6.5.13\n  416: \"Range Not Satisfiable\",\n  // RFC 7233 4.4\n  417: \"Expectation Failed\",\n  // RFC 7231 6.5.14\n  418: \"I'm a Teapot\",\n  // RFC 7168 2.3.3\n  421: \"Misdirected Request\",\n  // RFC 7540 9.1.2\n  422: \"Unprocessable Entity\",\n  // RFC 4918 11.2\n  423: \"Locked\",\n  // RFC 4918 11.3\n  424: \"Failed Dependency\",\n  // RFC 4918 11.4\n  425: \"Too Early\",\n  // RFC 8470 5.2\n  426: \"Upgrade Required\",\n  // RFC 2817 and RFC 7231 6.5.15\n  428: \"Precondition Required\",\n  // RFC 6585 3\n  429: \"Too Many Requests\",\n  // RFC 6585 4\n  431: \"Request Header Fields Too Large\",\n  // RFC 6585 5\n  451: \"Unavailable For Legal Reasons\",\n  // RFC 7725 3\n  500: \"Internal Server Error\",\n  // RFC 7231 6.6.1\n  501: \"Not Implemented\",\n  // RFC 7231 6.6.2\n  502: \"Bad Gateway\",\n  // RFC 7231 6.6.3\n  503: \"Service Unavailable\",\n  // RFC 7231 6.6.4\n  504: \"Gateway Timeout\",\n  // RFC 7231 6.6.5\n  505: \"HTTP Version Not Supported\",\n  // RFC 7231 6.6.6\n  506: \"Variant Also Negotiates\",\n  // RFC 2295 8.1\n  507: \"Insufficient Storage\",\n  // RFC 4918 11.5\n  508: \"Loop Detected\",\n  // RFC 5842 7.2\n  509: \"Bandwidth Limit Exceeded\",\n  510: \"Not Extended\",\n  // RFC 2774 7\n  511: \"Network Authentication Required\"\n  // RFC 6585 6\n};\nvar FetchServerResponse = class _FetchServerResponse extends FetchOutgoingMessage {\n  static encoder = new TextEncoder();\n  statusCode = 200;\n  statusMessage;\n  _sent100;\n  _expect_continue;\n  [kOutHeaders] = null;\n  constructor(req, options) {\n    super(req, options);\n    if (req.method === \"HEAD\") {\n      this._hasBody = false;\n    }\n    this.sendDate = true;\n    this._sent100 = false;\n    this._expect_continue = false;\n    if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\n      this.useChunkedEncodingByDefault = chunkExpression.exec(String(req.headers.te)) !== null;\n      this.shouldKeepAlive = false;\n    }\n    this.fetchResponse = new Promise((resolve) => {\n      let finished = false;\n      this.on(\"finish\", () => {\n        finished = true;\n      });\n      const initialDataChunks = [];\n      const initialDataWrittenHandler = (e2) => {\n        if (finished) {\n          return;\n        }\n        initialDataChunks[e2.index] = this.dataFromDataWrittenEvent(e2);\n      };\n      this.on(\"_dataWritten\", initialDataWrittenHandler);\n      this.on(\"_headersSent\", (e2) => {\n        this.off(\"_dataWritten\", initialDataWrittenHandler);\n        const { statusCode, statusMessage, headers } = e2;\n        resolve(this._toFetchResponse(statusCode, statusMessage, headers, initialDataChunks, finished));\n      });\n    });\n  }\n  dataFromDataWrittenEvent(e2) {\n    const { index, entry } = e2;\n    let { data, encoding } = entry;\n    if (index === 0) {\n      if (typeof data !== \"string\") {\n        console.error(\"First chunk should be string, not sure what happened.\");\n        throw new ERR_INVALID_ARG_TYPE(\"packet.data\", [\"string\", \"Buffer\", \"Uint8Array\"], data);\n      }\n      data = data.slice(this.writtenHeaderBytes);\n    }\n    if (typeof data === \"string\") {\n      if (encoding === void 0 || encoding === \"utf8\" || encoding === \"utf-8\") {\n        data = _FetchServerResponse.encoder.encode(data);\n      } else {\n        data = Buffer$1.from(data, encoding ?? void 0);\n      }\n    }\n    return data ?? Buffer$1.from([]);\n  }\n  _finish() {\n    super._finish();\n  }\n  assignSocket(socket) {\n    throw new ERR_METHOD_NOT_IMPLEMENTED(\"assignSocket\");\n  }\n  detachSocket(socket) {\n    throw new ERR_METHOD_NOT_IMPLEMENTED(\"detachSocket\");\n  }\n  writeContinue(callback) {\n    this._writeRaw(\"HTTP/1.1 100 Continue\\r\\n\\r\\n\", \"ascii\", callback);\n    this._sent100 = true;\n  }\n  writeProcessing(callback) {\n    this._writeRaw(\"HTTP/1.1 102 Processing\\r\\n\\r\\n\", \"ascii\", callback);\n  }\n  writeEarlyHints(hints, callback) {\n    let head = \"HTTP/1.1 103 Early Hints\\r\\n\";\n    if (hints.link === null || hints.link === void 0) {\n      return;\n    }\n    const link = validateLinkHeaderValue(hints.link);\n    if (link.length === 0) {\n      return;\n    }\n    head += \"Link: \" + link + \"\\r\\n\";\n    for (const key of Object.keys(hints)) {\n      if (key !== \"link\") {\n        head += key + \": \" + hints[key] + \"\\r\\n\";\n      }\n    }\n    head += \"\\r\\n\";\n    this._writeRaw(head, \"ascii\", callback);\n  }\n  _implicitHeader() {\n    this.writeHead(this.statusCode);\n  }\n  writeHead(statusCode, reason, obj) {\n    if (this._header) {\n      throw new ERR_HTTP_HEADERS_SENT(\"write\");\n    }\n    const originalStatusCode = statusCode;\n    statusCode |= 0;\n    if (statusCode < 100 || statusCode > 999) {\n      throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\n    }\n    if (typeof reason === \"string\") {\n      this.statusMessage = reason;\n    } else {\n      this.statusMessage ||= STATUS_CODES[statusCode] || \"unknown\";\n      obj ??= reason;\n    }\n    this.statusCode = statusCode;\n    let headers;\n    if (this[kOutHeaders]) {\n      let k;\n      if (Array.isArray(obj)) {\n        if (obj.length % 2 !== 0) {\n          throw new ERR_INVALID_ARG_VALUE(\"headers\", obj);\n        }\n        for (let n2 = 0; n2 < obj.length; n2 += 2) {\n          k = obj[n2 + 0];\n          this.removeHeader(String(k));\n        }\n        for (let n2 = 0; n2 < obj.length; n2 += 2) {\n          k = obj[n2];\n          if (k) {\n            this.appendHeader(String(k), obj[n2 + 1]);\n          }\n        }\n      } else if (obj) {\n        const keys = Object.keys(obj);\n        for (let i2 = 0; i2 < keys.length; i2++) {\n          k = keys[i2];\n          if (k) {\n            this.setHeader(k, obj[k]);\n          }\n        }\n      }\n      headers = this[kOutHeaders];\n    } else {\n      headers = obj;\n    }\n    if (checkInvalidHeaderChar2(this.statusMessage)) {\n      throw new ERR_INVALID_CHAR(\"statusMessage\");\n    }\n    const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}\\r\n`;\n    if (statusCode === 204 || statusCode === 304 || statusCode >= 100 && statusCode <= 199) {\n      this._hasBody = false;\n    }\n    if (this._expect_continue && !this._sent100) {\n      this.shouldKeepAlive = false;\n    }\n    const convertedHeaders = headers && !Array.isArray(headers) ? headers : headers;\n    this._storeHeader(statusLine, convertedHeaders ?? null);\n    return this;\n  }\n  // Docs-only deprecated: DEP0063\n  writeHeader = this.writeHead;\n  fetchResponse;\n  _toFetchResponse(status, statusText, sentHeaders, initialDataChunks, finished) {\n    const headers = new Headers();\n    for (const [header, value] of sentHeaders) {\n      headers.append(header, value);\n    }\n    const _this = this;\n    let body = this._hasBody ? new ReadableStream({\n      start(controller) {\n        for (const dataChunk of initialDataChunks) {\n          controller.enqueue(dataChunk);\n        }\n        if (finished) {\n          controller.close();\n        } else {\n          _this.on(\"finish\", () => {\n            finished = true;\n            controller.close();\n          });\n          _this.on(\"_dataWritten\", (e2) => {\n            if (finished) {\n              return;\n            }\n            const data = _this.dataFromDataWrittenEvent(e2);\n            controller.enqueue(data);\n          });\n        }\n      }\n    }) : null;\n    if (body != null && typeof FixedLengthStream !== \"undefined\") {\n      const contentLength = parseInt(headers.get(\"content-length\") ?? \"\", 10);\n      if (contentLength >= 0) {\n        body = body.pipeThrough(new FixedLengthStream(contentLength));\n      }\n    }\n    return new Response(body, {\n      status,\n      statusText,\n      headers\n    });\n  }\n};\nfunction toReqRes(req, options) {\n  const { createIncomingMessage = () => new FetchIncomingMessage(), createServerResponse = (incoming2) => new FetchServerResponse(incoming2), ctx } = {};\n  const incoming = createIncomingMessage(ctx);\n  const serverResponse = createServerResponse(incoming, ctx);\n  const reqUrl = new URL(req.url);\n  const versionMajor = 1;\n  const versionMinor = 1;\n  incoming.httpVersionMajor = versionMajor;\n  incoming.httpVersionMinor = versionMinor;\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\n  incoming.url = reqUrl.pathname + reqUrl.search;\n  incoming.upgrade = false;\n  const headers = [];\n  for (const [headerName, headerValue] of req.headers) {\n    headers.push(headerName);\n    headers.push(headerValue);\n  }\n  incoming._addHeaderLines(headers, headers.length);\n  incoming.method = req.method;\n  incoming._stream = req.body;\n  return {\n    req: incoming,\n    res: serverResponse\n  };\n}\nfunction toFetchResponse(res) {\n  if (!(res instanceof FetchServerResponse)) {\n    throw new Error(\"toFetchResponse must be called on a ServerResponse generated by toReqRes\");\n  }\n  return res.fetchResponse;\n}\n\n// src/server/handlers/mcp.ts\nvar getMastra = (c2) => c2.get(\"mastra\");\nvar getMcpServerMessageHandler = async (c2) => {\n  const mastra = getMastra(c2);\n  const serverId = c2.req.param(\"serverId\");\n  const { req, res } = toReqRes(c2.req.raw);\n  const server = mastra.getMCPServer(serverId);\n  if (!server) {\n    res.writeHead(404, { \"Content-Type\": \"application/json\" });\n    res.end(JSON.stringify({ error: `MCP server '${serverId}' not found` }));\n    return;\n  }\n  try {\n    await server.startHTTP({\n      url: new URL(c2.req.url),\n      httpPath: `/api/mcp/${serverId}/mcp`,\n      req,\n      res\n    });\n    return await toFetchResponse(res);\n  } catch (error) {\n    if (!res.headersSent) {\n      res.writeHead(500, { \"Content-Type\": \"application/json\" });\n      res.end(\n        JSON.stringify({\n          jsonrpc: \"2.0\",\n          error: {\n            code: -32603,\n            message: \"Internal server error\"\n          },\n          id: null\n          // Cannot determine original request ID in catch\n        })\n      );\n    } else {\n      c2.get(\"logger\")?.error(\"Error after headers sent:\", error);\n    }\n  }\n};\nvar getMcpServerSseHandler = async (c2) => {\n  const mastra = getMastra(c2);\n  const serverId = c2.req.param(\"serverId\");\n  const server = mastra.getMCPServer(serverId);\n  if (!server) {\n    return c2.json({ error: `MCP server '${serverId}' not found` }, 404);\n  }\n  const requestUrl = new URL(c2.req.url);\n  const sseConnectionPath = `/api/mcp/${serverId}/sse`;\n  const sseMessagePath = `/api/mcp/${serverId}/messages`;\n  try {\n    return await server.startHonoSSE({\n      url: requestUrl,\n      ssePath: sseConnectionPath,\n      messagePath: sseMessagePath,\n      context: c2\n    });\n  } catch (error) {\n    c2.get(\"logger\")?.error({ err: error, serverId, path: requestUrl.pathname }, \"Error in MCP SSE route handler\");\n    return handleError(error, \"Error handling MCP SSE request\");\n  }\n};\nvar listMcpRegistryServersHandler = async (c2) => {\n  const mastra = getMastra(c2);\n  if (!mastra || typeof mastra.getMCPServers !== \"function\") {\n    c2.get(\"logger\")?.error(\"Mastra instance or getMCPServers method not available in listMcpRegistryServersHandler\");\n    return c2.json({ error: \"Mastra instance or getMCPServers method not available\" }, 500);\n  }\n  const mcpServersMap = mastra.getMCPServers();\n  if (!mcpServersMap) {\n    c2.get(\"logger\")?.warn(\"getMCPServers returned undefined or null in listMcpRegistryServersHandler\");\n    return c2.json({ servers: [], next: null, total_count: 0 });\n  }\n  const allServersArray = Array.from(\n    mcpServersMap instanceof Map ? mcpServersMap.values() : Object.values(mcpServersMap)\n  );\n  const limit = parseInt(c2.req.query(\"limit\") || \"50\", 10);\n  const offset = parseInt(c2.req.query(\"offset\") || \"0\", 10);\n  const paginatedServers = allServersArray.slice(offset, offset + limit);\n  const serverInfos = paginatedServers.map((server) => server.getServerInfo());\n  const total_count = allServersArray.length;\n  let next = null;\n  if (offset + limit < total_count) {\n    const nextOffset = offset + limit;\n    const currentUrl = new URL(c2.req.url);\n    currentUrl.searchParams.set(\"offset\", nextOffset.toString());\n    currentUrl.searchParams.set(\"limit\", limit.toString());\n    next = currentUrl.toString();\n  }\n  return c2.json({\n    servers: serverInfos,\n    next,\n    total_count\n  });\n};\nvar getMcpRegistryServerDetailHandler = async (c2) => {\n  const mastra = getMastra(c2);\n  const serverId = c2.req.param(\"id\");\n  const requestedVersion = c2.req.query(\"version\");\n  if (!mastra || typeof mastra.getMCPServer !== \"function\") {\n    c2.get(\"logger\")?.error(\"Mastra instance or getMCPServer method not available in getMcpRegistryServerDetailHandler\");\n    return c2.json({ error: \"Mastra instance or getMCPServer method not available\" }, 500);\n  }\n  const server = mastra.getMCPServer(serverId);\n  if (!server) {\n    return c2.json({ error: `MCP server with ID '${serverId}' not found` }, 404);\n  }\n  const serverDetailInfo = server.getServerDetail();\n  if (requestedVersion && serverDetailInfo.version_detail.version !== requestedVersion) {\n    c2.get(\"logger\")?.info(\n      `MCP server with ID '${serverId}' found, but version '${serverDetailInfo.version_detail.version}' does not match requested version '${requestedVersion}'.`\n    );\n    return c2.json(\n      {\n        error: `MCP server with ID '${serverId}' found, but not version '${requestedVersion}'. Available version is '${serverDetailInfo.version_detail.version}'.`\n      },\n      404\n      // Return 404 as the specific version is not found\n    );\n  }\n  return c2.json(serverDetailInfo);\n};\nvar listMcpServerToolsHandler = async (c2) => {\n  const mastra = getMastra(c2);\n  const serverId = c2.req.param(\"serverId\");\n  if (!mastra || typeof mastra.getMCPServer !== \"function\") {\n    c2.get(\"logger\")?.error(\"Mastra instance or getMCPServer method not available in listMcpServerToolsHandler\");\n    return c2.json({ error: \"Mastra instance or getMCPServer method not available\" }, 500);\n  }\n  const server = mastra.getMCPServer(serverId);\n  if (!server) {\n    return c2.json({ error: `MCP server with ID '${serverId}' not found` }, 404);\n  }\n  if (typeof server.getToolListInfo !== \"function\") {\n    c2.get(\"logger\")?.error(`MCPServer with ID '${serverId}' does not support getToolListInfo.`);\n    return c2.json({ error: `Server '${serverId}' cannot list tools in this way.` }, 501);\n  }\n  try {\n    const toolListInfo = server.getToolListInfo();\n    return c2.json(toolListInfo);\n  } catch (error) {\n    c2.get(\"logger\")?.error(`Error in listMcpServerToolsHandler for serverId '${serverId}':`, { error: error.message });\n    return handleError(error, `Error listing tools for MCP server '${serverId}'`);\n  }\n};\nvar getMcpServerToolDetailHandler = async (c2) => {\n  const mastra = getMastra(c2);\n  const serverId = c2.req.param(\"serverId\");\n  const toolId = c2.req.param(\"toolId\");\n  if (!mastra || typeof mastra.getMCPServer !== \"function\") {\n    c2.get(\"logger\")?.error(\"Mastra instance or getMCPServer method not available in getMcpServerToolDetailHandler\");\n    return c2.json({ error: \"Mastra instance or getMCPServer method not available\" }, 500);\n  }\n  const server = mastra.getMCPServer(serverId);\n  if (!server) {\n    return c2.json({ error: `MCP server with ID '${serverId}' not found` }, 404);\n  }\n  if (typeof server.getToolInfo !== \"function\") {\n    c2.get(\"logger\")?.error(`MCPServer with ID '${serverId}' does not support getToolInfo.`);\n    return c2.json({ error: `Server '${serverId}' cannot provide tool details in this way.` }, 501);\n  }\n  try {\n    const toolInfo = server.getToolInfo(toolId);\n    if (!toolInfo) {\n      return c2.json({ error: `Tool with ID '${toolId}' not found on MCP server '${serverId}'` }, 404);\n    }\n    return c2.json(toolInfo);\n  } catch (error) {\n    c2.get(\"logger\")?.error(`Error in getMcpServerToolDetailHandler for serverId '${serverId}', toolId '${toolId}':`, {\n      error: error.message\n    });\n    return handleError(error, `Error getting tool '${toolId}' details for MCP server '${serverId}'`);\n  }\n};\nvar executeMcpServerToolHandler = async (c2) => {\n  const mastra = getMastra(c2);\n  const serverId = c2.req.param(\"serverId\");\n  const toolId = c2.req.param(\"toolId\");\n  if (!mastra || typeof mastra.getMCPServer !== \"function\") {\n    c2.get(\"logger\")?.error(\"Mastra instance or getMCPServer method not available in executeMcpServerToolHandler\");\n    return c2.json({ error: \"Mastra instance or getMCPServer method not available\" }, 500);\n  }\n  const server = mastra.getMCPServer(serverId);\n  if (!server) {\n    return c2.json({ error: `MCP server with ID '${serverId}' not found` }, 404);\n  }\n  if (typeof server.executeTool !== \"function\") {\n    c2.get(\"logger\")?.error(`MCPServer with ID '${serverId}' does not support executeTool.`);\n    return c2.json({ error: `Server '${serverId}' cannot execute tools in this way.` }, 501);\n  }\n  try {\n    const body = await c2.req.json();\n    const args = body?.data;\n    const runtimeContext = body?.runtimeContext;\n    const result = await server.executeTool(toolId, args, runtimeContext);\n    return c2.json({ result });\n  } catch (error) {\n    c2.get(\"logger\")?.error(`Error executing tool '${toolId}' on server '${serverId}':`, { error: error.message });\n    if (error.name === \"ZodError\") {\n      return c2.json({ error: \"Invalid tool arguments\", details: error.errors }, 400);\n    }\n    return handleError(error, `Error executing tool '${toolId}' on MCP server '${serverId}'`);\n  }\n};\nasync function getMemoryStatusHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const networkId = c2.req.query(\"networkId\");\n    const result = await getMemoryStatusHandler$1({\n      mastra,\n      agentId,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error getting memory status\");\n  }\n}\nasync function getThreadsHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const resourceId = c2.req.query(\"resourceid\");\n    const networkId = c2.req.query(\"networkId\");\n    const result = await getThreadsHandler$1({\n      mastra,\n      agentId,\n      resourceId,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error getting threads\");\n  }\n}\nasync function getThreadByIdHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const threadId = c2.req.param(\"threadId\");\n    const networkId = c2.req.query(\"networkId\");\n    const result = await getThreadByIdHandler$1({\n      mastra,\n      agentId,\n      threadId,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error getting thread\");\n  }\n}\nasync function saveMessagesHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const networkId = c2.req.query(\"networkId\");\n    const body = await c2.req.json();\n    const result = await saveMessagesHandler$1({\n      mastra,\n      agentId,\n      body,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error saving messages\");\n  }\n}\nasync function createThreadHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const networkId = c2.req.query(\"networkId\");\n    const body = await c2.req.json();\n    const result = await createThreadHandler$1({\n      mastra,\n      agentId,\n      body,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error saving thread to memory\");\n  }\n}\nasync function updateThreadHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const threadId = c2.req.param(\"threadId\");\n    const networkId = c2.req.query(\"networkId\");\n    const body = await c2.req.json();\n    const result = await updateThreadHandler$1({\n      mastra,\n      agentId,\n      threadId,\n      body,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error updating thread\");\n  }\n}\nasync function deleteThreadHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const threadId = c2.req.param(\"threadId\");\n    const networkId = c2.req.query(\"networkId\");\n    const result = await deleteThreadHandler$1({\n      mastra,\n      agentId,\n      threadId,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error deleting thread\");\n  }\n}\nasync function getMessagesHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const networkId = c2.req.query(\"networkId\");\n    const threadId = c2.req.param(\"threadId\");\n    const rawLimit = c2.req.query(\"limit\");\n    let limit = void 0;\n    if (rawLimit !== void 0) {\n      const n2 = Number(rawLimit);\n      if (Number.isFinite(n2) && Number.isInteger(n2) && n2 > 0) {\n        limit = n2;\n      }\n    }\n    const result = await getMessagesHandler$1({\n      mastra,\n      agentId,\n      threadId,\n      networkId,\n      limit\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error getting messages\");\n  }\n}\nasync function updateWorkingMemoryHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const threadId = c2.req.param(\"threadId\");\n    const networkId = c2.req.query(\"networkId\");\n    const body = await c2.req.json();\n    const result = await updateWorkingMemoryHandler$1({\n      mastra,\n      agentId,\n      threadId,\n      body,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error updating working memory\");\n  }\n}\nasync function getWorkingMemoryHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.query(\"agentId\");\n    const threadId = c2.req.param(\"threadId\");\n    const resourceId = c2.req.query(\"resourceId\");\n    const networkId = c2.req.query(\"networkId\");\n    const result = await getWorkingMemoryHandler$1({\n      mastra,\n      agentId,\n      threadId,\n      resourceId,\n      networkId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error getting working memory\");\n  }\n}\nasync function getNetworksHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const networks = await getNetworksHandler$1({\n      mastra,\n      runtimeContext\n    });\n    return c2.json(networks);\n  } catch (error) {\n    return handleError(error, \"Error getting networks\");\n  }\n}\nasync function getNetworkByIdHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const networkId = c2.req.param(\"networkId\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const network = await getNetworkByIdHandler$1({\n      mastra,\n      networkId,\n      runtimeContext\n    });\n    return c2.json(network);\n  } catch (error) {\n    return handleError(error, \"Error getting network by ID\");\n  }\n}\nasync function generateHandler2(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const networkId = c2.req.param(\"networkId\");\n    const body = await c2.req.json();\n    const result = await generateHandler$1({\n      mastra,\n      runtimeContext,\n      networkId,\n      body\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error generating from network\");\n  }\n}\nasync function streamGenerateHandler2(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const networkId = c2.req.param(\"networkId\");\n    const body = await c2.req.json();\n    const streamResponse = await streamGenerateHandler$1({\n      mastra,\n      runtimeContext,\n      networkId,\n      body\n    });\n    return streamResponse;\n  } catch (error) {\n    return handleError(error, \"Error streaming from network\");\n  }\n}\nasync function generateSystemPromptHandler(c2) {\n  try {\n    const agentId = c2.req.param(\"agentId\");\n    const isPlayground = c2.get(\"playground\") === true;\n    if (!isPlayground) {\n      return c2.json({ error: \"This API is only available in the playground environment\" }, 403);\n    }\n    const { instructions, comment } = await c2.req.json();\n    if (!instructions) {\n      return c2.json({ error: \"Missing instructions in request body\" }, 400);\n    }\n    const mastra = c2.get(\"mastra\");\n    const agent = mastra.getAgent(agentId);\n    if (!agent) {\n      return c2.json({ error: \"Agent not found\" }, 404);\n    }\n    let evalSummary = \"\";\n    try {\n      const testEvals = await mastra.getStorage()?.getEvalsByAgentName?.(agent.name, \"test\") || [];\n      const liveEvals = await mastra.getStorage()?.getEvalsByAgentName?.(agent.name, \"live\") || [];\n      const evalsMapped = [...testEvals, ...liveEvals].filter(\n        ({ instructions: evalInstructions }) => evalInstructions === instructions\n      );\n      evalSummary = evalsMapped.map(\n        ({ input, output, result: result2 }) => `\n          Input: ${input}\n\n          Output: ${output}\n\n          Result: ${JSON.stringify(result2)}\n\n        `\n      ).join(\"\");\n    } catch (error) {\n      mastra.getLogger().error(`Error fetching evals`, { error });\n    }\n    const ENHANCE_SYSTEM_PROMPT_INSTRUCTIONS = `\n            You are an expert system prompt engineer, specialized in analyzing and enhancing instructions to create clear, effective, and comprehensive system prompts. Your goal is to help users transform their basic instructions into well-structured system prompts that will guide AI behavior effectively.\n            Follow these steps to analyze and enhance the instructions:\n            1. ANALYSIS PHASE\n            - Identify the core purpose and goals\n            - Extract key constraints and requirements\n            - Recognize domain-specific terminology and concepts\n            - Note any implicit assumptions that should be made explicit\n            2. PROMPT STRUCTURE\n            Create a system prompt with these components:\n            a) ROLE DEFINITION\n                - Clear statement of the AI's role and purpose\n                - Key responsibilities and scope\n                - Primary stakeholders and users\n            b) CORE CAPABILITIES\n                - Main functions and abilities\n                - Specific domain knowledge required\n                - Tools and resources available\n            c) BEHAVIORAL GUIDELINES\n                - Communication style and tone\n                - Decision-making framework\n                - Error handling approach\n                - Ethical considerations\n            d) CONSTRAINTS & BOUNDARIES\n                - Explicit limitations\n                - Out-of-scope activities\n                - Security and privacy considerations\n            e) SUCCESS CRITERIA\n                - Quality standards\n                - Expected outcomes\n                - Performance metrics\n            3. QUALITY CHECKS\n            Ensure the prompt is:\n            - Clear and unambiguous\n            - Comprehensive yet concise\n            - Properly scoped\n            - Technically accurate\n            - Ethically sound\n            4. OUTPUT FORMAT\n            Return a structured response with:\n            - Enhanced system prompt\n            - Analysis of key components\n            - Identified goals and constraints\n            - Core domain concepts\n            Remember: A good system prompt should be specific enough to guide behavior but flexible enough to handle edge cases. \n            Focus on creating prompts that are clear, actionable, and aligned with the intended use case.\n        `;\n    const systemPromptAgent = new Agent({\n      name: \"system-prompt-enhancer\",\n      instructions: ENHANCE_SYSTEM_PROMPT_INSTRUCTIONS,\n      model: agent.llm?.getModel()\n    });\n    const result = await systemPromptAgent.generate(\n      `\n            We need to improve the system prompt. \n            Current: ${instructions}\n            ${comment ? `User feedback: ${comment}` : \"\"}\n            ${evalSummary ? `\nEvaluation Results:\n${evalSummary}` : \"\"}\n        `,\n      {\n        output: z.object({\n          new_prompt: z.string(),\n          explanation: z.string()\n        })\n      }\n    );\n    return c2.json(result?.object || {});\n  } catch (error) {\n    return handleError(error, \"Error generating system prompt\");\n  }\n}\n\n// src/server/handlers/root.ts\nasync function rootHandler(c2) {\n  return c2.text(\"Hello to the Mastra API!\");\n}\nasync function getTelemetryHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const { name, scope, page, perPage, fromDate, toDate } = c2.req.query();\n    const attribute = c2.req.queries(\"attribute\");\n    const traces = await getTelemetryHandler$1({\n      mastra,\n      body: {\n        name,\n        scope,\n        page: Number(page ?? 0),\n        perPage: Number(perPage ?? 100),\n        attribute,\n        fromDate: fromDate ? new Date(fromDate) : void 0,\n        toDate: toDate ? new Date(toDate) : void 0\n      }\n    });\n    return c2.json({ traces });\n  } catch (error) {\n    return handleError(error, \"Error getting telemetry traces\");\n  }\n}\nasync function storeTelemetryHandler(c2) {\n  try {\n    const body = await c2.req.json();\n    const mastra = c2.get(\"mastra\");\n    const result = await storeTelemetryHandler$1({ mastra, body });\n    if (result.status === \"error\") {\n      return c2.json(result, 500);\n    }\n    return c2.json(result, 200);\n  } catch (error) {\n    return handleError(error, \"Error storing telemetry traces\");\n  }\n}\nasync function getToolsHandler(c2) {\n  try {\n    const tools = c2.get(\"tools\");\n    const result = await getToolsHandler$1({\n      tools\n    });\n    return c2.json(result || {});\n  } catch (error) {\n    return handleError(error, \"Error getting tools\");\n  }\n}\nasync function getToolByIdHandler(c2) {\n  try {\n    const tools = c2.get(\"tools\");\n    const toolId = c2.req.param(\"toolId\");\n    const result = await getToolByIdHandler$1({\n      tools,\n      toolId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error getting tool\");\n  }\n}\nfunction executeToolHandler(tools) {\n  return async (c2) => {\n    try {\n      const mastra = c2.get(\"mastra\");\n      const runtimeContext = c2.get(\"runtimeContext\");\n      const toolId = decodeURIComponent(c2.req.param(\"toolId\"));\n      const runId = c2.req.query(\"runId\");\n      const { data } = await c2.req.json();\n      const result = await executeToolHandler$1(tools)({\n        mastra,\n        toolId,\n        data,\n        runtimeContext,\n        runId\n      });\n      return c2.json(result);\n    } catch (error) {\n      return handleError(error, \"Error executing tool\");\n    }\n  };\n}\nasync function executeAgentToolHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const agentId = c2.req.param(\"agentId\");\n    const toolId = c2.req.param(\"toolId\");\n    const { data } = await c2.req.json();\n    const result = await executeAgentToolHandler$1({\n      mastra,\n      agentId,\n      toolId,\n      data,\n      runtimeContext\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error executing tool\");\n  }\n}\nasync function upsertVectors(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const vectorName = c2.req.param(\"vectorName\");\n    const body = await c2.req.json();\n    const result = await upsertVectors$1({\n      mastra,\n      vectorName,\n      index: body\n    });\n    return c2.json({ ids: result });\n  } catch (error) {\n    return handleError(error, \"Error upserting vectors\");\n  }\n}\nasync function createIndex(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const vectorName = c2.req.param(\"vectorName\");\n    const body = await c2.req.json();\n    await createIndex$1({\n      mastra,\n      vectorName,\n      index: body\n    });\n    return c2.json({ success: true });\n  } catch (error) {\n    return handleError(error, \"Error creating index\");\n  }\n}\nasync function queryVectors(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const vectorName = c2.req.param(\"vectorName\");\n    const { indexName, queryVector, topK = 10, filter, includeVector = false } = await c2.req.json();\n    const results = await queryVectors$1({\n      mastra,\n      vectorName,\n      query: { indexName, queryVector, topK, filter, includeVector }\n    });\n    return c2.json({ results });\n  } catch (error) {\n    return handleError(error, \"Error querying vectors\");\n  }\n}\nasync function listIndexes(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const vectorName = c2.req.param(\"vectorName\");\n    const indexes = await listIndexes$1({\n      mastra,\n      vectorName\n    });\n    return c2.json({ indexes });\n  } catch (error) {\n    return handleError(error, \"Error listing indexes\");\n  }\n}\nasync function describeIndex(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const vectorName = c2.req.param(\"vectorName\");\n    const indexName = c2.req.param(\"indexName\");\n    if (!indexName) {\n      throw new HTTPException(400, { message: \"Index name is required\" });\n    }\n    const stats = await describeIndex$1({\n      mastra,\n      vectorName,\n      indexName\n    });\n    return c2.json({\n      dimension: stats.dimension,\n      count: stats.count,\n      metric: stats.metric?.toLowerCase()\n    });\n  } catch (error) {\n    return handleError(error, \"Error describing index\");\n  }\n}\nasync function deleteIndex(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const vectorName = c2.req.param(\"vectorName\");\n    const indexName = c2.req.param(\"indexName\");\n    if (!indexName) {\n      throw new HTTPException(400, { message: \"Index name is required\" });\n    }\n    await deleteIndex$1({\n      mastra,\n      vectorName,\n      indexName\n    });\n    return c2.json({ success: true });\n  } catch (error) {\n    return handleError(error, \"Error deleting index\");\n  }\n}\nasync function getVNextNetworksHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const networks = await getVNextNetworksHandler$1({\n      mastra,\n      runtimeContext\n    });\n    return c2.json(networks);\n  } catch (error) {\n    return handleError(error, \"Error getting networks\");\n  }\n}\nasync function getVNextNetworkByIdHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const networkId = c2.req.param(\"networkId\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const network = await getVNextNetworkByIdHandler$1({\n      mastra,\n      networkId,\n      runtimeContext\n    });\n    return c2.json(network);\n  } catch (error) {\n    return handleError(error, \"Error getting network by ID\");\n  }\n}\nasync function generateVNextNetworkHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const networkId = c2.req.param(\"networkId\");\n    const body = await c2.req.json();\n    const result = await generateVNextNetworkHandler$1({\n      mastra,\n      runtimeContext,\n      networkId,\n      body\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error generating from network\");\n  }\n}\nasync function streamGenerateVNextNetworkHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const logger2 = mastra.getLogger();\n    const networkId = c2.req.param(\"networkId\");\n    const body = await c2.req.json();\n    c2.header(\"Transfer-Encoding\", \"chunked\");\n    return stream(\n      c2,\n      async (stream5) => {\n        try {\n          const result = await streamGenerateVNextNetworkHandler$1({\n            mastra,\n            runtimeContext,\n            networkId,\n            body\n          });\n          const reader = result.stream.getReader();\n          stream5.onAbort(() => {\n            void reader.cancel(\"request aborted\");\n          });\n          let chunkResult;\n          while ((chunkResult = await reader.read()) && !chunkResult.done) {\n            await stream5.write(JSON.stringify(chunkResult.value) + \"\u001e\");\n          }\n        } catch (err) {\n          mastra.getLogger().error(\"Error in network stream: \" + (err?.message ?? \"Unknown error\"));\n        }\n      },\n      async (err) => {\n        logger2.error(\"Error in network stream: \" + err?.message);\n      }\n    );\n  } catch (error) {\n    return handleError(error, \"Error streaming from network\");\n  }\n}\nasync function loopVNextNetworkHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const networkId = c2.req.param(\"networkId\");\n    const body = await c2.req.json();\n    const result = await loopVNextNetworkHandler$1({\n      mastra,\n      runtimeContext,\n      networkId,\n      body\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error looping from network\");\n  }\n}\nasync function loopStreamVNextNetworkHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const logger2 = mastra.getLogger();\n    const networkId = c2.req.param(\"networkId\");\n    const body = await c2.req.json();\n    c2.header(\"Transfer-Encoding\", \"chunked\");\n    return stream(\n      c2,\n      async (stream5) => {\n        try {\n          const result = await loopStreamVNextNetworkHandler$1({\n            mastra,\n            runtimeContext,\n            networkId,\n            body\n          });\n          const reader = result.stream.getReader();\n          stream5.onAbort(() => {\n            void reader.cancel(\"request aborted\");\n          });\n          let chunkResult;\n          while ((chunkResult = await reader.read()) && !chunkResult.done) {\n            await stream5.write(JSON.stringify(chunkResult.value) + \"\u001e\");\n          }\n        } catch (err) {\n          mastra.getLogger().error(\"Error in network loop stream: \" + (err?.message ?? \"Unknown error\"));\n        }\n      },\n      async (err) => {\n        logger2.error(\"Error in network loop stream: \" + err?.message);\n      }\n    );\n  } catch (error) {\n    return handleError(error, \"Error streaming network loop\");\n  }\n}\nasync function getSpeakersHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.param(\"agentId\");\n    const speakers = await getSpeakersHandler$1({\n      mastra,\n      agentId\n    });\n    return c2.json(speakers);\n  } catch (error) {\n    return handleError(error, \"Error getting speakers\");\n  }\n}\nasync function speakHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.param(\"agentId\");\n    const { input, options } = await c2.req.json();\n    const audioStream = await generateSpeechHandler({\n      mastra,\n      agentId,\n      body: { text: input, speakerId: options?.speakerId }\n    });\n    c2.header(\"Content-Type\", `audio/${options?.filetype ?? \"mp3\"}`);\n    c2.header(\"Transfer-Encoding\", \"chunked\");\n    return c2.body(audioStream);\n  } catch (error) {\n    return handleError(error, \"Error generating speech\");\n  }\n}\nasync function getListenerHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.param(\"agentId\");\n    const listeners = await getListenerHandler$1({\n      mastra,\n      agentId\n    });\n    return c2.json(listeners);\n  } catch (error) {\n    return handleError(error, \"Error getting listener\");\n  }\n}\nasync function listenHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const agentId = c2.req.param(\"agentId\");\n    const formData = await c2.req.formData();\n    const audioFile = formData.get(\"audio\");\n    const options = formData.get(\"options\");\n    if (!audioFile || !(audioFile instanceof File)) {\n      throw new HTTPException(400, { message: \"Audio file is required\" });\n    }\n    const audioData = await audioFile.arrayBuffer();\n    let parsedOptions = {};\n    try {\n      parsedOptions = options ? JSON.parse(options) : {};\n    } catch {\n    }\n    const transcription = await transcribeSpeechHandler({\n      mastra,\n      agentId,\n      body: {\n        audioData: Buffer.from(audioData),\n        options: parsedOptions\n      }\n    });\n    return c2.json({ text: transcription?.text });\n  } catch (error) {\n    return handleError(error, \"Error transcribing speech\");\n  }\n}\nasync function getWorkflowsHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflows = await getWorkflowsHandler$1({\n      mastra\n    });\n    return c2.json(workflows);\n  } catch (error) {\n    return handleError(error, \"Error getting workflows\");\n  }\n}\nasync function getWorkflowByIdHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const workflow = await getWorkflowByIdHandler$1({\n      mastra,\n      workflowId\n    });\n    return c2.json(workflow);\n  } catch (error) {\n    return handleError(error, \"Error getting workflow\");\n  }\n}\nasync function createWorkflowRunHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const prevRunId = c2.req.query(\"runId\");\n    const result = await createWorkflowRunHandler$1({\n      mastra,\n      workflowId,\n      runId: prevRunId\n    });\n    return c2.json(result);\n  } catch (e2) {\n    return handleError(e2, \"Error creating run\");\n  }\n}\nasync function startAsyncWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const { inputData } = await c2.req.json();\n    const runId = c2.req.query(\"runId\");\n    const result = await startAsyncWorkflowHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      inputData\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error executing workflow\");\n  }\n}\nasync function startWorkflowRunHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const { inputData } = await c2.req.json();\n    const runId = c2.req.query(\"runId\");\n    await startWorkflowRunHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      inputData\n    });\n    return c2.json({ message: \"Workflow run started\" });\n  } catch (e2) {\n    return handleError(e2, \"Error starting workflow run\");\n  }\n}\nfunction watchWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const logger2 = mastra.getLogger();\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.query(\"runId\");\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to watch workflow\" });\n    }\n    c2.header(\"Transfer-Encoding\", \"chunked\");\n    return stream(\n      c2,\n      async (stream5) => {\n        try {\n          const result = await watchWorkflowHandler$1({\n            mastra,\n            workflowId,\n            runId\n          });\n          const reader = result.getReader();\n          stream5.onAbort(() => {\n            void reader.cancel(\"request aborted\");\n          });\n          let chunkResult;\n          while ((chunkResult = await reader.read()) && !chunkResult.done) {\n            await stream5.write(JSON.stringify(chunkResult.value) + \"\u001e\");\n          }\n        } catch (err) {\n          mastra.getLogger().error(\"Error in watch stream: \" + (err?.message ?? \"Unknown error\"));\n        }\n      },\n      async (err) => {\n        logger2.error(\"Error in watch stream: \" + err?.message);\n      }\n    );\n  } catch (error) {\n    return handleError(error, \"Error watching workflow\");\n  }\n}\nasync function streamWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const logger2 = mastra.getLogger();\n    const workflowId = c2.req.param(\"workflowId\");\n    const { inputData } = await c2.req.json();\n    const runId = c2.req.query(\"runId\");\n    c2.header(\"Transfer-Encoding\", \"chunked\");\n    return stream(\n      c2,\n      async (stream5) => {\n        try {\n          const result = await streamWorkflowHandler$1({\n            mastra,\n            workflowId,\n            runId,\n            inputData,\n            runtimeContext\n          });\n          const reader = result.stream.getReader();\n          stream5.onAbort(() => {\n            void reader.cancel(\"request aborted\");\n          });\n          let chunkResult;\n          while ((chunkResult = await reader.read()) && !chunkResult.done) {\n            await stream5.write(JSON.stringify(chunkResult.value) + \"\u001e\");\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      },\n      async (err) => {\n        logger2.error(\"Error in workflow stream: \" + err?.message);\n      }\n    );\n  } catch (error) {\n    return handleError(error, \"Error streaming workflow\");\n  }\n}\nasync function resumeAsyncWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.query(\"runId\");\n    const { step, resumeData } = await c2.req.json();\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    const result = await resumeAsyncWorkflowHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      body: { step, resumeData }\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow step\");\n  }\n}\nasync function resumeWorkflowHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const runtimeContext = c2.get(\"runtimeContext\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.query(\"runId\");\n    const { step, resumeData } = await c2.req.json();\n    if (!runId) {\n      throw new HTTPException(400, { message: \"runId required to resume workflow\" });\n    }\n    await resumeWorkflowHandler$1({\n      mastra,\n      runtimeContext,\n      workflowId,\n      runId,\n      body: { step, resumeData }\n    });\n    return c2.json({ message: \"Workflow run resumed\" });\n  } catch (error) {\n    return handleError(error, \"Error resuming workflow\");\n  }\n}\nasync function getWorkflowRunsHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const { fromDate, toDate, limit, offset, resourceId } = c2.req.query();\n    const workflowRuns = await getWorkflowRunsHandler$1({\n      mastra,\n      workflowId,\n      fromDate: fromDate ? new Date(fromDate) : void 0,\n      toDate: toDate ? new Date(toDate) : void 0,\n      limit: limit ? Number(limit) : void 0,\n      offset: offset ? Number(offset) : void 0,\n      resourceId\n    });\n    return c2.json(workflowRuns);\n  } catch (error) {\n    return handleError(error, \"Error getting workflow runs\");\n  }\n}\nasync function getWorkflowRunByIdHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.param(\"runId\");\n    const workflowRun = await getWorkflowRunByIdHandler$1({\n      mastra,\n      workflowId,\n      runId\n    });\n    return c2.json(workflowRun);\n  } catch (error) {\n    return handleError(error, \"Error getting workflow run\");\n  }\n}\nasync function getWorkflowRunExecutionResultHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.param(\"runId\");\n    const workflowRunExecutionResult = await getWorkflowRunExecutionResultHandler$1({\n      mastra,\n      workflowId,\n      runId\n    });\n    return c2.json(workflowRunExecutionResult);\n  } catch (error) {\n    return handleError(error, \"Error getting workflow run execution result\");\n  }\n}\nasync function cancelWorkflowRunHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.param(\"runId\");\n    const result = await cancelWorkflowRunHandler$1({\n      mastra,\n      workflowId,\n      runId\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error canceling workflow run\");\n  }\n}\nasync function sendWorkflowRunEventHandler(c2) {\n  try {\n    const mastra = c2.get(\"mastra\");\n    const workflowId = c2.req.param(\"workflowId\");\n    const runId = c2.req.param(\"runId\");\n    const { event, data } = await c2.req.json();\n    const result = await sendWorkflowRunEventHandler$1({\n      mastra,\n      workflowId,\n      runId,\n      event,\n      data\n    });\n    return c2.json(result);\n  } catch (error) {\n    return handleError(error, \"Error sending workflow run event\");\n  }\n}\n\n// src/server/welcome.ts\nvar html2 = `\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Welcome to Mastra</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/inter-ui/3.19.3/inter.min.css\" />\n    <style>\n      body {\n        margin: 0;\n        padding: 0;\n        background-color: #0d0d0d;\n        color: #ffffff;\n        font-family:\n          'Inter',\n          -apple-system,\n          BlinkMacSystemFont,\n          system-ui,\n          sans-serif;\n        min-height: 100vh;\n        display: flex;\n        flex-direction: column;\n      }\n\n      main {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        padding: 2rem;\n        text-align: center;\n      }\n\n      h1 {\n        font-size: 4rem;\n        font-weight: 600;\n        margin: 0 0 1rem 0;\n        background: linear-gradient(to right, #fff, #ccc);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        line-height: 1.2;\n      }\n\n      .subtitle {\n        color: #9ca3af;\n        font-size: 1.25rem;\n        max-width: 600px;\n        margin: 0 auto 3rem auto;\n        line-height: 1.6;\n      }\n\n      .docs-link {\n        background-color: #1a1a1a;\n        padding: 1rem 2rem;\n        border-radius: 0.5rem;\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        font-family: monospace;\n        font-size: 1rem;\n        color: #ffffff;\n        text-decoration: none;\n        transition: background-color 0.2s;\n      }\n\n      .docs-link:hover {\n        background-color: #252525;\n      }\n\n      .arrow-icon {\n        transition: transform 0.2s;\n      }\n\n      .docs-link:hover .arrow-icon {\n        transform: translateX(4px);\n      }\n    </style>\n  </head>\n  <body>\n    <main>\n      <h1>Welcome to Mastra</h1>\n      <p class=\"subtitle\">\n        From the team that brought you Gatsby: prototype and productionize AI features with a modern JS/TS stack.\n      </p>\n\n      <a href=\"https://mastra.ai/docs\" class=\"docs-link\">\n        Browse the docs\n        <svg\n          class=\"arrow-icon\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n        >\n          <path d=\"M5 12h14M12 5l7 7-7 7\" />\n        </svg>\n      </a>\n    </main>\n  </body>\n</html>\n`;\n\n// src/server/index.ts\nasync function createHonoServer(mastra, options = {}) {\n  const app = new Hono();\n  const server = mastra.getServer();\n  let tools = {};\n  try {\n    const toolImports = (await import('#tools')).tools;\n    tools = toolImports.reduce((acc, toolModule) => {\n      Object.entries(toolModule).forEach(([key, tool]) => {\n        if (tool instanceof Tool) {\n          acc[key] = tool;\n        }\n      });\n      return acc;\n    }, {});\n  } catch (err) {\n    console.error(\n      `Failed to import tools\nreason: ${err.message}\n${err.stack.split(\"\\n\").slice(1).join(\"\\n\")}\n    `,\n      err\n    );\n  }\n  app.use(\"*\", async function setTelemetryInfo(c2, next) {\n    const requestId = c2.req.header(\"x-request-id\") ?? randomUUID();\n    const span = Telemetry.getActiveSpan();\n    if (span) {\n      span.setAttribute(\"http.request_id\", requestId);\n      span.updateName(`${c2.req.method} ${c2.req.path}`);\n      const newCtx = Telemetry.setBaggage({\n        \"http.request_id\": { value: requestId }\n      });\n      await new Promise((resolve) => {\n        Telemetry.withContext(newCtx, async () => {\n          await next();\n          resolve(true);\n        });\n      });\n    } else {\n      await next();\n    }\n  });\n  app.onError((err, c2) => errorHandler(err, c2, options.isDev));\n  app.use(\"*\", async function setContext(c2, next) {\n    let runtimeContext = new RuntimeContext();\n    if (c2.req.method === \"POST\" || c2.req.method === \"PUT\") {\n      const contentType = c2.req.header(\"content-type\");\n      if (contentType?.includes(\"application/json\")) {\n        try {\n          const clonedReq = c2.req.raw.clone();\n          const body = await clonedReq.json();\n          if (body.runtimeContext) {\n            runtimeContext = new RuntimeContext(Object.entries(body.runtimeContext));\n          }\n        } catch {\n        }\n      }\n    }\n    c2.set(\"runtimeContext\", runtimeContext);\n    c2.set(\"mastra\", mastra);\n    c2.set(\"tools\", tools);\n    c2.set(\"playground\", options.playground === true);\n    c2.set(\"isDev\", options.isDev === true);\n    return next();\n  });\n  const serverMiddleware = mastra.getServerMiddleware?.();\n  if (serverMiddleware && serverMiddleware.length > 0) {\n    for (const m2 of serverMiddleware) {\n      app.use(m2.path, m2.handler);\n    }\n  }\n  if (server?.cors === false) {\n    app.use(\"*\", timeout(server?.timeout ?? 3 * 60 * 1e3));\n  } else {\n    const corsConfig = {\n      origin: \"*\",\n      allowMethods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\n      credentials: false,\n      maxAge: 3600,\n      ...server?.cors,\n      allowHeaders: [\"Content-Type\", \"Authorization\", \"x-mastra-client-type\", ...server?.cors?.allowHeaders ?? []],\n      exposeHeaders: [\"Content-Length\", \"X-Requested-With\", ...server?.cors?.exposeHeaders ?? []]\n    };\n    app.use(\"*\", timeout(server?.timeout ?? 3 * 60 * 1e3), cors(corsConfig));\n  }\n  app.use(\"*\", authenticationMiddleware);\n  app.use(\"*\", authorizationMiddleware);\n  const bodyLimitOptions = {\n    maxSize: server?.bodySizeLimit ?? 4.5 * 1024 * 1024,\n    // 4.5 MB,\n    onError: (c2) => c2.json({ error: \"Request body too large\" }, 413)\n  };\n  const routes = server?.apiRoutes;\n  if (server?.middleware) {\n    const normalizedMiddlewares = Array.isArray(server.middleware) ? server.middleware : [server.middleware];\n    const middlewares = normalizedMiddlewares.map((middleware2) => {\n      if (typeof middleware2 === \"function\") {\n        return {\n          path: \"*\",\n          handler: middleware2\n        };\n      }\n      return middleware2;\n    });\n    for (const middleware2 of middlewares) {\n      app.use(middleware2.path, middleware2.handler);\n    }\n  }\n  if (routes) {\n    for (const route of routes) {\n      const middlewares = [];\n      if (route.middleware) {\n        middlewares.push(...Array.isArray(route.middleware) ? route.middleware : [route.middleware]);\n      }\n      if (route.openapi) {\n        middlewares.push(w(route.openapi));\n      }\n      const handler = \"handler\" in route ? route.handler : await route.createHandler({ mastra });\n      if (route.method === \"GET\") {\n        app.get(route.path, ...middlewares, handler);\n      } else if (route.method === \"POST\") {\n        app.post(route.path, ...middlewares, handler);\n      } else if (route.method === \"PUT\") {\n        app.put(route.path, ...middlewares, handler);\n      } else if (route.method === \"DELETE\") {\n        app.delete(route.path, ...middlewares, handler);\n      } else if (route.method === \"ALL\") {\n        app.all(route.path, ...middlewares, handler);\n      }\n    }\n  }\n  if (server?.build?.apiReqLogs) {\n    app.use(logger());\n  }\n  app.get(\n    \"/.well-known/:agentId/agent.json\",\n    w({\n      description: \"Get agent configuration\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Agent configuration\"\n        }\n      }\n    }),\n    getAgentCardByIdHandler\n  );\n  app.post(\n    \"/a2a/:agentId\",\n    w({\n      description: \"Execute agent via A2A protocol\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                method: {\n                  type: \"string\",\n                  enum: [\"tasks/send\", \"tasks/sendSubscribe\", \"tasks/get\", \"tasks/cancel\"],\n                  description: \"The A2A protocol method to execute\"\n                },\n                params: {\n                  type: \"object\",\n                  oneOf: [\n                    {\n                      // TaskSendParams\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"Unique identifier for the task being initiated or continued\"\n                        },\n                        sessionId: {\n                          type: \"string\",\n                          description: \"Optional identifier for the session this task belongs to\"\n                        },\n                        message: {\n                          type: \"object\",\n                          description: \"The message content to send to the agent for processing\"\n                        },\n                        pushNotification: {\n                          type: \"object\",\n                          nullable: true,\n                          description: \"Optional pushNotification information for receiving notifications about this task\"\n                        },\n                        historyLength: {\n                          type: \"integer\",\n                          nullable: true,\n                          description: \"Optional parameter to specify how much message history to include in the response\"\n                        },\n                        metadata: {\n                          type: \"object\",\n                          nullable: true,\n                          description: \"Optional metadata associated with sending this message\"\n                        }\n                      },\n                      required: [\"id\", \"message\"]\n                    },\n                    {\n                      // TaskQueryParams\n                      type: \"object\",\n                      properties: {\n                        id: { type: \"string\", description: \"The unique identifier of the task\" },\n                        historyLength: {\n                          type: \"integer\",\n                          nullable: true,\n                          description: \"Optional history length to retrieve for the task\"\n                        },\n                        metadata: {\n                          type: \"object\",\n                          nullable: true,\n                          description: \"Optional metadata to include with the operation\"\n                        }\n                      },\n                      required: [\"id\"]\n                    },\n                    {\n                      // TaskIdParams\n                      type: \"object\",\n                      properties: {\n                        id: { type: \"string\", description: \"The unique identifier of the task\" },\n                        metadata: {\n                          type: \"object\",\n                          nullable: true,\n                          description: \"Optional metadata to include with the operation\"\n                        }\n                      },\n                      required: [\"id\"]\n                    }\n                  ]\n                }\n              },\n              required: [\"method\", \"params\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"A2A response\"\n        },\n        400: {\n          description: \"Missing or invalid request parameters\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    getAgentExecutionHandler\n  );\n  app.get(\n    \"/api\",\n    w({\n      description: \"Get API status\",\n      tags: [\"system\"],\n      responses: {\n        200: {\n          description: \"Success\"\n        }\n      }\n    }),\n    rootHandler\n  );\n  app.get(\n    \"/api/agents\",\n    w({\n      description: \"Get all available agents\",\n      tags: [\"agents\"],\n      responses: {\n        200: {\n          description: \"List of all agents\"\n        }\n      }\n    }),\n    getAgentsHandler\n  );\n  app.get(\n    \"/api/networks/v-next\",\n    w({\n      description: \"Get all available v-next networks\",\n      tags: [\"vNextNetworks\"],\n      responses: {\n        200: {\n          description: \"List of all v-next networks\"\n        }\n      }\n    }),\n    getVNextNetworksHandler\n  );\n  app.get(\n    \"/api/networks/v-next/:networkId\",\n    w({\n      description: \"Get v-next network by ID\",\n      tags: [\"vNextNetworks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"v-next Network details\"\n        },\n        404: {\n          description: \"v-next Network not found\"\n        }\n      }\n    }),\n    getVNextNetworkByIdHandler\n  );\n  app.post(\n    \"/api/networks/v-next/:networkId/generate\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Generate a response from a v-next network\",\n      tags: [\"vNextNetworks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                message: {\n                  type: \"string\",\n                  description: \"Message for the v-next network\"\n                },\n                threadId: {\n                  type: \"string\",\n                  description: \"Thread Id of the conversation\"\n                },\n                resourceId: {\n                  type: \"string\",\n                  description: \"Resource Id of the conversation\"\n                }\n              },\n              required: [\"message\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Generated response\"\n        },\n        404: {\n          description: \"v-next Network not found\"\n        }\n      }\n    }),\n    generateVNextNetworkHandler\n  );\n  app.post(\n    \"/api/networks/v-next/:networkId/loop\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Loop a v-next network\",\n      tags: [\"vNextNetworks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                message: {\n                  type: \"string\",\n                  description: \"Message for the v-next network\"\n                }\n              },\n              required: [\"message\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Looped response\"\n        },\n        404: {\n          description: \"v-next Network not found\"\n        }\n      }\n    }),\n    loopVNextNetworkHandler\n  );\n  app.post(\n    \"/api/networks/v-next/:networkId/loop-stream\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Stream a v-next network loop\",\n      tags: [\"vNextNetworks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                message: {\n                  type: \"string\",\n                  description: \"Message for the v-next network\"\n                },\n                threadId: {\n                  type: \"string\",\n                  description: \"Thread Id of the conversation\"\n                },\n                resourceId: {\n                  type: \"string\",\n                  description: \"Resource Id of the conversation\"\n                },\n                maxIterations: {\n                  type: \"number\",\n                  description: \"Maximum number of iterations to run\"\n                }\n              },\n              required: [\"message\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Streamed response\"\n        },\n        404: {\n          description: \"v-next Network not found\"\n        }\n      }\n    }),\n    loopStreamVNextNetworkHandler\n  );\n  app.post(\n    \"/api/networks/v-next/:networkId/stream\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Stream a response from a v-next network\",\n      tags: [\"vNextNetworks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                message: {\n                  type: \"string\",\n                  description: \"Message for the v-next network\"\n                },\n                threadId: {\n                  type: \"string\",\n                  description: \"Thread Id of the conversation\"\n                },\n                resourceId: {\n                  type: \"string\",\n                  description: \"Resource Id of the conversation\"\n                }\n              },\n              required: [\"message\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Streamed response\"\n        },\n        404: {\n          description: \"v-next Network not found\"\n        }\n      }\n    }),\n    streamGenerateVNextNetworkHandler\n  );\n  app.get(\n    \"/api/networks\",\n    w({\n      description: \"Get all available networks\",\n      tags: [\"networks\"],\n      responses: {\n        200: {\n          description: \"List of all networks\"\n        }\n      }\n    }),\n    getNetworksHandler\n  );\n  app.get(\n    \"/api/networks/:networkId\",\n    w({\n      description: \"Get network by ID\",\n      tags: [\"networks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Network details\"\n        },\n        404: {\n          description: \"Network not found\"\n        }\n      }\n    }),\n    getNetworkByIdHandler\n  );\n  app.post(\n    \"/api/networks/:networkId/generate\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Generate a response from a network\",\n      tags: [\"networks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                input: {\n                  oneOf: [\n                    { type: \"string\" },\n                    {\n                      type: \"array\",\n                      items: { type: \"object\" }\n                    }\n                  ],\n                  description: \"Input for the network, can be a string or an array of CoreMessage objects\"\n                }\n              },\n              required: [\"input\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Generated response\"\n        },\n        404: {\n          description: \"Network not found\"\n        }\n      }\n    }),\n    generateHandler2\n  );\n  app.post(\n    \"/api/networks/:networkId/stream\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Generate a response from a network\",\n      tags: [\"networks\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                input: {\n                  oneOf: [\n                    { type: \"string\" },\n                    {\n                      type: \"array\",\n                      items: { type: \"object\" }\n                    }\n                  ],\n                  description: \"Input for the network, can be a string or an array of CoreMessage objects\"\n                }\n              },\n              required: [\"input\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Generated response\"\n        },\n        404: {\n          description: \"Network not found\"\n        }\n      }\n    }),\n    streamGenerateHandler2\n  );\n  app.get(\n    \"/api/agents/:agentId\",\n    w({\n      description: \"Get agent by ID\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Agent details\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    getAgentByIdHandler\n  );\n  app.get(\n    \"/api/agents/:agentId/evals/ci\",\n    w({\n      description: \"Get CI evals by agent ID\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of evals\"\n        }\n      }\n    }),\n    getEvalsByAgentIdHandler\n  );\n  app.get(\n    \"/api/agents/:agentId/evals/live\",\n    w({\n      description: \"Get live evals by agent ID\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of evals\"\n        }\n      }\n    }),\n    getLiveEvalsByAgentIdHandler\n  );\n  app.post(\n    \"/api/agents/:agentId/generate\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Generate a response from an agent\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                messages: {\n                  type: \"array\",\n                  items: { type: \"object\" }\n                },\n                threadId: { type: \"string\" },\n                resourceId: { type: \"string\", description: \"The resource ID for the conversation\" },\n                resourceid: {\n                  type: \"string\",\n                  description: \"The resource ID for the conversation (deprecated, use resourceId instead)\",\n                  deprecated: true\n                },\n                runId: { type: \"string\" },\n                output: { type: \"object\" }\n              },\n              required: [\"messages\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Generated response\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    generateHandler\n  );\n  app.post(\n    \"/api/agents/:agentId/stream\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Stream a response from an agent\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                messages: {\n                  type: \"array\",\n                  items: { type: \"object\" }\n                },\n                threadId: { type: \"string\" },\n                resourceId: { type: \"string\", description: \"The resource ID for the conversation\" },\n                resourceid: {\n                  type: \"string\",\n                  description: \"The resource ID for the conversation (deprecated, use resourceId instead)\",\n                  deprecated: true\n                },\n                runId: { type: \"string\" },\n                output: { type: \"object\" }\n              },\n              required: [\"messages\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Streamed response\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    streamGenerateHandler\n  );\n  if (options.isDev) {\n    app.post(\n      \"/api/agents/:agentId/instructions\",\n      bodyLimit(bodyLimitOptions),\n      w({\n        description: \"Update an agent's instructions\",\n        tags: [\"agents\"],\n        parameters: [\n          {\n            name: \"agentId\",\n            in: \"path\",\n            required: true,\n            schema: { type: \"string\" }\n          }\n        ],\n        requestBody: {\n          required: true,\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  instructions: {\n                    type: \"string\",\n                    description: \"New instructions for the agent\"\n                  }\n                },\n                required: [\"instructions\"]\n              }\n            }\n          }\n        },\n        responses: {\n          200: {\n            description: \"Instructions updated successfully\"\n          },\n          403: {\n            description: \"Not allowed in non-playground environment\"\n          },\n          404: {\n            description: \"Agent not found\"\n          }\n        }\n      }),\n      setAgentInstructionsHandler\n    );\n    app.post(\n      \"/api/agents/:agentId/instructions/enhance\",\n      bodyLimit(bodyLimitOptions),\n      w({\n        description: \"Generate an improved system prompt from instructions\",\n        tags: [\"agents\"],\n        parameters: [\n          {\n            name: \"agentId\",\n            in: \"path\",\n            required: true,\n            schema: { type: \"string\" },\n            description: \"ID of the agent whose model will be used for prompt generation\"\n          }\n        ],\n        requestBody: {\n          required: true,\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  instructions: {\n                    type: \"string\",\n                    description: \"Instructions to generate a system prompt from\"\n                  },\n                  comment: {\n                    type: \"string\",\n                    description: \"Optional comment for the enhanced prompt\"\n                  }\n                },\n                required: [\"instructions\"]\n              }\n            }\n          }\n        },\n        responses: {\n          200: {\n            description: \"Generated system prompt and analysis\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    explanation: {\n                      type: \"string\",\n                      description: \"Detailed analysis of the instructions\"\n                    },\n                    new_prompt: {\n                      type: \"string\",\n                      description: \"The enhanced system prompt\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          400: {\n            description: \"Missing or invalid request parameters\"\n          },\n          404: {\n            description: \"Agent not found\"\n          },\n          500: {\n            description: \"Internal server error or model response parsing error\"\n          }\n        }\n      }),\n      generateSystemPromptHandler\n    );\n  }\n  app.get(\n    \"/api/agents/:agentId/speakers\",\n    async (c2, next) => {\n      c2.header(\"Deprecation\", \"true\");\n      c2.header(\"Warning\", '299 - \"This endpoint is deprecated, use /api/agents/:agentId/voice/speakers instead\"');\n      c2.header(\"Link\", '</api/agents/:agentId/voice/speakers>; rel=\"successor-version\"');\n      return next();\n    },\n    w({\n      description: \"[DEPRECATED] Use /api/agents/:agentId/voice/speakers instead. Get available speakers for an agent\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of available speakers\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"array\",\n                items: {\n                  type: \"object\",\n                  description: \"Speaker information depending on the voice provider\",\n                  properties: {\n                    voiceId: { type: \"string\" }\n                  },\n                  additionalProperties: true\n                }\n              }\n            }\n          }\n        },\n        400: {\n          description: \"Agent does not have voice capabilities\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    getSpeakersHandler\n  );\n  app.get(\n    \"/api/agents/:agentId/voice/speakers\",\n    w({\n      description: \"Get available speakers for an agent\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of available speakers\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"array\",\n                items: {\n                  type: \"object\",\n                  description: \"Speaker information depending on the voice provider\",\n                  properties: {\n                    voiceId: { type: \"string\" }\n                  },\n                  additionalProperties: true\n                }\n              }\n            }\n          }\n        },\n        400: {\n          description: \"Agent does not have voice capabilities\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    getSpeakersHandler\n  );\n  app.post(\n    \"/api/agents/:agentId/speak\",\n    bodyLimit(bodyLimitOptions),\n    async (c2, next) => {\n      c2.header(\"Deprecation\", \"true\");\n      c2.header(\"Warning\", '299 - \"This endpoint is deprecated, use /api/agents/:agentId/voice/speak instead\"');\n      c2.header(\"Link\", '</api/agents/:agentId/voice/speak>; rel=\"successor-version\"');\n      return next();\n    },\n    w({\n      description: \"[DEPRECATED] Use /api/agents/:agentId/voice/speak instead. Convert text to speech using the agent's voice provider\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                text: {\n                  type: \"string\",\n                  description: \"Text to convert to speech\"\n                },\n                options: {\n                  type: \"object\",\n                  description: \"Provider-specific options for speech generation\",\n                  properties: {\n                    speaker: {\n                      type: \"string\",\n                      description: \"Speaker ID to use for speech generation\"\n                    }\n                  },\n                  additionalProperties: true\n                }\n              },\n              required: [\"text\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Audio stream\",\n          content: {\n            \"audio/mpeg\": {\n              schema: {\n                format: \"binary\",\n                description: \"Audio stream containing the generated speech\"\n              }\n            },\n            \"audio/*\": {\n              schema: {\n                format: \"binary\",\n                description: \"Audio stream depending on the provider\"\n              }\n            }\n          }\n        },\n        400: {\n          description: \"Agent does not have voice capabilities or invalid request\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    speakHandler\n  );\n  app.post(\n    \"/api/agents/:agentId/voice/speak\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Convert text to speech using the agent's voice provider\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                input: {\n                  type: \"string\",\n                  description: \"Text to convert to speech\"\n                },\n                options: {\n                  type: \"object\",\n                  description: \"Provider-specific options for speech generation\",\n                  properties: {\n                    speaker: {\n                      type: \"string\",\n                      description: \"Speaker ID to use for speech generation\"\n                    },\n                    options: {\n                      type: \"object\",\n                      description: \"Provider-specific options for speech generation\",\n                      additionalProperties: true\n                    }\n                  },\n                  additionalProperties: true\n                }\n              },\n              required: [\"text\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Audio stream\",\n          content: {\n            \"audio/mpeg\": {\n              schema: {\n                format: \"binary\",\n                description: \"Audio stream containing the generated speech\"\n              }\n            },\n            \"audio/*\": {\n              schema: {\n                format: \"binary\",\n                description: \"Audio stream depending on the provider\"\n              }\n            }\n          }\n        },\n        400: {\n          description: \"Agent does not have voice capabilities or invalid request\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    speakHandler\n  );\n  app.get(\n    \"/api/agents/:agentId/voice/listener\",\n    w({\n      description: \"Get available listener for an agent\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Checks if listener is available for the agent\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                description: \"Listener information depending on the voice provider\",\n                properties: {\n                  enabled: { type: \"boolean\" }\n                },\n                additionalProperties: true\n              }\n            }\n          }\n        },\n        400: {\n          description: \"Agent does not have voice capabilities\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    getListenerHandler\n  );\n  app.post(\n    \"/api/agents/:agentId/listen\",\n    bodyLimit({\n      ...bodyLimitOptions,\n      maxSize: 10 * 1024 * 1024\n      // 10 MB for audio files\n    }),\n    async (c2, next) => {\n      c2.header(\"Deprecation\", \"true\");\n      c2.header(\"Warning\", '299 - \"This endpoint is deprecated, use /api/agents/:agentId/voice/listen instead\"');\n      c2.header(\"Link\", '</api/agents/:agentId/voice/listen>; rel=\"successor-version\"');\n      return next();\n    },\n    w({\n      description: \"[DEPRECATED] Use /api/agents/:agentId/voice/listen instead. Convert speech to text using the agent's voice provider. Additional provider-specific options can be passed as query parameters.\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"audio/mpeg\": {\n            schema: {\n              format: \"binary\",\n              description: \"Audio data stream to transcribe (supports various formats depending on provider like mp3, wav, webm, flac)\"\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Transcription result\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  text: {\n                    type: \"string\",\n                    description: \"Transcribed text\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        400: {\n          description: \"Agent does not have voice capabilities or invalid request\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    listenHandler\n  );\n  app.post(\n    \"/api/agents/:agentId/voice/listen\",\n    bodyLimit({\n      ...bodyLimitOptions,\n      maxSize: 10 * 1024 * 1024\n      // 10 MB for audio files\n    }),\n    w({\n      description: \"Convert speech to text using the agent's voice provider. Additional provider-specific options can be passed as query parameters.\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"multipart/form-data\": {\n            schema: {\n              type: \"object\",\n              required: [\"audio\"],\n              properties: {\n                audio: {\n                  type: \"string\",\n                  format: \"binary\",\n                  description: \"Audio data stream to transcribe (supports various formats depending on provider like mp3, wav, webm, flac)\"\n                },\n                options: {\n                  type: \"object\",\n                  description: \"Provider-specific options for speech-to-text\",\n                  additionalProperties: true\n                }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Transcription result\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  text: {\n                    type: \"string\",\n                    description: \"Transcribed text\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        400: {\n          description: \"Agent does not have voice capabilities or invalid request\"\n        },\n        404: {\n          description: \"Agent not found\"\n        }\n      }\n    }),\n    listenHandler\n  );\n  app.post(\n    \"/api/agents/:agentId/tools/:toolId/execute\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Execute a tool through an agent\",\n      tags: [\"agents\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"toolId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                data: { type: \"object\" },\n                runtimeContext: { type: \"object\" }\n              },\n              required: [\"data\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Tool execution result\"\n        },\n        404: {\n          description: \"Tool or agent not found\"\n        }\n      }\n    }),\n    executeAgentToolHandler\n  );\n  app.post(\n    \"/api/mcp/:serverId/mcp\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Send a message to an MCP server using Streamable HTTP\",\n      tags: [\"mcp\"],\n      parameters: [\n        {\n          name: \"serverId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        content: { \"application/json\": { schema: { type: \"object\" } } }\n      },\n      responses: {\n        200: {\n          description: \"Streamable HTTP connection processed\"\n        },\n        404: {\n          description: \"MCP server not found\"\n        }\n      }\n    }),\n    getMcpServerMessageHandler\n  );\n  app.get(\n    \"/api/mcp/:serverId/mcp\",\n    w({\n      description: \"Send a message to an MCP server using Streamable HTTP\",\n      tags: [\"mcp\"],\n      parameters: [\n        {\n          name: \"serverId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Streamable HTTP connection processed\"\n        },\n        404: {\n          description: \"MCP server not found\"\n        }\n      }\n    }),\n    getMcpServerMessageHandler\n  );\n  const mcpSseBasePath = \"/api/mcp/:serverId/sse\";\n  const mcpSseMessagePath = \"/api/mcp/:serverId/messages\";\n  app.get(\n    mcpSseBasePath,\n    w({\n      description: \"Establish an MCP Server-Sent Events (SSE) connection with a server instance.\",\n      tags: [\"mcp\"],\n      parameters: [\n        {\n          name: \"serverId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" },\n          description: \"The ID of the MCP server instance.\"\n        }\n      ],\n      responses: {\n        200: {\n          description: \"SSE connection established. The client will receive events over this connection. (Content-Type: text/event-stream)\"\n        },\n        404: { description: \"MCP server instance not found.\" },\n        500: { description: \"Internal server error establishing SSE connection.\" }\n      }\n    }),\n    getMcpServerSseHandler\n  );\n  app.post(\n    mcpSseMessagePath,\n    bodyLimit(bodyLimitOptions),\n    // Apply body limit for messages\n    w({\n      description: \"Send a message to an MCP server over an established SSE connection.\",\n      tags: [\"mcp\"],\n      parameters: [\n        {\n          name: \"serverId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" },\n          description: \"The ID of the MCP server instance.\"\n        }\n      ],\n      requestBody: {\n        description: \"JSON-RPC message to send to the MCP server.\",\n        required: true,\n        content: { \"application/json\": { schema: { type: \"object\" } } }\n        // MCP messages are typically JSON\n      },\n      responses: {\n        200: {\n          description: \"Message received and is being processed by the MCP server. The actual result or error will be sent as an SSE event over the established connection.\"\n        },\n        400: { description: \"Bad request (e.g., invalid JSON payload or missing body).\" },\n        404: { description: \"MCP server instance not found or SSE connection path incorrect.\" },\n        503: { description: \"SSE connection not established with this server, or server unable to process message.\" }\n      }\n    }),\n    getMcpServerSseHandler\n  );\n  app.get(\n    \"/api/mcp/v0/servers\",\n    w({\n      description: \"List all available MCP server instances with basic information.\",\n      tags: [\"mcp\"],\n      parameters: [\n        {\n          name: \"limit\",\n          in: \"query\",\n          description: \"Number of results per page.\",\n          required: false,\n          schema: { type: \"integer\", default: 50, minimum: 1, maximum: 5e3 }\n        },\n        {\n          name: \"offset\",\n          in: \"query\",\n          description: \"Number of results to skip for pagination.\",\n          required: false,\n          schema: { type: \"integer\", default: 0, minimum: 0 }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"A list of MCP server instances.\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  servers: {\n                    type: \"array\",\n                    items: {\n                      type: \"object\",\n                      properties: {\n                        id: { type: \"string\" },\n                        name: { type: \"string\" },\n                        description: { type: \"string\" },\n                        repository: {\n                          type: \"object\",\n                          properties: {\n                            url: { type: \"string\", description: \"The URL of the repository (e.g., a GitHub URL)\" },\n                            source: {\n                              type: \"string\",\n                              description: \"The source control platform (e.g., 'github', 'gitlab')\",\n                              enum: [\"github\", \"gitlab\"]\n                            },\n                            id: { type: \"string\", description: \"A unique identifier for the repository at the source\" }\n                          }\n                        },\n                        version_detail: {\n                          type: \"object\",\n                          properties: {\n                            version: { type: \"string\", description: 'The semantic version string (e.g., \"1.0.2\")' },\n                            release_date: {\n                              type: \"string\",\n                              description: \"The ISO 8601 date-time string when this version was released or registered\"\n                            },\n                            is_latest: {\n                              type: \"boolean\",\n                              description: \"Indicates if this version is the latest available\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  next: { type: \"string\", format: \"uri\", nullable: true },\n                  total_count: { type: \"integer\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    }),\n    listMcpRegistryServersHandler\n  );\n  app.get(\n    \"/api/mcp/v0/servers/:id\",\n    w({\n      description: \"Get detailed information about a specific MCP server instance.\",\n      tags: [\"mcp\"],\n      parameters: [\n        {\n          name: \"id\",\n          in: \"path\",\n          required: true,\n          description: \"Unique ID of the MCP server instance.\",\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"version\",\n          in: \"query\",\n          required: false,\n          description: \"Desired MCP server version (currently informational, server returns its actual version).\",\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Detailed information about the MCP server instance.\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  id: { type: \"string\" },\n                  name: { type: \"string\" },\n                  description: { type: \"string\" },\n                  repository: {\n                    type: \"object\",\n                    properties: {\n                      url: { type: \"string\" },\n                      source: { type: \"string\" },\n                      id: { type: \"string\" }\n                    }\n                  },\n                  version_detail: {\n                    type: \"object\",\n                    properties: {\n                      version: { type: \"string\" },\n                      release_date: { type: \"string\" },\n                      is_latest: { type: \"boolean\" }\n                    }\n                  },\n                  package_canonical: { type: \"string\" },\n                  packages: {\n                    type: \"array\",\n                    items: {\n                      type: \"object\",\n                      properties: {\n                        registry_name: { type: \"string\" },\n                        name: { type: \"string\" },\n                        version: { type: \"string\" },\n                        command: {\n                          type: \"object\",\n                          properties: {\n                            name: { type: \"string\" },\n                            subcommands: {\n                              type: \"array\",\n                              items: {\n                                type: \"object\",\n                                properties: {\n                                  name: { type: \"string\" },\n                                  description: { type: \"string\" },\n                                  is_required: { type: \"boolean\" },\n                                  subcommands: {\n                                    type: \"array\",\n                                    items: { type: \"object\" }\n                                  },\n                                  positional_arguments: {\n                                    type: \"array\",\n                                    items: { type: \"object\" }\n                                  },\n                                  named_arguments: {\n                                    type: \"array\",\n                                    items: { type: \"object\" }\n                                  }\n                                }\n                              }\n                            },\n                            positional_arguments: {\n                              type: \"array\",\n                              items: { type: \"object\" }\n                            },\n                            named_arguments: {\n                              type: \"array\",\n                              items: { type: \"object\" }\n                            }\n                          }\n                        },\n                        environment_variables: {\n                          type: \"array\",\n                          items: {\n                            type: \"object\",\n                            properties: {\n                              name: { type: \"string\" },\n                              description: { type: \"string\" },\n                              required: { type: \"boolean\" },\n                              default_value: { type: \"string\" }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  remotes: {\n                    type: \"array\",\n                    items: {\n                      type: \"object\",\n                      properties: {\n                        transport_type: { type: \"string\" },\n                        url: { type: \"string\" }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        404: {\n          description: \"MCP server instance not found.\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  error: { type: \"string\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    }),\n    getMcpRegistryServerDetailHandler\n  );\n  app.get(\n    \"/api/mcp/:serverId/tools\",\n    w({\n      description: \"List all tools available on a specific MCP server instance.\",\n      tags: [\"mcp\"],\n      parameters: [\n        {\n          name: \"serverId\",\n          in: \"path\",\n          required: true,\n          description: \"Unique ID of the MCP server instance.\",\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: { description: \"A list of tools for the MCP server.\" },\n        // Define schema if you have one for McpServerToolListResponse\n        404: { description: \"MCP server instance not found.\" },\n        501: { description: \"Server does not support listing tools.\" }\n      }\n    }),\n    listMcpServerToolsHandler\n  );\n  app.get(\n    \"/api/mcp/:serverId/tools/:toolId\",\n    w({\n      description: \"Get details for a specific tool on an MCP server.\",\n      tags: [\"mcp\"],\n      parameters: [\n        { name: \"serverId\", in: \"path\", required: true, schema: { type: \"string\" } },\n        { name: \"toolId\", in: \"path\", required: true, schema: { type: \"string\" } }\n      ],\n      responses: {\n        200: { description: \"Details of the specified tool.\" },\n        // Define schema for McpToolInfo\n        404: { description: \"MCP server or tool not found.\" },\n        501: { description: \"Server does not support getting tool details.\" }\n      }\n    }),\n    getMcpServerToolDetailHandler\n  );\n  app.post(\n    \"/api/mcp/:serverId/tools/:toolId/execute\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Execute a specific tool on an MCP server.\",\n      tags: [\"mcp\"],\n      parameters: [\n        { name: \"serverId\", in: \"path\", required: true, schema: { type: \"string\" } },\n        { name: \"toolId\", in: \"path\", required: true, schema: { type: \"string\" } }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                data: { type: \"object\" },\n                runtimeContext: { type: \"object\" }\n              }\n            }\n          }\n        }\n        // Simplified schema\n      },\n      responses: {\n        200: { description: \"Result of the tool execution.\" },\n        400: { description: \"Invalid tool arguments.\" },\n        404: { description: \"MCP server or tool not found.\" },\n        501: { description: \"Server does not support tool execution.\" }\n      }\n    }),\n    executeMcpServerToolHandler\n  );\n  app.get(\n    \"/api/memory/network/status\",\n    w({\n      description: \"Get network memory status\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Memory status\"\n        }\n      }\n    }),\n    getMemoryStatusHandler\n  );\n  app.get(\n    \"/api/memory/network/threads\",\n    w({\n      description: \"Get all threads\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"resourceid\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of all threads\"\n        }\n      }\n    }),\n    getThreadsHandler\n  );\n  app.get(\n    \"/api/memory/network/threads/:threadId\",\n    w({\n      description: \"Get thread by ID\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Thread details\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    getThreadByIdHandler\n  );\n  app.get(\n    \"/api/memory/network/threads/:threadId/messages\",\n    w({\n      description: \"Get messages for a thread\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"limit\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"number\" },\n          description: \"Limit the number of messages to retrieve (default: 40)\"\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of messages\"\n        }\n      }\n    }),\n    getMessagesHandler\n  );\n  app.post(\n    \"/api/memory/network/threads\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Create a new thread\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                title: { type: \"string\" },\n                metadata: { type: \"object\" },\n                resourceId: { type: \"string\" },\n                threadId: { type: \"string\" }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Created thread\"\n        }\n      }\n    }),\n    createThreadHandler\n  );\n  app.patch(\n    \"/api/memory/network/threads/:threadId\",\n    w({\n      description: \"Update a thread\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: { type: \"object\" }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Updated thread\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    updateThreadHandler\n  );\n  app.delete(\n    \"/api/memory/network/threads/:threadId\",\n    w({\n      description: \"Delete a thread\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Thread deleted\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    deleteThreadHandler\n  );\n  app.post(\n    \"/api/memory/network/save-messages\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Save messages\",\n      tags: [\"networkMemory\"],\n      parameters: [\n        {\n          name: \"networkId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                messages: {\n                  type: \"array\",\n                  items: { type: \"object\" }\n                }\n              },\n              required: [\"messages\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Messages saved\"\n        }\n      }\n    }),\n    saveMessagesHandler\n  );\n  app.get(\n    \"/api/memory/status\",\n    w({\n      description: \"Get memory status\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Memory status\"\n        }\n      }\n    }),\n    getMemoryStatusHandler\n  );\n  app.get(\n    \"/api/memory/threads\",\n    w({\n      description: \"Get all threads\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"resourceid\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of all threads\"\n        }\n      }\n    }),\n    getThreadsHandler\n  );\n  app.get(\n    \"/api/memory/threads/:threadId\",\n    w({\n      description: \"Get thread by ID\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Thread details\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    getThreadByIdHandler\n  );\n  app.get(\n    \"/api/memory/threads/:threadId/messages\",\n    w({\n      description: \"Get messages for a thread\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"limit\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"number\" },\n          description: \"Limit the number of messages to retrieve (default: 40)\"\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of messages\"\n        }\n      }\n    }),\n    getMessagesHandler\n  );\n  app.get(\n    \"/api/memory/threads/:threadId/working-memory\",\n    w({\n      description: \"Get working memory for a thread\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"resourceId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Working memory details\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    getWorkingMemoryHandler\n  );\n  app.post(\n    \"/api/memory/threads/:threadId/working-memory\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Update working memory for a thread\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                workingMemory: { type: \"string\" },\n                resourceId: { type: \"string\" }\n              },\n              required: [\"workingMemory\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Working memory updated successfully\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    updateWorkingMemoryHandler\n  );\n  app.post(\n    \"/api/memory/threads\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Create a new thread\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                title: { type: \"string\" },\n                metadata: { type: \"object\" },\n                resourceId: { type: \"string\" },\n                threadId: { type: \"string\" }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Created thread\"\n        }\n      }\n    }),\n    createThreadHandler\n  );\n  app.patch(\n    \"/api/memory/threads/:threadId\",\n    w({\n      description: \"Update a thread\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: { type: \"object\" }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Updated thread\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    updateThreadHandler\n  );\n  app.delete(\n    \"/api/memory/threads/:threadId\",\n    w({\n      description: \"Delete a thread\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"threadId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Thread deleted\"\n        },\n        404: {\n          description: \"Thread not found\"\n        }\n      }\n    }),\n    deleteThreadHandler\n  );\n  app.post(\n    \"/api/memory/save-messages\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Save messages\",\n      tags: [\"memory\"],\n      parameters: [\n        {\n          name: \"agentId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                messages: {\n                  type: \"array\",\n                  items: { type: \"object\" }\n                }\n              },\n              required: [\"messages\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Messages saved\"\n        }\n      }\n    }),\n    saveMessagesHandler\n  );\n  app.get(\n    \"/api/telemetry\",\n    w({\n      description: \"Get all traces\",\n      tags: [\"telemetry\"],\n      responses: {\n        200: {\n          description: \"List of all traces (paged)\"\n        }\n      }\n    }),\n    getTelemetryHandler\n  );\n  app.post(\n    \"/api/telemetry\",\n    w({\n      description: \"Store telemetry\",\n      tags: [\"telemetry\"],\n      responses: {\n        200: {\n          description: \"Traces stored\"\n        }\n      }\n    }),\n    storeTelemetryHandler\n  );\n  app.get(\n    \"/api/workflows/legacy\",\n    w({\n      description: \"Get all legacy workflows\",\n      tags: [\"legacyWorkflows\"],\n      responses: {\n        200: {\n          description: \"List of all legacy workflows\"\n        }\n      }\n    }),\n    getLegacyWorkflowsHandler\n  );\n  app.get(\n    \"/api/workflows/legacy/:workflowId\",\n    w({\n      description: \"Get legacy workflow by ID\",\n      tags: [\"legacyWorkflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Legacy Workflow details\"\n        },\n        404: {\n          description: \"Legacy Workflow not found\"\n        }\n      }\n    }),\n    getLegacyWorkflowByIdHandler\n  );\n  app.get(\n    \"/api/workflows/legacy/:workflowId/runs\",\n    w({\n      description: \"Get all runs for a legacy workflow\",\n      tags: [\"legacyWorkflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        { name: \"fromDate\", in: \"query\", required: false, schema: { type: \"string\", format: \"date-time\" } },\n        { name: \"toDate\", in: \"query\", required: false, schema: { type: \"string\", format: \"date-time\" } },\n        { name: \"limit\", in: \"query\", required: false, schema: { type: \"number\" } },\n        { name: \"offset\", in: \"query\", required: false, schema: { type: \"number\" } },\n        { name: \"resourceId\", in: \"query\", required: false, schema: { type: \"string\" } }\n      ],\n      responses: {\n        200: {\n          description: \"List of legacy workflow runs from storage\"\n        }\n      }\n    }),\n    getLegacyWorkflowRunsHandler\n  );\n  app.post(\n    \"/api/workflows/legacy/:workflowId/resume\",\n    w({\n      description: \"Resume a suspended legacy workflow step\",\n      tags: [\"legacyWorkflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                stepId: { type: \"string\" },\n                context: { type: \"object\" }\n              }\n            }\n          }\n        }\n      }\n    }),\n    resumeLegacyWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/legacy/:workflowId/resume-async\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Resume a suspended legacy workflow step\",\n      tags: [\"legacyWorkflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                stepId: { type: \"string\" },\n                context: { type: \"object\" }\n              }\n            }\n          }\n        }\n      }\n    }),\n    resumeAsyncLegacyWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/legacy/:workflowId/create-run\",\n    w({\n      description: \"Create a new legacy workflow run\",\n      tags: [\"legacyWorkflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"New legacy workflow run created\"\n        }\n      }\n    }),\n    createLegacyWorkflowRunHandler\n  );\n  app.post(\n    \"/api/workflows/legacy/:workflowId/start-async\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Execute/Start a legacy workflow\",\n      tags: [\"legacyWorkflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                input: { type: \"object\" }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Legacy Workflow execution result\"\n        },\n        404: {\n          description: \"Legacy Workflow not found\"\n        }\n      }\n    }),\n    startAsyncLegacyWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/legacy/:workflowId/start\",\n    w({\n      description: \"Create and start a new legacy workflow run\",\n      tags: [\"legacyWorkflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                input: { type: \"object\" }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Legacy Workflow run started\"\n        },\n        404: {\n          description: \"Legacy Workflow not found\"\n        }\n      }\n    }),\n    startLegacyWorkflowRunHandler\n  );\n  app.get(\n    \"/api/workflows/legacy/:workflowId/watch\",\n    w({\n      description: \"Watch legacy workflow transitions in real-time\",\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      tags: [\"legacyWorkflows\"],\n      responses: {\n        200: {\n          description: \"Legacy Workflow transitions in real-time\"\n        }\n      }\n    }),\n    watchLegacyWorkflowHandler\n  );\n  app.get(\n    \"/api/workflows\",\n    w({\n      description: \"Get all workflows\",\n      tags: [\"workflows\"],\n      responses: {\n        200: {\n          description: \"List of all workflows\"\n        }\n      }\n    }),\n    getWorkflowsHandler\n  );\n  app.get(\n    \"/api/workflows/:workflowId\",\n    w({\n      description: \"Get workflow by ID\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Workflow details\"\n        },\n        404: {\n          description: \"Workflow not found\"\n        }\n      }\n    }),\n    getWorkflowByIdHandler\n  );\n  app.get(\n    \"/api/workflows/:workflowId/runs\",\n    w({\n      description: \"Get all runs for a workflow\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        { name: \"fromDate\", in: \"query\", required: false, schema: { type: \"string\", format: \"date-time\" } },\n        { name: \"toDate\", in: \"query\", required: false, schema: { type: \"string\", format: \"date-time\" } },\n        { name: \"limit\", in: \"query\", required: false, schema: { type: \"number\" } },\n        { name: \"offset\", in: \"query\", required: false, schema: { type: \"number\" } },\n        { name: \"resourceId\", in: \"query\", required: false, schema: { type: \"string\" } }\n      ],\n      responses: {\n        200: {\n          description: \"List of workflow runs from storage\"\n        }\n      }\n    }),\n    getWorkflowRunsHandler\n  );\n  app.get(\n    \"/api/workflows/:workflowId/runs/:runId/execution-result\",\n    w({\n      description: \"Get execution result for a workflow run\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Workflow run execution result\"\n        },\n        404: {\n          description: \"Workflow run execution result not found\"\n        }\n      }\n    }),\n    getWorkflowRunExecutionResultHandler\n  );\n  app.get(\n    \"/api/workflows/:workflowId/runs/:runId\",\n    w({\n      description: \"Get workflow run by ID\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Workflow run by ID\"\n        },\n        404: {\n          description: \"Workflow run not found\"\n        }\n      }\n    }),\n    getWorkflowRunByIdHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/resume\",\n    w({\n      description: \"Resume a suspended workflow step\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                step: {\n                  oneOf: [{ type: \"string\" }, { type: \"array\", items: { type: \"string\" } }]\n                },\n                resumeData: { type: \"object\" },\n                runtimeContext: {\n                  type: \"object\",\n                  description: \"Runtime context for the workflow execution\"\n                }\n              },\n              required: [\"step\"]\n            }\n          }\n        }\n      }\n    }),\n    resumeWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/resume-async\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Resume a suspended workflow step\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                step: {\n                  oneOf: [{ type: \"string\" }, { type: \"array\", items: { type: \"string\" } }]\n                },\n                resumeData: { type: \"object\" },\n                runtimeContext: {\n                  type: \"object\",\n                  description: \"Runtime context for the workflow execution\"\n                }\n              },\n              required: [\"step\"]\n            }\n          }\n        }\n      }\n    }),\n    resumeAsyncWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/stream\",\n    w({\n      description: \"Stream workflow in real-time\",\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                inputData: { type: \"object\" },\n                runtimeContext: {\n                  type: \"object\",\n                  description: \"Runtime context for the workflow execution\"\n                }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"workflow run started\"\n        },\n        404: {\n          description: \"workflow not found\"\n        }\n      },\n      tags: [\"workflows\"]\n    }),\n    streamWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/create-run\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Create a new workflow run\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"New workflow run created\"\n        }\n      }\n    }),\n    createWorkflowRunHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/start-async\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Execute/Start a workflow\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                inputData: { type: \"object\" },\n                runtimeContext: {\n                  type: \"object\",\n                  description: \"Runtime context for the workflow execution\"\n                }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"workflow execution result\"\n        },\n        404: {\n          description: \"workflow not found\"\n        }\n      }\n    }),\n    startAsyncWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/start\",\n    w({\n      description: \"Create and start a new workflow run\",\n      tags: [\"workflows\"],\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                inputData: { type: \"object\" },\n                runtimeContext: {\n                  type: \"object\",\n                  description: \"Runtime context for the workflow execution\"\n                }\n              }\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"workflow run started\"\n        },\n        404: {\n          description: \"workflow not found\"\n        }\n      }\n    }),\n    startWorkflowRunHandler\n  );\n  app.get(\n    \"/api/workflows/:workflowId/watch\",\n    w({\n      description: \"Watch workflow transitions in real-time\",\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      tags: [\"workflows\"],\n      responses: {\n        200: {\n          description: \"workflow transitions in real-time\"\n        }\n      }\n    }),\n    watchWorkflowHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/runs/:runId/cancel\",\n    w({\n      description: \"Cancel a workflow run\",\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      tags: [\"workflows\"],\n      responses: {\n        200: {\n          description: \"workflow run cancelled\"\n        }\n      }\n    }),\n    cancelWorkflowRunHandler\n  );\n  app.post(\n    \"/api/workflows/:workflowId/runs/:runId/send-event\",\n    w({\n      description: \"Send an event to a workflow run\",\n      parameters: [\n        {\n          name: \"workflowId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: { type: \"object\", properties: { event: { type: \"string\" }, data: { type: \"object\" } } }\n          }\n        }\n      },\n      tags: [\"workflows\"],\n      responses: {\n        200: {\n          description: \"workflow run event sent\"\n        }\n      }\n    }),\n    sendWorkflowRunEventHandler\n  );\n  app.get(\n    \"/api/logs\",\n    w({\n      description: \"Get all logs\",\n      tags: [\"logs\"],\n      parameters: [\n        {\n          name: \"transportId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"fromDate\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"toDate\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"logLevel\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"filters\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"page\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"number\" }\n        },\n        {\n          name: \"perPage\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"number\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Paginated list of all logs\"\n        }\n      }\n    }),\n    getLogsHandler\n  );\n  app.get(\n    \"/api/logs/transports\",\n    w({\n      description: \"List of all log transports\",\n      tags: [\"logs\"],\n      responses: {\n        200: {\n          description: \"List of all log transports\"\n        }\n      }\n    }),\n    getLogTransports\n  );\n  app.get(\n    \"/api/logs/:runId\",\n    w({\n      description: \"Get logs by run ID\",\n      tags: [\"logs\"],\n      parameters: [\n        {\n          name: \"runId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"transportId\",\n          in: \"query\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"fromDate\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"toDate\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"logLevel\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"filters\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"page\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"number\" }\n        },\n        {\n          name: \"perPage\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"number\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Paginated list of logs for run ID\"\n        }\n      }\n    }),\n    getLogsByRunIdHandler\n  );\n  app.get(\n    \"/api/tools\",\n    w({\n      description: \"Get all tools\",\n      tags: [\"tools\"],\n      responses: {\n        200: {\n          description: \"List of all tools\"\n        }\n      }\n    }),\n    getToolsHandler\n  );\n  app.get(\n    \"/api/tools/:toolId\",\n    w({\n      description: \"Get tool by ID\",\n      tags: [\"tools\"],\n      parameters: [\n        {\n          name: \"toolId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Tool details\"\n        },\n        404: {\n          description: \"Tool not found\"\n        }\n      }\n    }),\n    getToolByIdHandler\n  );\n  app.post(\n    \"/api/tools/:toolId/execute\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Execute a tool\",\n      tags: [\"tools\"],\n      parameters: [\n        {\n          name: \"toolId\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"runId\",\n          in: \"query\",\n          required: false,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                data: { type: \"object\" },\n                runtimeContext: { type: \"object\" }\n              },\n              required: [\"data\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Tool execution result\"\n        },\n        404: {\n          description: \"Tool not found\"\n        }\n      }\n    }),\n    executeToolHandler(tools)\n  );\n  app.post(\n    \"/api/vector/:vectorName/upsert\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Upsert vectors into an index\",\n      tags: [\"vector\"],\n      parameters: [\n        {\n          name: \"vectorName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                indexName: { type: \"string\" },\n                vectors: {\n                  type: \"array\",\n                  items: {\n                    type: \"array\",\n                    items: { type: \"number\" }\n                  }\n                },\n                metadata: {\n                  type: \"array\",\n                  items: { type: \"object\" }\n                },\n                ids: {\n                  type: \"array\",\n                  items: { type: \"string\" }\n                }\n              },\n              required: [\"indexName\", \"vectors\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Vectors upserted successfully\"\n        }\n      }\n    }),\n    upsertVectors\n  );\n  app.post(\n    \"/api/vector/:vectorName/create-index\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Create a new vector index\",\n      tags: [\"vector\"],\n      parameters: [\n        {\n          name: \"vectorName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                indexName: { type: \"string\" },\n                dimension: { type: \"number\" },\n                metric: {\n                  type: \"string\",\n                  enum: [\"cosine\", \"euclidean\", \"dotproduct\"]\n                }\n              },\n              required: [\"indexName\", \"dimension\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Index created successfully\"\n        }\n      }\n    }),\n    createIndex\n  );\n  app.post(\n    \"/api/vector/:vectorName/query\",\n    bodyLimit(bodyLimitOptions),\n    w({\n      description: \"Query vectors from an index\",\n      tags: [\"vector\"],\n      parameters: [\n        {\n          name: \"vectorName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      requestBody: {\n        required: true,\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                indexName: { type: \"string\" },\n                queryVector: {\n                  type: \"array\",\n                  items: { type: \"number\" }\n                },\n                topK: { type: \"number\" },\n                filter: { type: \"object\" },\n                includeVector: { type: \"boolean\" }\n              },\n              required: [\"indexName\", \"queryVector\"]\n            }\n          }\n        }\n      },\n      responses: {\n        200: {\n          description: \"Query results\"\n        }\n      }\n    }),\n    queryVectors\n  );\n  app.get(\n    \"/api/vector/:vectorName/indexes\",\n    w({\n      description: \"List all indexes for a vector store\",\n      tags: [\"vector\"],\n      parameters: [\n        {\n          name: \"vectorName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"List of indexes\"\n        }\n      }\n    }),\n    listIndexes\n  );\n  app.get(\n    \"/api/vector/:vectorName/indexes/:indexName\",\n    w({\n      description: \"Get details about a specific index\",\n      tags: [\"vector\"],\n      parameters: [\n        {\n          name: \"vectorName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"indexName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Index details\"\n        }\n      }\n    }),\n    describeIndex\n  );\n  app.delete(\n    \"/api/vector/:vectorName/indexes/:indexName\",\n    w({\n      description: \"Delete a specific index\",\n      tags: [\"vector\"],\n      parameters: [\n        {\n          name: \"vectorName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        },\n        {\n          name: \"indexName\",\n          in: \"path\",\n          required: true,\n          schema: { type: \"string\" }\n        }\n      ],\n      responses: {\n        200: {\n          description: \"Index deleted successfully\"\n        }\n      }\n    }),\n    deleteIndex\n  );\n  if (options?.isDev || server?.build?.openAPIDocs || server?.build?.swaggerUI) {\n    app.get(\n      \"/openapi.json\",\n      h(app, {\n        includeEmptyPaths: true,\n        documentation: {\n          info: { title: \"Mastra API\", version: \"1.0.0\", description: \"Mastra API\" }\n        }\n      })\n    );\n  }\n  if (options?.isDev || server?.build?.swaggerUI) {\n    app.get(\n      \"/swagger-ui\",\n      w({\n        hide: true\n      }),\n      middleware({ url: \"/openapi.json\" })\n    );\n  }\n  if (options?.playground) {\n    app.get(\n      \"/refresh-events\",\n      w({\n        hide: true\n      }),\n      handleClientsRefresh\n    );\n    app.post(\n      \"/__refresh\",\n      w({\n        hide: true\n      }),\n      handleTriggerClientsRefresh\n    );\n    app.use(\"/assets/*\", async (c2, next) => {\n      const path = c2.req.path;\n      if (path.endsWith(\".js\")) {\n        c2.header(\"Content-Type\", \"application/javascript\");\n      } else if (path.endsWith(\".css\")) {\n        c2.header(\"Content-Type\", \"text/css\");\n      }\n      await next();\n    });\n    app.use(\n      \"/assets/*\",\n      serveStatic({\n        root: \"./playground/assets\"\n      })\n    );\n    app.use(\n      \"*\",\n      serveStatic({\n        root: \"./playground\"\n      })\n    );\n  }\n  app.get(\"*\", async (c2, next) => {\n    if (c2.req.path.startsWith(\"/api/\") || c2.req.path.startsWith(\"/swagger-ui\") || c2.req.path.startsWith(\"/openapi.json\")) {\n      return await next();\n    }\n    if (options?.playground) {\n      let indexHtml = await readFile(join(process.cwd(), \"./playground/index.html\"), \"utf-8\");\n      indexHtml = indexHtml.replace(\n        `'%%MASTRA_TELEMETRY_DISABLED%%'`,\n        `${Boolean(process.env.MASTRA_TELEMETRY_DISABLED)}`\n      );\n      return c2.newResponse(indexHtml, 200, { \"Content-Type\": \"text/html\" });\n    }\n    return c2.newResponse(html2, 200, { \"Content-Type\": \"text/html\" });\n  });\n  return app;\n}\nasync function createNodeServer(mastra, options = {}) {\n  const app = await createHonoServer(mastra, options);\n  const serverOptions = mastra.getServer();\n  const port = serverOptions?.port ?? (Number(process.env.PORT) || 4111);\n  const server = serve(\n    {\n      fetch: app.fetch,\n      port,\n      hostname: serverOptions?.host\n    },\n    () => {\n      const logger2 = mastra.getLogger();\n      const host = serverOptions?.host ?? \"localhost\";\n      logger2.info(` Mastra API running on port http://${host}:${port}/api`);\n      if (options?.playground) {\n        const playgroundUrl = `http://${host}:${port}`;\n        logger2.info(`\\u{1F468}\\u200D\\u{1F4BB} Playground available at ${playgroundUrl}`);\n      }\n      if (process.send) {\n        process.send({\n          type: \"server-ready\",\n          port,\n          host\n        });\n      }\n    }\n  );\n  return server;\n}\n\nexport { createHonoServer, createNodeServer };\n","// @ts-ignore\n// @ts-ignore\nimport { evaluate } from '@mastra/core/eval';\nimport { AvailableHooks, registerHook } from '@mastra/core/hooks';\nimport { TABLE_EVALS } from '@mastra/core/storage';\nimport { checkEvalStorageFields } from '@mastra/core/utils';\nimport { mastra } from '#mastra';\nimport { createNodeServer } from '#server';\n// @ts-ignore\nawait createNodeServer(mastra, { playground: true, isDev: true });\n\nregisterHook(AvailableHooks.ON_GENERATION, ({ input, output, metric, runId, agentName, instructions }) => {\n  evaluate({\n    agentName,\n    input,\n    metric,\n    output,\n    runId,\n    globalRunId: runId,\n    instructions,\n  });\n});\n\nregisterHook(AvailableHooks.ON_EVALUATION, async traceObject => {\n  const storage = mastra.getStorage();\n  if (storage) {\n    // Check for required fields\n    const logger = mastra?.getLogger();\n    const areFieldsValid = checkEvalStorageFields(traceObject, logger);\n    if (!areFieldsValid) return;\n\n    await storage.insert({\n      tableName: TABLE_EVALS,\n      record: {\n        input: traceObject.input,\n        output: traceObject.output,\n        result: JSON.stringify(traceObject.result || {}),\n        agent_name: traceObject.agentName,\n        metric_name: traceObject.metricName,\n        instructions: traceObject.instructions,\n        test_info: null,\n        global_run_id: traceObject.globalRunId,\n        run_id: traceObject.runId,\n        created_at: new Date().toISOString(),\n      },\n    });\n  }\n});\n"],"names":["recoveryStep","agents","feedbackLoopWorkflow","errorHandler","Hono","Node","HonoBase","HTTPException","getAgentCardByIdHandler","getAgentExecutionHandler","handleError","generateHandler","getAgentByIdHandler","getAgentsHandler","getEvalsByAgentIdHandler","getLiveEvalsByAgentIdHandler","streamGenerateHandler","createLegacyWorkflowRunHandler","getLegacyWorkflowByIdHandler","getLegacyWorkflowRunsHandler","getLegacyWorkflowsHandler","resumeAsyncLegacyWorkflowHandler","resumeLegacyWorkflowHandler","startAsyncLegacyWorkflowHandler","startLegacyWorkflowRunHandler","watchLegacyWorkflowHandler","ReadableStream","getLogTransports","getLogsByRunIdHandler","getLogsHandler","createThreadHandler","deleteThreadHandler","getMemoryStatusHandler","getMessagesHandler","getThreadByIdHandler","getThreadsHandler","getWorkingMemoryHandler","saveMessagesHandler","updateThreadHandler","updateWorkingMemoryHandler","getNetworkByIdHandler","getNetworksHandler","getTelemetryHandler","storeTelemetryHandler","executeAgentToolHandler","executeToolHandler","getToolByIdHandler","getToolsHandler","createIndex","deleteIndex","describeIndex","listIndexes","queryVectors","upsertVectors","getVNextNetworksHandler","getVNextNetworkByIdHandler","generateVNextNetworkHandler","streamGenerateVNextNetworkHandler","loopVNextNetworkHandler","loopStreamVNextNetworkHandler","getListenerHandler","getSpeakersHandler","cancelWorkflowRunHandler","createWorkflowRunHandler","getWorkflowByIdHandler","getWorkflowRunByIdHandler","getWorkflowRunExecutionResultHandler","getWorkflowRunsHandler","getWorkflowsHandler","resumeAsyncWorkflowHandler","resumeWorkflowHandler","sendWorkflowRunEventHandler","startAsyncWorkflowHandler","startWorkflowRunHandler","streamWorkflowHandler","watchWorkflowHandler","Request","Agent"],"mappings":"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","x_google_ignoreList":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79]}