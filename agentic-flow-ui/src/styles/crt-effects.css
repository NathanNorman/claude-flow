/* AGENTIC-FLOW UI - CRT Monitor Effects */
/* Scanlines, screen curvature, phosphor glow, and retro artifacts */

/* CRT Screen Effect Container */
.crt-screen {
  position: relative;
  width: 100%;
  min-height: 100vh;
  background: var(--bg-screen);
  overflow: hidden;
  
  /* Screen curvature effect */
  border-radius: 20px;
  box-shadow: 
    inset 0 0 100px rgba(0, 0, 0, 0.5),
    0 0 50px var(--phosphor-shadow);
}

/* CRT Screen Curvature Overlay */
.crt-screen::before {
  content: '';
  position: absolute;
  top: -10%;
  left: -10%;
  width: 120%;
  height: 120%;
  background: radial-gradient(
    ellipse at center,
    transparent 0%,
    transparent 60%,
    rgba(0, 0, 0, 0.1) 80%,
    rgba(0, 0, 0, 0.4) 100%
  );
  pointer-events: none;
  z-index: 1;
}

/* Scanline Effect */
.scanlines {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 1px,
    var(--bg-scanline) 1px,
    var(--bg-scanline) 2px
  );
  pointer-events: none;
  z-index: 2;
  opacity: var(--scanline-opacity);
}

/* Moving Scanline Animation */
.scanline-moving {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: linear-gradient(
    to bottom,
    transparent,
    rgba(0, 255, 0, 0.5),
    transparent
  );
  animation: scanline-move 8s linear infinite;
  pointer-events: none;
  z-index: 3;
}

@keyframes scanline-move {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100vh); }
}

/* Screen Flicker Effect */
.crt-flicker {
  animation: flicker var(--flicker-speed) infinite alternate;
}

@keyframes flicker {
  0% { opacity: 0.98; }
  100% { opacity: 1; }
}

/* Phosphor Burn-in Effect */
.phosphor-burn {
  position: relative;
}

.phosphor-burn::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  color: var(--phosphor-dark);
  opacity: 0.3;
  filter: blur(1px);
  z-index: -1;
  animation: burn-drift 30s ease-in-out infinite;
}

@keyframes burn-drift {
  0%, 100% { transform: translate(0, 0); }
  33% { transform: translate(1px, 1px); }
  66% { transform: translate(-1px, 0); }
}

/* RGB Chromatic Aberration */
.chromatic-aberration {
  position: relative;
}

.chromatic-aberration::before,
.chromatic-aberration::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.chromatic-aberration::before {
  color: var(--phosphor-bright);
  animation: chromatic-1 2s infinite;
  z-index: -1;
  opacity: 0.5;
}

.chromatic-aberration::after {
  color: var(--phosphor-normal);
  animation: chromatic-2 2s infinite;
  z-index: -2;
  opacity: 0.3;
}

@keyframes chromatic-1 {
  0%, 100% { transform: translate(0); }
  50% { transform: translate(-0.5px, 0.5px); }
}

@keyframes chromatic-2 {
  0%, 100% { transform: translate(0); }
  50% { transform: translate(0.5px, -0.5px); }
}

/* Screen Static Noise */
.static-noise {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.02;
  z-index: 1;
  pointer-events: none;
}

.static-noise::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 200%;
  height: 200%;
  background-image: 
    repeating-radial-gradient(
      circle at 0 0,
      transparent 0,
      var(--phosphor-bright) 1px,
      transparent 1px,
      transparent 2px
    );
  animation: static-shift 0.2s steps(5) infinite;
}

@keyframes static-shift {
  0% { transform: translate(0, 0); }
  20% { transform: translate(-5%, -10%); }
  40% { transform: translate(-10%, 5%); }
  60% { transform: translate(5%, -5%); }
  80% { transform: translate(10%, 10%); }
  100% { transform: translate(0, 0); }
}

/* Terminal Glow Border */
.terminal-border {
  border: 2px solid var(--phosphor-normal);
  box-shadow: 
    0 0 10px var(--phosphor-dark),
    inset 0 0 10px var(--phosphor-shadow);
  position: relative;
}

.terminal-border::before {
  content: '';
  position: absolute;
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  background: linear-gradient(
    45deg,
    var(--phosphor-dark) 0%,
    transparent 40%,
    transparent 60%,
    var(--phosphor-dark) 100%
  );
  opacity: 0.5;
  border-radius: inherit;
  animation: border-pulse 3s ease-in-out infinite;
}

@keyframes border-pulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

/* Boot Screen Effect */
.boot-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--bg-black);
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: boot-fade 2s ease-out forwards;
  animation-delay: 1s;
}

@keyframes boot-fade {
  0% { opacity: 1; }
  100% { opacity: 0; pointer-events: none; }
}

/* Monitor Power Button */
.power-indicator {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 10px;
  height: 10px;
  background: var(--phosphor-bright);
  border-radius: 50%;
  box-shadow: 
    0 0 10px var(--phosphor-bright),
    0 0 20px var(--phosphor-normal);
  animation: power-pulse 2s ease-in-out infinite;
}

@keyframes power-pulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}

/* Bad Signal Effect */
.bad-signal {
  animation: 
    signal-distort 0.5s steps(10) infinite,
    signal-roll 3s linear infinite;
}

@keyframes signal-distort {
  0% { filter: blur(0); transform: scaleX(1); }
  20% { filter: blur(0.5px); transform: scaleX(1.01); }
  40% { filter: blur(0); transform: scaleX(0.99); }
  60% { filter: blur(0.3px); transform: scaleX(1.005); }
  80% { filter: blur(0.1px); transform: scaleX(0.995); }
  100% { filter: blur(0); transform: scaleX(1); }
}

@keyframes signal-roll {
  0% { background-position: 0 0; }
  100% { background-position: 0 10px; }
}

/* Hover Effects */
.crt-hover:hover {
  text-shadow: 
    0 0 5px var(--phosphor-bright),
    0 0 10px var(--phosphor-normal),
    0 0 15px var(--phosphor-dim);
  animation: hover-glitch 0.3s ease-in-out;
}

@keyframes hover-glitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-1px, 1px); }
  40% { transform: translate(1px, -1px); }
  60% { transform: translate(-1px, 0); }
  80% { transform: translate(1px, 0); }
}