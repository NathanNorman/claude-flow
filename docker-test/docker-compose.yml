# Docker Compose for claude-code-flow and ruv-swarm integration testing
version: '3.8'

services:
  # =================== CLAUDE-CODE-FLOW SERVICES ===================
  claude-flow-dev:
    build:
      context: ..
      dockerfile: docker-test/Dockerfile
      target: development
    container_name: claude-flow-dev
    volumes:
      - ../:/app:delegated
      - claude-flow-node-modules:/app/node_modules
      - claude-flow-dist:/app/dist
      - ./volumes/claude-flow:/app/docker-test/volumes/claude-flow
      - ./volumes/shared:/app/docker-test/volumes/shared
    ports:
      - "3000:3000"
      - "3001:3001"
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DEBUG=claude-flow:*
      - SWARM_MODE=true
      - MCP_ENABLED=true
    networks:
      - claude-swarm-network
    depends_on:
      - claude-flow-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  claude-flow-test:
    build:
      context: ..
      dockerfile: docker-test/Dockerfile
      target: testing
    container_name: claude-flow-test
    volumes:
      - ../:/app:delegated
      - claude-flow-test-results:/app/test-results
      - claude-flow-coverage:/app/coverage
      - ./volumes/shared:/app/docker-test/volumes/shared
    environment:
      - NODE_ENV=test
      - CI=true
      - SWARM_MODE=true
    networks:
      - claude-swarm-network
    depends_on:
      - claude-flow-db
    profiles:
      - testing

  claude-flow-prod:
    build:
      context: ..
      dockerfile: docker-test/Dockerfile
      target: production
    container_name: claude-flow-prod
    volumes:
      - claude-flow-data:/app/data
      - ./volumes/shared:/app/docker-test/volumes/shared
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - claude-swarm-network
    depends_on:
      - claude-flow-db
    profiles:
      - production

  # =================== RUV-SWARM INTEGRATION ===================
  ruv-swarm-integration:
    build:
      context: ..
      dockerfile: docker-test/Dockerfile
      target: swarm-integration
    container_name: ruv-swarm-integration
    volumes:
      - ../:/app:delegated
      - ../../ruv-swarm:/app/ruv-swarm:delegated
      - ./volumes/ruv-swarm:/app/docker-test/volumes/ruv-swarm
      - ./volumes/shared:/app/docker-test/volumes/shared
    environment:
      - NODE_ENV=development
      - SWARM_MODE=true
      - MCP_ENABLED=true
      - SWARM_TOPOLOGY=mesh
      - SWARM_MAX_AGENTS=8
    networks:
      - claude-swarm-network
    depends_on:
      - claude-flow-dev
      - ruv-swarm-db
    profiles:
      - swarm

  # =================== DATABASE SERVICES ===================
  claude-flow-db:
    image: sqlite:latest
    container_name: claude-flow-db
    volumes:
      - claude-flow-db-data:/var/lib/sqlite
      - ./volumes/shared:/shared
    environment:
      - SQLITE_DATABASE=claude_flow.db
    networks:
      - claude-swarm-network

  ruv-swarm-db:
    image: sqlite:latest
    container_name: ruv-swarm-db
    volumes:
      - ruv-swarm-db-data:/var/lib/sqlite
      - ./volumes/shared:/shared
    environment:
      - SQLITE_DATABASE=ruv_swarm.db
    networks:
      - claude-swarm-network

  # =================== MONITORING & UTILITIES ===================
  test-runner:
    build:
      context: ..
      dockerfile: docker-test/Dockerfile
      target: testing
    container_name: test-runner
    volumes:
      - ../:/app:delegated
      - ./volumes/shared:/app/docker-test/volumes/shared
      - ./test-results:/app/test-results
    environment:
      - NODE_ENV=test
      - CI=true
      - PARALLEL_TESTS=true
    networks:
      - claude-swarm-network
    depends_on:
      - claude-flow-dev
      - ruv-swarm-integration
    profiles:
      - testing
    command: ["./docker-test/scripts/run-all-tests.sh"]

  performance-monitor:
    image: node:20-alpine
    container_name: performance-monitor
    volumes:
      - ./scripts:/scripts
      - ./volumes/shared:/shared
    environment:
      - MONITOR_INTERVAL=30
      - METRICS_OUTPUT=/shared/metrics.json
    networks:
      - claude-swarm-network
    command: ["node", "/scripts/performance-monitor.js"]
    profiles:
      - monitoring

  # =================== NGINX LOAD BALANCER ===================
  nginx-lb:
    image: nginx:alpine
    container_name: claude-flow-lb
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/shared:/shared
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - claude-flow-dev
      - claude-flow-prod
    networks:
      - claude-swarm-network
    profiles:
      - production

# =================== NETWORKS ===================
networks:
  claude-swarm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =================== VOLUMES ===================
volumes:
  claude-flow-node-modules:
    driver: local
  claude-flow-dist:
    driver: local
  claude-flow-data:
    driver: local
  claude-flow-db-data:
    driver: local
  claude-flow-test-results:
    driver: local
  claude-flow-coverage:
    driver: local
  ruv-swarm-db-data:
    driver: local