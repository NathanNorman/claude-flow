name: Matrix Compatibility Test

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday

jobs:
  test-matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: ['18.x', '20.x', '21.x']
        test-type: [unit, integration, e2e]
        exclude:
          # Skip some combinations to reduce CI time
          - os: windows-latest
            test-type: e2e
          - os: macos-latest  
            test-type: integration
          - node: '18.x'
            test-type: e2e
            
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    name: ${{ matrix.os }} / Node ${{ matrix.node }} / ${{ matrix.test-type }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'
        
    - name: Set environment variables
      shell: bash
      run: |
        echo "NODE_ENV=test" >> $GITHUB_ENV
        echo "CLAUDE_FLOW_ENV=test" >> $GITHUB_ENV
        echo "CI=true" >> $GITHUB_ENV
        echo "JEST_CONFIG=jest.config.ci.js" >> $GITHUB_ENV
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          ~/.npm
          ~/.cache
        key: ${{ runner.os }}-node${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node${{ matrix.node }}-
          ${{ runner.os }}-
          
    - name: Install dependencies
      run: |
        npm ci --ignore-scripts --no-audit --no-fund || npm ci --force
        
    - name: Run ${{ matrix.test-type }} tests
      shell: bash
      run: |
        node scripts/ci-test-runner.js ${{ matrix.test-type }}
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node }}-${{ matrix.test-type }}
        path: |
          test-results/
          coverage/
          
  summary:
    needs: test-matrix
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Generate summary report
      run: |
        echo "# Matrix Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| OS | Node | Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|---|---|---|---|" >> $GITHUB_STEP_SUMMARY
        
        # Add results to summary
        for dir in test-results-*; do
          if [ -d "$dir" ]; then
            os=$(echo $dir | cut -d'-' -f3)
            node=$(echo $dir | cut -d'-' -f4)
            type=$(echo $dir | cut -d'-' -f5)
            if [ -f "$dir/junit.xml" ]; then
              echo "| $os | $node | $type | ✅ |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $os | $node | $type | ❌ |" >> $GITHUB_STEP_SUMMARY
            fi
          fi
        done