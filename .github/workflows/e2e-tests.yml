name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      run_benchmarks:
        description: 'Run performance benchmarks'
        required: false
        default: 'false'
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  quick-test:
    name: Quick Smoke Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Run quick tests
      run: ./docker-test/run-e2e-tests.sh quick
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quick-test-results
        path: docker-test/reports/

  full-test-matrix:
    name: Full E2E Tests - ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
          - os: ubuntu-latest
            platform: linux/arm64
          - os: macos-latest
            platform: darwin/amd64
          - os: macos-13
            platform: darwin/arm64
          - os: windows-latest
            platform: windows/amd64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker (Linux)
      if: runner.os == 'Linux'
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        
    - name: Set up Docker (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install docker
        colima start
        
    - name: Set up Docker (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install docker-desktop
        
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
          
    - name: Run E2E tests
      env:
        DOCKER_BUILDKIT: 1
        BUILDKIT_PROGRESS: plain
        TEST_PLATFORM: ${{ matrix.platform }}
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          docker-test/run-e2e-tests.ps1
        else
          ./docker-test/run-e2e-tests.sh
        fi
        
    - name: Run benchmarks (if requested)
      if: github.event.inputs.run_benchmarks == 'true' || github.event_name == 'schedule'
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          docker-test/run-e2e-tests.ps1 performance
        else
          ./docker-test/run-e2e-tests.sh performance
        fi
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.platform }}
        path: docker-test/reports/
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest'
      with:
        files: docker-test/reports/coverage.xml
        flags: e2e
        name: e2e-${{ matrix.platform }}

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: claudeflow_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Run integration tests
      env:
        DATABASE_URL: postgres://testuser:testpass@localhost:5432/claudeflow_test
        REDIS_URL: redis://localhost:6379
      run: ./docker-test/run-e2e-tests.sh integration
      
    - name: Generate test report
      if: always()
      run: |
        npm run test:report || true
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results
        path: docker-test/reports/

  publish-results:
    name: Publish Test Results
    runs-on: ubuntu-latest
    needs: [quick-test, full-test-matrix, integration-test]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          **/junit-*.xml
          **/test-results-*.xml
        
    - name: Create summary
      if: always()
      run: |
        echo "## E2E Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Add test results
        for report in */integration-*.json; do
          if [ -f "$report" ]; then
            echo "### $(basename $(dirname $report))" >> $GITHUB_STEP_SUMMARY
            jq -r '.tests[] | "- \(.name): \(.status)"' $report >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        # Add performance results if available
        if ls */performance-*.json 1> /dev/null 2>&1; then
          echo "### Performance Benchmarks" >> $GITHUB_STEP_SUMMARY
          echo "| Operation | Mean (ms) | P95 (ms) |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|-----------|----------|" >> $GITHUB_STEP_SUMMARY
          for perf in */performance-*.json; do
            jq -r '.results | to_entries[] | "| \(.key) | \(.value.mean | tostring | .[0:6]) | \(.value.p95 | tostring | .[0:6]) |"' $perf >> $GITHUB_STEP_SUMMARY
          done
        fi

  deploy-test-results:
    name: Deploy Test Results
    runs-on: ubuntu-latest
    needs: [publish-results]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout gh-pages
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: test-results
        
    - name: Generate index
      run: |
        cd test-results
        echo "<html><body><h1>Claude Flow E2E Test Results</h1>" > index.html
        echo "<p>Generated: $(date)</p><ul>" >> index.html
        find . -name "*.html" -type f | while read file; do
          echo "<li><a href='$file'>$(basename $file)</a></li>" >> index.html
        done
        echo "</ul></body></html>" >> index.html
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./test-results
        destination_dir: e2e-results